{"version":3,"sources":["assets/whiteLogo.svg","util/env-config.js","api/service.js","components/Loader/index.js","components/ForgotPasswordModal/index.js","store/auth.js","pages/Login/index.js","assets/femaleLogo.png","assets/maleLogo.png","assets/blackLogo.png","components/MenuDrawer/index.js","store/docs.js","components/SearchBar/index.js","utilities/formatDate.js","store/requests.js","components/NotificationsMenu/index.js","components/Navbar/index.js","components/Sidebar/index.js","layout/Content/index.js","utilities/countries.js","pages/Signup/index.js","pages/PasswordReset/index.js","pages/ValidateProfile/index.js","utilities/capitalizeWord.js","pages/ViewHistory/index.js","store/modalResponse.js","components/UserDeactivateModal/index.js","components/UserActivateModal/index.js","components/UserRemoveModal/index.js","components/UserAddEditorModal/index.js","components/UserRemoveEditorModal/index.js","components/UserRoleFilter/index.js","components/UsersTable/index.js","components/DocumentPublicAccessModal/index.js","components/DocumentPublicAccessForbidModal/index.js","components/DocumentDeleteModal/index.js","components/DocumentsTableFilters/index.js","components/DocumentsTable/index.js","components/UsersApprovedDocumentsTable/index.js","pages/Home/index.js","components/UsersStatistics/UsersTotal/index.js","components/UsersStatistics/LastDayVisitors/index.js","components/DocumentsStatistics/DocumentsTotal/index.js","components/DocumentsStatistics/LastDayDocVisits/index.js","components/ChartsOptions/index.js","components/UsersStatistics/UsersVisitModal/index.js","components/UsersStatistics/LastSevenDayVisits/index.js","components/UsersStatistics/UsersAge/index.js","components/UsersStatistics/UsersCountries/index.js","components/DocumentsStatistics/PublicPrivateDocs/index.js","components/DocumentsStatistics/MostAccessedDocs/index.js","components/DocumentsStatistics/MostSearchedDocs/index.js","components/DocumentsStatistics/MostDownloadedDocs/index.js","pages/Statistics/index.js","components/PasswordChangeAccordion/index.js","pages/Profile/index.js","pages/NewDocument/index.js","assets/privateDoc.png","components/DocumentDownloadRequestModal/index.js","components/ViewDocumentDetails/index.js","components/DocumentAccessRequestModal/index.js","components/ShowDocumentFile/index.js","components/DownloadUsersTable/DownloadUsersTable.js","pages/ViewDocumentPage/index.js","pages/DocumentsPage/index.js","pages/SearchPage/index.js","pages/RequestsPage/index.js","components/ApproveRequestModal/index.js","components/UploadDocumentBox/index.js","components/DocumentRemoveModal/index.js","components/DocumentInfoEdit/index.js","pages/EditDocumentPage/index.js","layout/Dashboard.js","App.js","store/index.js","index.js"],"names":["ENV","apiBase","axios","defaults","withCredentials","Service","headers","Authorization","localStorage","getItem","get","this","reqConfig","reqData","post","patch","validationToken","resetToken","values","delete","id","Loader","props","className","style","backgroundColor","loaderColor","ForgotPasswordModal","useState","isLoading","setIsLoading","errorMessage","setErrorMessage","isAlertVisible","setIsAlertVisible","validationSchema","Yup","shape","email","required","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","handleResetPassword","value","a","forgotPassword","then","res","onClose","onOpenAlert","data","status","message","catch","err","response","Backdrop","sx","color","zIndex","open","Dialog","visible","DialogTitle","DialogContent","DialogContentText","Alert","severity","action","HighlightOff","onClick","cursor","marginBottom","AlertTitle","TextField","autoFocus","margin","label","type","fullWidth","variant","error","Typography","textAlign","font","DialogActions","Button","textTransform","fontFamily","fontWeight","authSlice","createSlice","name","initialState","isAuthenticated","currentUser","reducers","login","state","logout","setCurrentUser","payload","authActions","actions","Login","showPassword","setShowPassword","isForgotPasswordModalOpen","setIsForgotPasswordModalOpen","alertType","setAlertType","isResetPasswordAlertVisible","setIsResetPasswordAlertVisible","resetPasswordAlertMessage","setResetPasswordAlertMessage","isValidationProfileAlertVisible","setIsValidationProfileAlertVisible","validationProfileMessage","setValidationProfileMessage","validationAlertType","setValidationAlertType","password","min","max","defaultValues","reset","dispatch","useDispatch","isMounted","useRef","useEffect","current","handleLogin","userValues","user","active","setItem","token","Grid","container","justifyContent","alignItems","theme","drawer","src","logo","alt","item","xs","Box","display","Person","mr","my","borderColor","marginLeft","Lock","InputProps","endAdornment","InputAdornment","position","IconButton","Visibility","VisibilityOff","width","height","marginTop","to","textDecoration","MenuDrawer","useSelector","auth","closeDrawerOnSelectLink","Drawer","anchor","firstName","lastName","Divider","light","role","isActive","Home","History","Timeline","DocumentScanner","docsSlice","isSearchStarted","searchQuery","allDocs","startSearch","docsActions","SearchbarStyle","styled","top","left","backdropFilter","WebkitBackdropFilter","useStyles","makeStyles","textFieldSearchIcon","searchBtn","marginRight","Searchbar","isOpen","setOpen","setSearchQuery","navigate","useNavigate","classes","handleClose","searchHandler","e","key","ClickAwayListener","onClickAway","prev","Search","Slide","direction","in","mountOnEnter","unmountOnExit","Input","disableUnderline","placeholder","startAdornment","onChange","target","onKeyDown","formatDate","date","format","Date","formatDateTime","requestsSlice","allRequests","isRequestModalVisible","selectedRequest","setAllRequests","setRequestModalVisible","setSelectedRequest","resetInitialState","requestsActions","NotificationItem","notification","documentName","textOverflow","whiteSpace","overflow","maxWidth","heading","icon","DoneAll","renderContent","ListItemButton","disableGutters","py","px","mt","alpha","ListItemAvatar","Tooltip","title","ListItemText","primary","secondary","requestedBy","ml","AccessTime","createdAt","NotificationsMenu","requests","isMobileSmall","useMediaQuery","Popover","anchorEl","Boolean","PaperProps","elevation","filter","content","right","bgcolor","transform","transformOrigin","horizontal","vertical","anchorOrigin","flexGrow","length","Notifications","List","disablePadding","subheader","ListSubheader","disableSticky","typography","slice","map","index","_id","description","reason","document","userId","docId","p","disableRipple","searchFieldButton","searchFieldIcon","navbar","navbarIcons","searchField","padding","Navbar","openMenu","setOpenMenu","isDrawerOpen","setIsDrawerOpen","openNotificationMenu","setOpenNotificationMenu","isTabletMobile","handleCloseMenu","Snackbar","autoHideDuration","AppBar","Toolbar","size","edge","MenuOpen","event","currentTarget","Badge","badgeContent","ExpandMore","Menu","Stack","spacing","gender","femaleLogo","maleLogo","MenuItem","ListItemIcon","PersonOutlined","clear","Logout","Sidebar","ContentHome","isUserLoggedIn","countries","code","phone","suggested","Signup","matches","phoneNumber","dob","country","organization","registrationPurpose","control","handleSignup","signup","WebkitBoxShadow","MozBoxShadow","boxShadow","borderRadius","paddingBottom","columns","sm","Email","Phone","render","field","defaultCountry","disableAreaCodes","Event","LocalizationProvider","dateAdapter","AdapterDateFns","defaultValue","DatePicker","inputFormat","disableFuture","toJSON","clearable","renderInput","params","rules","Wc","FormControl","component","FormLabel","RadioGroup","row","FormControlLabel","Radio","Public","Autocomplete","options","getOptionLabel","option","renderOption","flexShrink","loading","toLowerCase","srcSet","Work","FindInPage","multiline","rows","PasswordReset","useParams","responseMessage","setResponseMessage","isPasswordResetSuccessful","setIsPasswordResetSuccessful","accessApproved","setAccessApproved","findResetTokenHandler","findResetToken","passwordConfirm","oneOf","resetPasswordHandler","resetPassword","ValidateProfile","isAccessApproved","setIsAccessApproved","isResendEmailButtonVisible","setIsResendEmailButtonVisible","alertResponseMessage","setAlertResponseMessage","validateProfileHanlder","validateProfile","resendValidationEmailHandler","resendValidationEmail","capitalizeWord","docName","toUpperCase","ViewHistory","documents","setDocuments","isMobile","fetchUserHistoryReview","getUserHistoryReview","userDocs","userReviewDocs","newReviewArr","usr","forEach","doc","push","timeVisited","time","documentTypeHandler","documentsTableData","documentType","fileType","documentLastVisit","fontSize","moment","locale","fromNow","placement","ownership","location","tableLocalization","pagination","labelDisplayedRows","previousTooltip","nextTooltip","lastTooltip","firstTooltip","labelRowsPerPage","labelRowsSelect","toolbar","nRowsSelected","searchPlaceholder","showColumnsTitle","addRemoveColumns","header","body","emptyDataSourceMessage","filterRow","filterTooltip","Breadcrumbs","sorting","align","searchable","cellStyle","VisibilityOutlined","tooltip","actionsColumnIndex","columnsButton","grouping","paging","pageSizeOptions","pageSize","emptyRowsWhenPaging","rowStyle","headerStyle","background","paddingRight","localization","modalResponseSlice","isModalResAlertVisible","modalResMessage","modalAlertType","setIsModalResAlertVisible","setModalResMessage","setModalAlertType","setIsModalResAlertHidden","modalResponseActions","UserDeactivateModal","selectedUser","selected","deactivateUserHandler","deactivateUser","UserActivateModal","activateUserHandler","activateUser","UserRemoveModal","removeUserHandler","removeUser","UserAddEditorModal","addUserAsEditorHandler","userEditorAdd","UserRemoveEditorModal","removeUserAsEditorHandler","userEditorRemove","resetBtn","selectField","UserRoleFilter","roleValues","setRoleValues","getUserRole","InputLabel","Select","labelId","multiple","onFilterUsers","input","OutlinedInput","renderValue","flexWrap","gap","Chip","startIcon","HighlightOffOutlined","onResetFilter","UsersTable","users","setUsers","isUserDeactivateModalVisible","setIsUserDeactivateModalVisible","isUserActivateModalVisible","setIsUserActivateModalVisible","isUserRemoveModalVisible","setIsUserRemoveModalVisible","selectedRow","setSelectedRow","isUserAddEditorModalVisible","setIsUserAddEditorModalVisible","isUserRemoveEditorModalVisible","setIsUserRemoveEditorModalVisible","allUsers","setAllUsers","fetchAllUsersHandler","getAllUsers","userRoleHandler","editorColumnHandler","isDisabled","removed","disabled","CheckBox","CheckBoxOutlineBlank","usersTableData","firstLastName","editor","tmpUserArr","includes","rowData","ToggleOff","ToggleOn","handleOpenUserActivateModal","handleOpenUserDeactivateModal","DeleteOutlined","handleOpenUserRemoveModal","isOk","tmpUsersData","tmpRequestsData","req","DocumentPublicAccessModal","selectedDoc","approvePublicAccess","DocumentPublicAccessForbidModal","forbidPublicAccess","DocumentDeleteModal","deleteDocumentHandler","deleteDocument","filterBtns","filterBtnsField","DocumentsTableFilters","fileTypeValues","setFileTypeValues","rangeValue","setRangeValue","docValue","setDocValue","docLastChangeValue","setDocLastChangeValue","biggestDoc","getFileType","isResetFilterBtnsVisible","every","val","undefined","some","md","Slider","valueLabelDisplay","valueLabelFormat","toFixed","step","DateRangePicker","startText","endText","newValue","startProps","endProps","Fragment","mx","onResetFilters","onApplyFilters","newDocBtn","DocumentsTable","allDocuments","setAllDocuments","isVisibleDocAccessApprovedModal","setIsVisibleDocAccessApprovedModal","isVisibleDocAccessForbiddenModal","setIsVisibleDocAccessForbiddenModal","isDeleteDocModalVisible","setIsDeleteDocModalVisible","setBiggestDoc","fetchAllDocumentsHandler","getAllDocuments","docSizes","Number","documentSize","Math","fileSize","initialSize","publicAccess","tableOptions","tmpDocArr","start","end","lastEdit","getTime","customSort","b","EditOutlined","handleOpenDeleteDocModal","tmpDocData","UsersApprovedDocumentsTable","fetchAllApprovedDocumentsHandler","getApprovedDocuments","userFilteredDocs","approvedDocuments","pendingDocuments","RootStyle","Card","IconWrapperStyle","backgroundImage","TotalUsersNumber","totalUsers","duration","opacity","LastDayVisitors","todayVisit","TotalDocsNumber","totalDocs","LastDayVisits","lastDaysDocVisits","OptionCharts","useTheme","LABEL_TOTAL","show","palette","text","subtitle2","LABEL_VALUE","offsetY","h3","chart","zoom","enabled","foreColor","states","hover","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","lineCap","grid","strokeDashArray","divider","xaxis","axisBorder","axisTicks","markers","strokeColors","paper","x","legend","horizontalAlign","radius","itemMargin","labels","colors","plotOptions","bar","columnWidth","pie","donut","total","radialBar","track","strokeWidth","grey","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","breakpoints","UsersVisitModal","dividers","prevState","EventNote","subtract","ExpandLess","Collapse","timeout","ListItem","i","LastSevenDayLogin","isUsersVisitModalVisible","setIsUsersVisitModalVisible","lastDaysAppVisits","lastDaysAppVisitsUsers","CHART_DATA","chartOptions","merge","ChartOptions","shared","intersect","y","formatter","CardHeader","ViewList","pb","dir","series","ChartWrapperStyle","alignContent","borderTop","CHART_HEIGHT","UsersAge","usersAge","floating","dropShadow","fillSeriesColor","seriesName","UsersCountries","usersCountries","sortedCountries","unshift","marker","barHeight","categories","PublicPrivateDocs","publicDocs","privateDocs","MostAccessedDocs","docs","mostAccessedDocs","visits","MostSearchedDocs","mostSearchedDocs","searchNumber","MostDownloadedDocs","mostDownloadedDocs","downloadNumber","Statistics","setPublicDocs","setPrivateDocs","setMostAccessedDocs","setMostSearchedDocs","setMostDownloadedDocs","setLastDaysDocVisits","setTotalDocs","setLastDaysAppVisits","setLastDaysAppVisitsUsers","setUsersAge","setUsersCountries","setTotalUsers","setTodayVisit","fetchDocsStats","getDocsStats","sortedDocs","lastDayDocsVisits","fetchUsersStats","getUsersStats","lg","PasswordChangeAccordion","panel","showCurrentPassword","setShowCurrentPassword","isSuccessAlertVisible","setIsSuccessAlertVisible","isErrorAlertVisible","setIsErrorAlertVisible","alertMessage","setAlertMessage","isExpandedAccordion","setIsExpandedAccordion","currentPassword","handleUpdatePassword","passwordValues","updateUserPassword","newPassword","window","scrollTo","behavior","Accordion","expanded","isExpanded","m","AccordionSummary","expandIcon","AccordionDetails","mb","Profile","switchChecked","setSwitchChecked","address","city","about","handleUpdateProfile","updateUserProfile","FormGroup","Switch","checked","labelPlacement","LocationOn","readOnly","isOptionEqualToValue","SaveOutlined","NewDocument","setFileType","selectedFileType","setSelectedFileType","files","setFiles","isFileAlertVisible","setIsFileAlertVisible","isUploadAlertVisible","setIsUploadAlertVisible","uploadMessage","setUploadMessage","uploadAlertType","setUploadAlertType","keyWords","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","fileId","maxFiles","maxSize","getRootProps","getInputProps","handleSaveDocument","docValues","formData","FormData","append","keys","createDocument","AddCircleOutlineOutlined","hidden","secondaryAction","tmpFiles","removeImageFromFiles","DeleteOutline","path","Checkbox","CloudUploadOutlined","DocumentDonwloadRequestModal","handleSendDownloadRequest","createRequest","documentInfo","docMoreInfo","docLabel","documentInfoGrid","reqAccessBtn","ViewDocumentDetails","downloadImageIndex","setDownloadImageIndex","isDownlaodRequestModalVisible","setIsDownloadRequestModalVisible","documentProp","isDownloadAvailable","isDownloadRequestSent","isDocPrivate","downloadFilesHandler","downloadDocument","responseType","downloadDoc","link","createElement","href","appendChild","click","removeChild","minWidth","maxHeight","uploadedBy","editedBy","isRequestSent","onChangeDownloadStatus","DocumentAccessRequestModal","handleRequestAccess","SwiperCore","use","Zoom","Navigation","Pagination","ShowDocumentFile","isImageViewerOpen","setIsImageViewerOpen","currentImage","setCurrentImage","imageFiles","setImageFiles","tmpImageFiles","clickNextViewerImage","tmpImg","clickPreviousViewerImage","onContextMenu","preventDefault","navigation","clickable","imgs","currImg","onClickPrev","onClickNext","spinnerDisabled","backdropCloseable","onClickImg","controls","controlsList","customAdditionalControls","sandbox","encodeURIComponent","frameBorder","allowFullScreen","getFilesData","DownloadUsersTable","username","ViewDocumentPage","setDocument","setIsDocPrivate","isDocAccessRequestModalVisible","setIsDocAccessRequestModalVisible","setIsRequestSent","setIsDownloadAvailable","setIsDownloadRequestSent","fetchSelectedDocument","getDocument","approvedDownload","pendingDownload","Paper","privateDocImage","downloadedBy","sentMessage","DocumentsPage","SearchPage","fetchSearchedDocs","searchDocument","query","RequestsPage","requestsTableData","request","typeTable","isApproved","createdAtTable","handleOpenApproveRequestModal","ApproveRequestModal","successResponse","filteredRequests","errResponse","approveRequestHandler","approveRequest","declineRequestHandler","declineRequest","UploadBox","addImageBox","isEditEnabled","changeFileTypeHandler","handleEditFiles","_","images","Cancel","editedFiles","onEdit","ref","editedImagesArr","newImage","Add","DocumentRemoveModal","removeDocument","WarningAmber","DocumentInfoEdit","isEditAlertVisible","setIsEditAlertVisible","editMessage","setEditMessage","editAlertType","setEditAlertType","isRemoveDocModalVisible","setIsRemoveDocModalVisible","handleEditDocument","editDocument","onShowPreview","onSwitchDisable","Delete","Edit","setTimeout","EditDocumentPage","updatedFiles","setUpdatedFiles","setIsEditEnabled","isPreviewBtnVisible","setIsPreviewBtnVisible","UploadDocumentBox","Dashboard","modalResponse","fetchAllRequests","getAllRequests","element","Content","createTheme","main","App","isLoggedIn","isUserAutheticated","userAuthenticated","ThemeProvider","store","configureStore","reducer","authReducer","docsReducer","requestsReducer","modalResponseReducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a9cbe6a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/whiteLogo.2bba4759.svg\";","const ENVIRONMENTS = {\n  dev: {\n    apiBase: 'http://localhost:4000/api',\n  },\n  prod: {\n    apiBase: 'http://3.127.151.10:4000/api',\n  },\n};\n\nconst ENV = ENVIRONMENTS[process.env.REACT_APP_ENV];\n\nexport default ENV;\n","import axios from 'axios';\nimport ENV from '../util/env-config';\naxios.defaults.withCredentials = true;\n// axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\n//     'token'\n// )}`;\n\nclass Service {\n  static reqConfig() {\n    return {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    };\n  }\n\n  static getCsrfToken() {\n    return axios.get(\n      ENV.apiBase + '/getCsrfToken',\n      this.reqConfig(),\n      this.reqConfig()\n    );\n  }\n\n  static signup(reqData) {\n    return axios.post(ENV.apiBase + '/users/signup', reqData, this.reqConfig());\n  }\n\n  static login(reqData) {\n    return axios.post(ENV.apiBase + '/users/login', reqData, this.reqConfig());\n  }\n\n  static logout() {\n    return axios.get(ENV.apiBase + '/users/logout', this.reqConfig());\n  }\n\n  static validateProfile(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/validateProfile/' + reqData.validationToken,\n      this.reqConfig()\n    );\n  }\n\n  static userAuthenticated(reqData) {\n    return axios.post(ENV.apiBase + '/users/auth', reqData, this.reqConfig());\n  }\n\n  static forgotPassword(reqData) {\n    return axios.post(\n      ENV.apiBase + '/users/forgotPassword',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static resetPassword(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/resetPassword/' + reqData.resetToken,\n      reqData.values,\n      this.reqConfig()\n    );\n  }\n\n  static findResetToken(reqData) {\n    return axios.post(\n      ENV.apiBase + '/users/findResetToken',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static resendValidationEmail(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/resendValidationEmail/' + reqData.validationToken,\n      this.reqConfig()\n    );\n  }\n\n  static getAllUsers() {\n    return axios.get(ENV.apiBase + '/users', this.reqConfig());\n  }\n\n  static deactivateUser(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/deactivateUser',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static activateUser(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/activateUser',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static removeUser(reqData) {\n    return axios.delete(ENV.apiBase + '/users/' + reqData, this.reqConfig());\n  }\n\n  static userEditorAdd(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/userEditorAdd',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static userEditorRemove(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/userEditorRemove',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static updateUserProfile(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/updateUserProfile',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static updateUserPassword(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/users/updateUserPassword',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static createDocument(reqData) {\n    return axios.post(ENV.apiBase + '/documents', reqData, this.reqConfig());\n  }\n\n  static getAllDocuments() {\n    return axios.get(ENV.apiBase + '/documents', this.reqConfig());\n  }\n\n  static getDocument(reqData) {\n    return axios.get(\n      ENV.apiBase + '/documents/' + reqData.id,\n      this.reqConfig()\n    );\n  }\n\n  static approvePublicAccess(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/documents/approvePublicAccess',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static forbidPublicAccess(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/documents/forbidPublicAccess',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static deleteDocument(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/documents/deleteDocument',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static editDocument(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/documents/editDocument',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static removeDocument(reqData) {\n    return axios.delete(\n      ENV.apiBase + '/documents/removeDocument/' + reqData,\n      this.reqConfig()\n    );\n  }\n\n  static getUserHistoryReview() {\n    return axios.get(\n      ENV.apiBase + '/documents/userHistoryReview',\n      this.reqConfig()\n    );\n  }\n\n  static searchDocument(reqData) {\n    return axios.post(\n      ENV.apiBase + '/documents/searchDocument',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static getApprovedDocuments() {\n    return axios.get(\n      ENV.apiBase + '/documents/approvedDocuments',\n      this.reqConfig()\n    );\n  }\n\n  static downloadDocument(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/documents/download',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static createRequest(reqData) {\n    return axios.post(ENV.apiBase + '/requests', reqData, this.reqConfig());\n  }\n\n  static getAllRequests() {\n    return axios.get(ENV.apiBase + '/requests', this.reqConfig());\n  }\n\n  static approveRequest(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/requests/approveRequest',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static declineRequest(reqData) {\n    return axios.patch(\n      ENV.apiBase + '/requests/declineRequest',\n      reqData,\n      this.reqConfig()\n    );\n  }\n\n  static getLastDaysLoginStat() {\n    return axios.get(\n      ENV.apiBase + '/statistics/lastDaysLoginStatistics',\n      this.reqConfig()\n    );\n  }\n\n  static getDobAverageOfUsers() {\n    return axios.get(\n      ENV.apiBase + '/statistics/getDobAverageOfUsers',\n      this.reqConfig()\n    );\n  }\n\n  static getCountriesOfUsers() {\n    return axios.get(\n      ENV.apiBase + '/statistics/getCountriesOfUsers',\n      this.reqConfig()\n    );\n  }\n\n  static getUsersStats() {\n    return axios.get(\n      ENV.apiBase + '/statistics/getUsersStats',\n      this.reqConfig()\n    );\n  }\n\n  static getDocsStats() {\n    return axios.get(\n      ENV.apiBase + '/statistics/getDocsStats',\n      this.reqConfig()\n    );\n  }\n}\n\nexport default Service;\n","import React from 'react';\nimport './style.css';\n\nfunction Loader(props) {\n    return (\n        <div className='spinner'>\n            <div\n                className='rect1'\n                style={{ backgroundColor: props.loaderColor && '#393E46' }}\n            ></div>\n            <div\n                className='rect2'\n                style={{ backgroundColor: props.loaderColor && '#393E46' }}\n            ></div>\n            <div\n                className='rect3'\n                style={{ backgroundColor: props.loaderColor && '#393E46' }}\n            ></div>\n            <div\n                className='rect4'\n                style={{ backgroundColor: props.loaderColor && '#393E46' }}\n            ></div>\n            <div\n                className='rect5'\n                style={{ backgroundColor: props.loaderColor && '#393E46' }}\n            ></div>\n        </div>\n    );\n}\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Typography,\n    Backdrop,\n    Alert,\n    AlertTitle,\n} from '@mui/material';\nimport { HighlightOff } from '@mui/icons-material';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\n\nfunction ForgotPasswordModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .required('Email je obavezan')\n            .email('Email nije validan'),\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n    });\n\n    const handleResetPassword = async (value) => {\n        setIsLoading(true);\n        await Service.forgotPassword({ email: value.email })\n            .then((res) => {\n                setIsLoading(false);\n                props.onClose();\n                props.onOpenAlert(res.data.status, res.data.message);\n            })\n            .catch((err) => {\n                // console.error(err);\n                setIsAlertVisible(true);\n                setErrorMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena'\n                );\n                setIsLoading(false);\n            });\n    };\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog open={props.visible} onClose={props.onClose}>\n                <DialogTitle>Zaboravljena šifra</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Molimo vas da unese vaš mail, kako bismo vam poslali\n                        reset link da oporavite vaš račun.\n                    </DialogContentText>\n                    {isAlertVisible && (\n                        <Alert\n                            severity='error'\n                            action={\n                                <HighlightOff\n                                    onClick={() => setIsAlertVisible(false)}\n                                    style={{ cursor: 'pointer' }}\n                                />\n                            }\n                            style={{ marginBottom: 15 }}\n                        >\n                            <AlertTitle>Greška</AlertTitle>\n                            {errorMessage}\n                        </Alert>\n                    )}\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        id='name'\n                        label='Email'\n                        type='email'\n                        fullWidth\n                        required\n                        variant='standard'\n                        {...register('email')}\n                        error={errors.email ? true : false}\n                    />\n\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            textAlign: 'left',\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.email?.message}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant='outlined'\n                        color='primary'\n                        onClick={props.onClose}\n                        sx={{\n                            textTransform: 'none',\n                            fontFamily: 'Roboto',\n                            fontWeight: 'bold',\n                        }}\n                    >\n                        Poništi\n                    </Button>\n\n                    <Button\n                        variant='contained'\n                        sx={{\n                            textTransform: 'none',\n                            fontFamily: 'Roboto',\n                            color: '#fff',\n                            fontWeight: 'bold',\n                        }}\n                        onClick={handleSubmit(handleResetPassword)}\n                    >\n                        Prijavi\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ForgotPasswordModal;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialAuthState = {\n    isAuthenticated: false,\n    currentUser: {},\n};\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n            state.currentUser = {};\n        },\n        setCurrentUser(state, action) {\n            state.currentUser = action.payload;\n        },\n    },\n});\n\nexport const authActions = authSlice.actions;\n\nexport default authSlice.reducer;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Grid,\n  TextField,\n  Button,\n  InputAdornment,\n  IconButton,\n  Box,\n  Typography,\n  Backdrop,\n  Alert,\n  AlertTitle,\n} from '@mui/material';\nimport {\n  Person,\n  Lock,\n  Visibility,\n  VisibilityOff,\n  HighlightOff,\n} from '@mui/icons-material';\nimport './style.css';\nimport logo from '../../assets/whiteLogo.svg';\nimport ForgotPasswordModal from '../../components/ForgotPasswordModal';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport Service from '../../api/service';\nimport { authActions } from '../../store/auth';\nimport { useDispatch } from 'react-redux';\nimport Loader from '../../components/Loader';\n\nfunction Login() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\n  const [isForgotPasswordModalOpen, setIsForgotPasswordModalOpen] =\n    useState(false);\n  const [alertType, setAlertType] = useState('');\n  const [isResetPasswordAlertVisible, setIsResetPasswordAlertVisible] =\n    useState(false);\n  const [resetPasswordAlertMessage, setResetPasswordAlertMessage] =\n    useState('');\n  const [isValidationProfileAlertVisible, setIsValidationProfileAlertVisible] =\n    useState(false);\n  const [validationProfileMessage, setValidationProfileMessage] = useState('');\n  const [validationAlertType, setValidationAlertType] = useState('success');\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .required('Email je obavezan')\n      .email('Email nije validan'),\n    password: Yup.string()\n      .required('Šifra je obavezna')\n      .min(8, 'Šifra mora da sadrži najmanje 8 karaktera')\n      .max(24, 'Šifra može da sadrži najviše 24 karaktera'),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n    resolver: yupResolver(validationSchema),\n  });\n  const dispatch = useDispatch();\n\n  let isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const handleLogin = async (userValues) => {\n    setIsLoading(true);\n    await Service.login(userValues)\n      .then((res) => {\n        if (isMounted.current) {\n          if (!res.data.user.active) {\n            setIsValidationProfileAlertVisible(true);\n            setValidationProfileMessage(res.data.message);\n            setValidationAlertType('warning');\n            reset();\n          } else {\n            dispatch(authActions.login());\n            dispatch(authActions.setCurrentUser(res.data.user));\n            localStorage.setItem('isLoggedIn', 'true');\n            localStorage.setItem('token', res.data.token);\n            setIsLoading(false);\n            reset();\n          }\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(\n          err.response\n            ? err.response.data.message\n            : 'Konekcija sa serverom nije uspostavljena'\n        );\n        setIsAlertVisible(true);\n      });\n    setIsLoading(false);\n  };\n\n  const showResetPasswordAlertHandler = (type, message) => {\n    setAlertType(type);\n    setResetPasswordAlertMessage(message);\n    setIsResetPasswordAlertVisible(true);\n  };\n\n  return (\n    <div>\n      <div className='resetPasswordAlert'>\n        {isResetPasswordAlertVisible && (\n          <Alert\n            severity={`${alertType}`}\n            action={\n              <HighlightOff\n                onClick={() => setIsResetPasswordAlertVisible(false)}\n                style={{ cursor: 'pointer' }}\n              />\n            }\n            sx={{ font: '14px Roboto' }}\n          >\n            {resetPasswordAlertMessage}\n          </Alert>\n        )}\n      </div>\n\n      <div className='validationProfileAlert'>\n        {isValidationProfileAlertVisible && (\n          <Alert\n            severity={validationAlertType}\n            action={\n              <HighlightOff\n                onClick={() => setIsValidationProfileAlertVisible(false)}\n                style={{ cursor: 'pointer' }}\n              />\n            }\n            sx={{ font: '14px Roboto' }}\n          >\n            {validationProfileMessage}\n          </Alert>\n        )}\n      </div>\n\n      <Grid container justifyContent='center' alignItems='center'>\n        <div className='loginContent'>\n          <h2 className='headingLogin'>Digitalna biblioteka</h2>\n          <Backdrop\n            sx={{\n              color: '#fff',\n              zIndex: (theme) => theme.zIndex.drawer + 1,\n            }}\n            open={isLoading}\n          >\n            <Loader />\n          </Backdrop>\n          <form>\n            <div className='upperBox'>\n              <h4>Prijava</h4>\n              <img src={logo} alt='logo' />\n            </div>\n\n            <div className='formFieldsBox'>\n              {isAlertVisible && (\n                <Alert\n                  severity='error'\n                  action={\n                    <HighlightOff\n                      onClick={() => setIsAlertVisible(false)}\n                      style={{ cursor: 'pointer' }}\n                    />\n                  }\n                  style={{\n                    marginBottom: 15,\n                  }}\n                >\n                  <AlertTitle>Greška</AlertTitle>\n                  {errorMessage}\n                  {/* <strong> Pokušajte ponovo !</strong> */}\n                </Alert>\n              )}\n              <Grid item xs={16}>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                  }}\n                >\n                  <Person\n                    sx={{\n                      color: '#393E46',\n                      mr: 1,\n                      my: 0.5,\n                    }}\n                  />\n                  <TextField\n                    id='email'\n                    label='Email'\n                    type='email'\n                    fullWidth\n                    required\n                    variant='standard'\n                    {...register('email')}\n                    error={errors.email ? true : false}\n                    style={{ borderColor: '#00ab55' }}\n                  />\n                </Box>\n                <Typography\n                  variant='inherit'\n                  color='red'\n                  sx={{\n                    textAlign: 'left',\n                    marginLeft: 4,\n                    font: '12px Roboto',\n                  }}\n                >\n                  {errors.email?.message}\n                </Typography>\n              </Grid>\n              <Grid item xs={16}>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                  }}\n                >\n                  <Lock\n                    sx={{\n                      color: '#393E46',\n                      mr: 1,\n                      my: 0.5,\n                    }}\n                  />\n                  <TextField\n                    id='password'\n                    label='Šifra'\n                    type={showPassword ? 'text' : 'password'}\n                    fullWidth\n                    required\n                    variant='standard'\n                    {...register('password')}\n                    error={errors.password ? true : false}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position='end'>\n                          <IconButton\n                            aria-label='toggle password visibility'\n                            onClick={() => setShowPassword(!showPassword)}\n                          >\n                            {showPassword ? (\n                              <Visibility\n                                style={{\n                                  color: '#393E46',\n                                }}\n                              />\n                            ) : (\n                              <VisibilityOff\n                                style={{\n                                  color: '#393E46',\n                                }}\n                              />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Box>\n                <Typography\n                  variant='inherit'\n                  color='red'\n                  sx={{\n                    textAlign: 'left',\n                    marginLeft: 4,\n                    font: '12px Roboto',\n                  }}\n                >\n                  {errors.password?.message}\n                </Typography>\n              </Grid>\n            </div>\n            <Button\n              variant='contained'\n              style={{\n                textTransform: 'none',\n                fontWeight: 'bold',\n                // backgroundImage: `linear-gradient(to bottom right, #D0F2FF, #1890FF)`,\n                backgroundColor: '#393E46',\n                color: '#fff',\n                width: '75%',\n                height: '10%',\n                marginTop: -50,\n                marginBottom: 100,\n              }}\n              onClick={handleSubmit(handleLogin)}\n              type='submit'\n            >\n              Prijava\n            </Button>\n          </form>\n          <div>\n            <p\n              className='forgotPassBtn'\n              onClick={() => setIsForgotPasswordModalOpen(true)}\n            >\n              Zaboravljena šifra?\n            </p>\n            <p className='registrationBtn'>\n              Postanite korisnik,\n              <NavLink\n                to='/registracija'\n                style={{\n                  textDecoration: 'none',\n                  color: 'black',\n                }}\n              >\n                <strong> Registrujte se</strong>\n              </NavLink>\n            </p>\n          </div>\n        </div>\n        {isForgotPasswordModalOpen && (\n          <ForgotPasswordModal\n            visible={isForgotPasswordModalOpen}\n            onClose={() => setIsForgotPasswordModalOpen(false)}\n            onOpenAlert={showResetPasswordAlertHandler}\n          />\n        )}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/femaleLogo.73a228dc.png\";","export default __webpack_public_path__ + \"static/media/maleLogo.0818dc99.png\";","export default __webpack_public_path__ + \"static/media/blackLogo.d214f1df.png\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Drawer, Divider, Grid } from '@mui/material';\nimport { History, Timeline, Home, DocumentScanner } from '@mui/icons-material';\nimport logo from '../../assets/blackLogo.png';\nimport './style.css';\n\nfunction MenuDrawer(props) {\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    const closeDrawerOnSelectLink = () => {\n        props.onClose();\n    };\n\n    const list = () => (\n        <div role='presentation'>\n            <NavLink\n                to='/'\n                className={({ isActive }) =>\n                    isActive ? 'menuRow active' : 'menuRow'\n                }\n                onClick={closeDrawerOnSelectLink}\n            >\n                <div className='menuRow'>\n                    <Home className='material-icons' />\n                    <h4>Početna</h4>\n                </div>\n            </NavLink>\n            {(currentUser.role === 'reader' ||\n                currentUser.role === 'editor') && (\n                <NavLink\n                    to='/historijapregleda'\n                    className={({ isActive }) =>\n                        isActive ? 'menuRow active' : 'menuRow'\n                    }\n                    onClick={closeDrawerOnSelectLink}\n                >\n                    <div className='menuRow'>\n                        <History className='material-icons' />\n                        <h4>Historija pregleda</h4>\n                    </div>\n                </NavLink>\n            )}\n            {(currentUser.role === 'admin' ||\n                currentUser.role === 'editor') && (\n                <NavLink\n                    to='/statistika'\n                    className={({ isActive }) =>\n                        isActive ? 'menuRow active' : 'menuRow'\n                    }\n                    onClick={closeDrawerOnSelectLink}\n                >\n                    <div className='menuRow'>\n                        <Timeline className='material-icons' />\n                        <h4>Statistika</h4>\n                    </div>\n                </NavLink>\n            )}\n            {currentUser.role === 'admin' && (\n                <NavLink\n                    to='/dokumenti'\n                    className={({ isActive }) =>\n                        isActive ? 'menuRow active' : 'menuRow'\n                    }\n                    onClick={closeDrawerOnSelectLink}\n                >\n                    <div className='menuRow'>\n                        <DocumentScanner className='material-icons' />\n                        <h4>Dokumenti</h4>\n                    </div>\n                </NavLink>\n            )}\n\n            <Divider light={true} variant='middle' sx={{ marginTop: 1 }} />\n        </div>\n    );\n    return (\n        <div>\n            <Drawer\n                anchor='left'\n                open={props.visible}\n                onClose={props.onClose}\n                sx={{ width: 500 }}\n                className='drawerContent'\n            >\n                <div className='profile__avatar'>\n                    <img alt='logo' src={logo} />\n                    <h5 className='headingDrawer'>Digitalna biblioteka</h5>\n                    <div className='currentUserDrawer'>\n                        <h4 className='userName'>{`${currentUser?.firstName} ${currentUser?.lastName}`}</h4>\n                        <h4 className='userEmail'>{currentUser.email}</h4>\n                    </div>\n                </div>\n                <Divider\n                    light={true}\n                    variant='middle'\n                    sx={{ marginBottom: 1 }}\n                />\n                {list()}\n                <div className='footerContent'>\n                    <Grid container justifyContent='center'>\n                        <h4\n                            style={{ width: 170, color: 'grey' }}\n                            className='signature'\n                        >\n                            Digitalna Biblioteka ©2022 Developed by General IT\n                            and Software Solutions d.o.o. Sarajevo\n                        </h4>\n                    </Grid>\n                </div>\n            </Drawer>\n        </div>\n    );\n}\n\nexport default MenuDrawer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialDocsState = {\n    isSearchStarted: false,\n    searchQuery: '',\n    allDocs: [],\n};\n\nconst docsSlice = createSlice({\n    name: 'docs',\n    initialState: initialDocsState,\n    reducers: {\n        startSearch(state, action) {\n            state.isSearchStarted = true;\n            state.searchQuery = action.payload;\n        },\n    },\n});\n\nexport const docsActions = docsSlice.actions;\n\nexport default docsSlice.reducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { docsActions } from '../../store/docs';\nimport { styled } from '@mui/material/styles';\nimport {\n    Input,\n    Slide,\n    Button,\n    InputAdornment,\n    ClickAwayListener,\n    IconButton,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { Search } from '@mui/icons-material';\n\nconst SearchbarStyle = styled('div')(() => ({\n    top: 0,\n    left: 0,\n    zIndex: 99,\n    width: '100%',\n    display: 'flex',\n    position: 'absolute',\n    alignItems: 'center',\n    height: 64,\n    backdropFilter: 'blur(6px)',\n    WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n}));\n\nconst useStyles = makeStyles(() => ({\n    textFieldSearchIcon: {\n        marginLeft: 30,\n        '@media (max-width: 1280px)': {\n            marginLeft: 80,\n        },\n    },\n    searchBtn: {\n        marginRight: 10,\n        textTransform: 'none',\n        fontWeight: 'bold',\n    },\n}));\n\nexport default function Searchbar() {\n    const [isOpen, setOpen] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const classes = useStyles();\n\n    const handleOpen = () => {\n        setOpen((prev) => !prev);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChangeSearch = (e) => {\n        setSearchQuery(e.target.value);\n    };\n\n    const searchHandler = async (e) => {\n        if (e.key === 'Enter' || e.type === 'click') {\n            dispatch(docsActions.startSearch(searchQuery));\n            navigate('/pretraga');\n            handleClose();\n        }\n    };\n\n    return (\n        <ClickAwayListener onClickAway={handleClose}>\n            <div>\n                {!isOpen && (\n                    <IconButton onClick={handleOpen}>\n                        <Search />\n                    </IconButton>\n                )}\n\n                <Slide direction='down' in={isOpen} mountOnEnter unmountOnExit>\n                    <SearchbarStyle>\n                        <Input\n                            autoFocus\n                            fullWidth\n                            disableUnderline\n                            placeholder='Pretraga…'\n                            startAdornment={\n                                <InputAdornment position='start'>\n                                    <Search />\n                                </InputAdornment>\n                            }\n                            className={classes.textFieldSearchIcon}\n                            onChange={handleChangeSearch}\n                            onKeyDown={searchHandler}\n                        />\n                        <Button\n                            variant='contained'\n                            className={classes.searchBtn}\n                            onClick={searchHandler}\n                        >\n                            Pretraži\n                        </Button>\n                    </SearchbarStyle>\n                </Slide>\n            </div>\n        </ClickAwayListener>\n    );\n}\n","import { format } from 'date-fns';\n\nexport function formatDate(date) {\n    return format(new Date(date), 'dd/MM/yyyy');\n}\n\nexport function formatDateTime(date) {\n    return format(new Date(date), 'dd.MM.yyyy - HH:mm');\n}\n\n// export function fDateTimeSuffix(date) {\n//     return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n// }\n\n// export function fToNow(date) {\n//     return formatDistanceToNow(new Date(date), {\n//         addSuffix: true,\n//     });\n// }\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialRequestsState = {\n    allRequests: [],\n    isRequestModalVisible: false,\n    selectedRequest: {},\n};\n\nconst requestsSlice = createSlice({\n    name: 'requests',\n    initialState: initialRequestsState,\n    reducers: {\n        setAllRequests(state, action) {\n            state.allRequests = action.payload;\n        },\n        setRequestModalVisible(state) {\n            state.isRequestModalVisible = true;\n        },\n        setSelectedRequest(state, action) {\n            state.selectedRequest = action.payload;\n        },\n        resetInitialState(state) {\n            state.isRequestModalVisible = false;\n            state.selectedRequest = {};\n        },\n    },\n});\n\nexport const requestsActions = requestsSlice.actions;\n\nexport default requestsSlice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { DoneAll, AccessTime, Notifications } from '@mui/icons-material';\nimport {\n    Divider,\n    Box,\n    Typography,\n    Tooltip,\n    IconButton,\n    List,\n    ListSubheader,\n    ListItemAvatar,\n    useMediaQuery,\n    ListItemButton,\n    ListItemText,\n    Button,\n    Popover,\n} from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport { formatDateTime } from '../../utilities/formatDate';\nimport { requestsActions } from '../../store/requests';\n\nfunction renderContent(notification) {\n    const documentName = (\n        <Typography variant='subtitle2'>\n            {notification.documentName}\n            <Typography\n                // component='span'\n                variant='body2'\n                sx={{\n                    color: 'text.secondary',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    maxWidth: 300,\n                    width: 250,\n                }}\n            >\n                {notification.heading}\n            </Typography>\n        </Typography>\n    );\n\n    return {\n        icon: <DoneAll color='success' />,\n        documentName,\n    };\n}\nfunction NotificationItem(props) {\n    const { icon, documentName } = renderContent(props);\n    const dispatch = useDispatch();\n\n    const openNotificationModal = (data) => {\n        dispatch(requestsActions.setRequestModalVisible());\n        dispatch(requestsActions.setSelectedRequest(data));\n    };\n\n    return (\n        <>\n            <ListItemButton\n                // to='#'\n                disableGutters\n                // component={RouterLink}\n                sx={{\n                    py: 1.5,\n                    px: 2.5,\n                    mt: '1px',\n                    backgroundColor: alpha('#919EAB', 0.16),\n                }}\n            >\n                <ListItemAvatar>\n                    <Tooltip title='Pogledati'>\n                        <IconButton\n                            onClick={() => {\n                                openNotificationModal(props);\n                                // props.onClose();\n                            }}\n                        >\n                            {icon}\n                        </IconButton>\n                    </Tooltip>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={documentName}\n                    secondary={\n                        <>\n                            <Typography\n                                variant='caption'\n                                sx={{\n                                    mt: 0.5,\n                                    // ml: -0.5,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'text.disabled',\n                                }}\n                            >\n                                {props.requestedBy}\n                            </Typography>\n                            <Typography\n                                variant='caption'\n                                sx={{\n                                    ml: -0.5,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'text.disabled',\n                                }}\n                            >\n                                <AccessTime sx={{ mr: 0.5 }} />\n                                {formatDateTime(props.createdAt)}\n                            </Typography>\n                        </>\n                    }\n                />\n            </ListItemButton>\n        </>\n    );\n}\nexport default function NotificationsMenu(props) {\n    const allRequests = useSelector((state) => state.requests.allRequests);\n    const navigate = useNavigate();\n    const isMobileSmall = useMediaQuery('(max-width:414px)');\n\n    return (\n        <Popover\n            anchorEl={props.isOpen}\n            open={Boolean(props.isOpen)}\n            onClose={props.onClose}\n            // onClick={props.onClose}\n            PaperProps={{\n                elevation: 0,\n                sx: {\n                    overflow: 'visible',\n                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                    mt: 1.5,\n                    '& .MuiAvatar-root': {\n                        width: 32,\n                        height: 32,\n                        ml: -0.5,\n                        mr: 1,\n                    },\n                    '&:before': {\n                        content: '\"\"',\n                        display: 'block',\n                        position: 'absolute',\n                        top: 0,\n                        right: isMobileSmall ? 40 : 14,\n                        width: 10,\n                        height: 10,\n                        bgcolor: 'background.paper',\n                        transform: 'translateY(-50%) rotate(45deg)',\n                        zIndex: 0,\n                    },\n                },\n            }}\n            transformOrigin={{\n                horizontal: 'right',\n                vertical: 'top',\n            }}\n            anchorOrigin={{\n                horizontal: 'right',\n                vertical: 'bottom',\n            }}\n        >\n            <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n                <Box sx={{ flexGrow: 1 }}>\n                    <Typography variant='subtitle1'>Notifikacije</Typography>\n                    <Typography\n                        variant='body2'\n                        sx={{ color: 'text.secondary' }}\n                    >\n                        Ukupno {allRequests.length}{' '}\n                        {allRequests.length > 1 || allRequests.length === 0\n                            ? `zahtjeva`\n                            : `zahtjev`}\n                    </Typography>\n                </Box>\n\n                <Notifications color='success' />\n            </Box>\n\n            <Divider />\n\n            <div>\n                <List\n                    disablePadding\n                    subheader={\n                        <ListSubheader\n                            disableSticky\n                            sx={{ py: 1, px: 2.5, typography: 'overline' }}\n                        >\n                            Zahtjevi\n                        </ListSubheader>\n                    }\n                >\n                    {allRequests.length > 0 ? (\n                        allRequests\n                            .slice(0, 3)\n                            .map((notification, index) => (\n                                <NotificationItem\n                                    key={index}\n                                    id={notification._id}\n                                    description={notification.reason}\n                                    heading={\n                                        notification.type === 'access'\n                                            ? 'Zahtjev za pregled dokumenta'\n                                            : 'Zahtjev za preuzimanje dokumenta'\n                                    }\n                                    documentName={\n                                        notification.document?.documentName\n                                    }\n                                    type={notification.type}\n                                    requestedBy={`${notification.user?.firstName} ${notification.user?.lastName}`}\n                                    userId={notification.user?._id}\n                                    docId={notification.document?._id}\n                                    createdAt={notification.createdAt}\n                                />\n                            ))\n                    ) : (\n                        <ListItemButton\n                            // to='#'\n                            disableGutters\n                            // component={RouterLink}\n                            sx={{\n                                py: 1.5,\n                                px: 2.5,\n                                mt: '1px',\n                                backgroundColor: alpha('#919EAB', 0.16),\n                            }}\n                        >\n                            <Typography\n                                variant='body2'\n                                sx={{\n                                    color: 'text.secondary',\n                                }}\n                            >\n                                Trenutno nema zahtjeva\n                            </Typography>\n                        </ListItemButton>\n                    )}\n                </List>\n            </div>\n            <Divider />\n\n            <Box sx={{ p: 1 }}>\n                <Button\n                    fullWidth\n                    disableRipple\n                    onClick={() => {\n                        navigate('/zahtjevi');\n                        props.onClose();\n                    }}\n                    sx={{ textTransform: 'none', fontWeight: 'bold' }}\n                >\n                    Pogledati sve\n                </Button>\n            </Box>\n        </Popover>\n    );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport {\n    MenuOpen,\n    Notifications,\n    ExpandMore,\n    PersonOutlined,\n    Logout,\n} from '@mui/icons-material';\nimport {\n    Menu,\n    MenuItem,\n    Divider,\n    ListItemIcon,\n    useMediaQuery,\n    Stack,\n    AppBar,\n    Box,\n    IconButton,\n    Toolbar,\n    Backdrop,\n    Snackbar,\n    Alert,\n    Badge,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { authActions } from '../../store/auth';\nimport femaleLogo from '../../assets/femaleLogo.png';\nimport maleLogo from '../../assets/maleLogo.png';\nimport MenuDrawer from '../MenuDrawer';\nimport './style.css';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport Searchbar from '../SearchBar';\nimport NotificationsMenu from '../NotificationsMenu';\n\nconst useStyles = makeStyles(() => ({\n    searchFieldButton: {\n        textTransform: 'none',\n        fontWeight: 'bold',\n    },\n    searchFieldIcon: {\n        marginRight: 10,\n    },\n    navbar: {\n        width: '85%',\n        position: 'fixed',\n        zIndex: 10,\n        backdropFilter: 'blur(10px)',\n        // boxShadow: '0 4px 10px -2px #ddd',\n        '@media (max-width: 1280px)': {\n            width: '100%',\n        },\n        backgroundColor: 'rgba(255, 255, 255, 0.5)',\n    },\n    navbarIcons: {\n        color: '#393e46;',\n        zIndex: 11,\n    },\n    searchField: {\n        width: '83%',\n        marginTop: 10,\n        padding: 10,\n        '@media (max-width: 1280px)': {\n            width: '98%',\n        },\n    },\n}));\n\nfunction Navbar() {\n    const [openMenu, setOpenMenu] = useState(null);\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [openNotificationMenu, setOpenNotificationMenu] = useState(null);\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    const allRequests = useSelector((state) => state.requests.allRequests);\n\n    const isTabletMobile = useMediaQuery('(max-width:1280px)');\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const classes = useStyles();\n\n    const openDrawerHandler = () => {\n        setIsDrawerOpen(true);\n    };\n\n    const closeDrawerHandler = () => {\n        setIsDrawerOpen(false);\n    };\n\n    const handleOpenMenu = (event) => {\n        setOpenMenu(event.currentTarget);\n    };\n\n    const handleCloseMenu = () => {\n        setOpenMenu(null);\n    };\n\n    const handleOpenNotificationMenu = (event) => {\n        setOpenNotificationMenu(event.currentTarget);\n    };\n\n    const handleCloseNotificationMenu = () => {\n        setOpenNotificationMenu(null);\n    };\n\n    const logoutHandler = () => {\n        setIsLoading(true);\n        Service.logout()\n            .then(() => {\n                localStorage.clear();\n                dispatch(authActions.logout());\n                navigate('/login');\n            })\n            .catch((err) => {\n                setErrorMessage(\n                    err.response\n                        ? 'Problem prilikom odjavljivanja'\n                        : 'Konekcija sa serverom nije uspostavljena'\n                );\n                setIsAlertVisible(true);\n            });\n        setIsLoading(false);\n    };\n\n    return (\n        <div>\n            {isLoading && (\n                <Backdrop\n                    sx={{\n                        color: '#fff',\n                        zIndex: (theme) => theme.zIndex.drawer + 1,\n                    }}\n                    open={isLoading}\n                >\n                    <Loader loaderColor={`black`} />\n                </Backdrop>\n            )}\n            {isAlertVisible && (\n                <Snackbar\n                    open={isAlertVisible}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    autoHideDuration={6000}\n                    onClose={() => setIsAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsAlertVisible(false)}\n                        severity='error'\n                        sx={{ width: '100%', font: '14px Roboto' }}\n                    >\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            <Box sx={{ flexGrow: 1 }}>\n                <AppBar\n                    position='static'\n                    className={classes.navbar}\n                    elevation={0}\n                >\n                    <Toolbar>\n                        {isTabletMobile && (\n                            <IconButton\n                                size='large'\n                                edge='start'\n                                color='inherit'\n                                aria-label='open drawer'\n                                sx={{ mr: 2 }}\n                                onClick={openDrawerHandler}\n                            >\n                                <MenuOpen className={classes.navbarIcons} />\n                            </IconButton>\n                        )}\n                        <Searchbar />\n                        <Box sx={{ flexGrow: 1 }} />\n                        <Box>\n                            {(currentUser.role === 'editor' ||\n                                currentUser.role === 'admin') && (\n                                <>\n                                    <IconButton\n                                        size='large'\n                                        aria-label='show 17 new notifications'\n                                        color='inherit'\n                                        onClick={handleOpenNotificationMenu}\n                                    >\n                                        <Badge\n                                            badgeContent={allRequests?.length}\n                                            color='error'\n                                        >\n                                            <Notifications\n                                                className={classes.navbarIcons}\n                                            />\n                                        </Badge>\n                                    </IconButton>\n                                    <NotificationsMenu\n                                        isOpen={openNotificationMenu}\n                                        onClose={handleCloseNotificationMenu}\n                                    />\n                                </>\n                            )}\n                            <IconButton\n                                size='large'\n                                edge='end'\n                                aria-label='account of current user'\n                                aria-haspopup='true'\n                                color='inherit'\n                                onClick={handleOpenMenu}\n                            >\n                                <ExpandMore className={classes.navbarIcons} />\n                            </IconButton>\n                            <Menu\n                                anchorEl={openMenu}\n                                open={Boolean(openMenu)}\n                                onClose={handleCloseMenu}\n                                onClick={handleCloseMenu}\n                                PaperProps={{\n                                    elevation: 0,\n                                    sx: {\n                                        overflow: 'visible',\n                                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                                        mt: 1.5,\n                                        '& .MuiAvatar-root': {\n                                            width: 32,\n                                            height: 32,\n                                            ml: -0.5,\n                                            mr: 1,\n                                        },\n                                        '&:before': {\n                                            content: '\"\"',\n                                            display: 'block',\n                                            position: 'absolute',\n                                            top: 0,\n                                            right: 14,\n                                            width: 10,\n                                            height: 10,\n                                            bgcolor: 'background.paper',\n                                            transform:\n                                                'translateY(-50%) rotate(45deg)',\n                                            zIndex: 0,\n                                        },\n                                    },\n                                }}\n                                transformOrigin={{\n                                    horizontal: 'right',\n                                    vertical: 'top',\n                                }}\n                                anchorOrigin={{\n                                    horizontal: 'right',\n                                    vertical: 'bottom',\n                                }}\n                            >\n                                <Stack\n                                    direction='row'\n                                    spacing={2}\n                                    justifyContent='center'\n                                >\n                                    <img\n                                        src={\n                                            currentUser?.gender === 'female'\n                                                ? femaleLogo\n                                                : maleLogo\n                                        }\n                                        alt='user avatar'\n                                        className='userAvatarNavMenu'\n                                    />\n                                    <div>\n                                        <p className='currentUserMenu'>\n                                            {currentUser?.firstName}{' '}\n                                            {currentUser?.lastName}\n                                        </p>\n                                        <p className='currentUserMenuEmail'>\n                                            {currentUser?.email}\n                                        </p>\n                                    </div>\n                                </Stack>\n\n                                <Divider />\n                                <NavLink\n                                    to='/profil'\n                                    style={{\n                                        color: 'black',\n                                        textDecoration: 'none',\n                                    }}\n                                >\n                                    <MenuItem style={{ height: 50 }}>\n                                        <ListItemIcon>\n                                            <PersonOutlined\n                                                sx={{ color: '#393e46' }}\n                                            />\n                                        </ListItemIcon>\n                                        Profil\n                                    </MenuItem>\n                                </NavLink>\n                                <MenuItem\n                                    onClick={logoutHandler}\n                                    style={{ height: 50 }}\n                                >\n                                    <ListItemIcon>\n                                        <Logout sx={{ color: '#393e46' }} />\n                                    </ListItemIcon>\n                                    Odjava\n                                </MenuItem>\n                            </Menu>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n            </Box>\n            {isDrawerOpen && (\n                <MenuDrawer\n                    visible={isDrawerOpen}\n                    onClose={closeDrawerHandler}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Home, History, Timeline, DocumentScanner } from '@mui/icons-material';\nimport logo from '../../assets/blackLogo.png';\nimport femaleLogo from '../../assets/femaleLogo.png';\nimport maleLogo from '../../assets/maleLogo.png';\nimport './style.css';\nimport { Stack } from '@mui/material';\n\nfunction Sidebar() {\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    return (\n        <div className='sidebar'>\n            <img src={logo} alt='logo' className='logo' />\n            <h5 className='heading'>Digitalna biblioteka</h5>\n            <Stack\n                direction='row'\n                spacing={2}\n                justifyContent='center'\n                className='userNameIcon'\n            >\n                <img\n                    src={\n                        currentUser?.gender === 'female' ? femaleLogo : maleLogo\n                    }\n                    alt='user avatar'\n                    className='userAvatar'\n                />\n                <h4 className='currentUser'>{`${currentUser?.firstName} ${currentUser?.lastName}`}</h4>\n            </Stack>\n            <NavLink\n                to='/'\n                className={({ isActive }) =>\n                    isActive ? 'sidebarRow active' : 'sidebarRow'\n                }\n            >\n                <Home className='material-icons' />\n                <h5>Početna</h5>\n            </NavLink>\n\n            {(currentUser.role === 'reader' ||\n                currentUser.role === 'editor') && (\n                <NavLink\n                    to='/historijapregleda'\n                    className={({ isActive }) =>\n                        isActive ? 'sidebarRow active' : 'sidebarRow'\n                    }\n                >\n                    <History className='material-icons' />\n                    <h5>Historija pregleda</h5>\n                </NavLink>\n            )}\n            {(currentUser.role === 'admin' ||\n                currentUser.role === 'editor') && (\n                <NavLink\n                    to='/statistika'\n                    className={({ isActive }) =>\n                        isActive ? 'sidebarRow active' : 'sidebarRow'\n                    }\n                >\n                    <Timeline className='material-icons' />\n                    <h5>Statistika pretraživanja</h5>\n                </NavLink>\n            )}\n            {currentUser.role === 'admin' && (\n                <NavLink\n                    to='/dokumenti'\n                    className={({ isActive }) =>\n                        isActive ? 'sidebarRow active' : 'sidebarRow'\n                    }\n                >\n                    <DocumentScanner className='material-icons' />\n                    <h5>Dokumenti</h5>\n                </NavLink>\n            )}\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport Navbar from '../../components/Navbar';\nimport Sidebar from '../../components/Sidebar';\nimport './style.css';\n\nfunction ContentHome() {\n    const isUserLoggedIn = useSelector((state) => state.auth.isAuthenticated);\n    return (\n        <div>\n            <div className='mainHomeBody'>\n                <Sidebar />\n                <div className='dashboardBody'>\n                    {isUserLoggedIn && <Navbar />}\n                    <div className='contentBody'>\n                        <Outlet />\n                    </div>\n                    <div className='contentFooter'>\n                        <Grid container justifyContent='center'>\n                            <p>\n                                Digitalna Biblioteka ©2022 Developed by General\n                                IT and Software Solutions d.o.o. Sarajevo\n                            </p>\n                        </Grid>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ContentHome;\n","const countries = [\n    { code: 'AD', label: 'Andorra', phone: '+376' },\n    {\n        code: 'AE',\n        label: 'United Arab Emirates',\n        phone: '+971',\n    },\n    { code: 'AF', label: 'Afghanistan', phone: '+93' },\n    {\n        code: 'AG',\n        label: 'Antigua and Barbuda',\n        phone: '+1268',\n    },\n    { code: 'AI', label: 'Anguilla', phone: '+1264' },\n    { code: 'AL', label: 'Albania', phone: '+355' },\n    { code: 'AM', label: 'Armenia', phone: '+374' },\n    { code: 'AO', label: 'Angola', phone: '+244' },\n    { code: 'AQ', label: 'Antarctica', phone: '+672' },\n    { code: 'AR', label: 'Argentina', phone: '+54' },\n    { code: 'AS', label: 'American Samoa', phone: '+1684' },\n    { code: 'AT', label: 'Austria', phone: '+43' },\n    {\n        code: 'AU',\n        label: 'Australia',\n        phone: '+61',\n        suggested: true,\n    },\n    { code: 'AW', label: 'Aruba', phone: '+297' },\n    { code: 'AX', label: 'Alland Islands', phone: '+358' },\n    { code: 'AZ', label: 'Azerbaijan', phone: '+994' },\n    {\n        code: 'BA',\n        label: 'Bosnia and Herzegovina',\n        phone: '+387',\n    },\n    { code: 'BB', label: 'Barbados', phone: '+1246' },\n    { code: 'BD', label: 'Bangladesh', phone: '+880' },\n    { code: 'BE', label: 'Belgium', phone: '+32' },\n    { code: 'BF', label: 'Burkina Faso', phone: '+226' },\n    { code: 'BG', label: 'Bulgaria', phone: '+359' },\n    { code: 'BH', label: 'Bahrain', phone: '+973' },\n    { code: 'BI', label: 'Burundi', phone: '+257' },\n    { code: 'BJ', label: 'Benin', phone: '+229' },\n    { code: 'BL', label: 'Saint Barthelemy', phone: '+590' },\n    { code: 'BM', label: 'Bermuda', phone: '+1441' },\n    { code: 'BN', label: 'Brunei Darussalam', phone: '+673' },\n    { code: 'BO', label: 'Bolivia', phone: '+591' },\n    { code: 'BR', label: 'Brazil', phone: '+55' },\n    { code: 'BS', label: 'Bahamas', phone: '+1242' },\n    { code: 'BT', label: 'Bhutan', phone: '+975' },\n    { code: 'BV', label: 'Bouvet Island', phone: '+47' },\n    { code: 'BW', label: 'Botswana', phone: '+267' },\n    { code: 'BY', label: 'Belarus', phone: '+375' },\n    { code: 'BZ', label: 'Belize', phone: '+501' },\n    {\n        code: 'CA',\n        label: 'Canada',\n        phone: '+1',\n        suggested: true,\n    },\n    {\n        code: 'CC',\n        label: 'Cocos (Keeling) Islands',\n        phone: '+61',\n    },\n    {\n        code: 'CD',\n        label: 'Congo, Democratic Republic of the',\n        phone: '+243',\n    },\n    {\n        code: 'CF',\n        label: 'Central African Republic',\n        phone: '+236',\n    },\n    {\n        code: 'CG',\n        label: 'Congo, Republic of the',\n        phone: '+242',\n    },\n    { code: 'CH', label: 'Switzerland', phone: '+41' },\n    { code: 'CI', label: \"Cote d'Ivoire\", phone: '+225' },\n    { code: 'CK', label: 'Cook Islands', phone: '+682' },\n    { code: 'CL', label: 'Chile', phone: '+56' },\n    { code: 'CM', label: 'Cameroon', phone: '+237' },\n    { code: 'CN', label: 'China', phone: '+86' },\n    { code: 'CO', label: 'Colombia', phone: '+57' },\n    { code: 'CR', label: 'Costa Rica', phone: '+506' },\n    { code: 'CU', label: 'Cuba', phone: '+53' },\n    { code: 'CV', label: 'Cape Verde', phone: '+238' },\n    { code: 'CW', label: 'Curacao', phone: '+599' },\n    { code: 'CX', label: 'Christmas Island', phone: '+61' },\n    { code: 'CY', label: 'Cyprus', phone: '+357' },\n    { code: 'CZ', label: 'Czech Republic', phone: '+420' },\n    {\n        code: 'DE',\n        label: 'Germany',\n        phone: '+49',\n        suggested: true,\n    },\n    { code: 'DJ', label: 'Djibouti', phone: '+253' },\n    { code: 'DK', label: 'Denmark', phone: '+45' },\n    { code: 'DM', label: 'Dominica', phone: '+1767' },\n    {\n        code: 'DO',\n        label: 'Dominican Republic',\n        phone: '+1809',\n    },\n    { code: 'DZ', label: 'Algeria', phone: '+213' },\n    { code: 'EC', label: 'Ecuador', phone: '+593' },\n    { code: 'EE', label: 'Estonia', phone: '+372' },\n    { code: 'EG', label: 'Egypt', phone: '+20' },\n    { code: 'EH', label: 'Western Sahara', phone: '+212' },\n    { code: 'ER', label: 'Eritrea', phone: '+291' },\n    { code: 'ES', label: 'Spain', phone: '+34' },\n    { code: 'ET', label: 'Ethiopia', phone: '+251' },\n    { code: 'FI', label: 'Finland', phone: '+358' },\n    { code: 'FJ', label: 'Fiji', phone: '+679' },\n    {\n        code: 'FK',\n        label: 'Falkland Islands (Malvinas)',\n        phone: '+500',\n    },\n    {\n        code: 'FM',\n        label: 'Micronesia, Federated States of',\n        phone: '+691',\n    },\n    { code: 'FO', label: 'Faroe Islands', phone: '+298' },\n    {\n        code: 'FR',\n        label: 'France',\n        phone: '+33',\n        suggested: true,\n    },\n    { code: 'GA', label: 'Gabon', phone: '+241' },\n    { code: 'GB', label: 'United Kingdom', phone: '+44' },\n    { code: 'GD', label: 'Grenada', phone: '+1473' },\n    { code: 'GE', label: 'Georgia', phone: '+995' },\n    { code: 'GF', label: 'French Guiana', phone: '+594' },\n    { code: 'GG', label: 'Guernsey', phone: '+44' },\n    { code: 'GH', label: 'Ghana', phone: '+233' },\n    { code: 'GI', label: 'Gibraltar', phone: '+350' },\n    { code: 'GL', label: 'Greenland', phone: '+299' },\n    { code: 'GM', label: 'Gambia', phone: '+220' },\n    { code: 'GN', label: 'Guinea', phone: '+224' },\n    { code: 'GP', label: 'Guadeloupe', phone: '+590' },\n    { code: 'GQ', label: 'Equatorial Guinea', phone: '+240' },\n    { code: 'GR', label: 'Greece', phone: '+30' },\n    {\n        code: 'GS',\n        label: 'South Georgia and the South Sandwich Islands',\n        phone: '+500',\n    },\n    { code: 'GT', label: 'Guatemala', phone: '+502' },\n    { code: 'GU', label: 'Guam', phone: '+1671' },\n    { code: 'GW', label: 'GuineaBissau', phone: '+245' },\n    { code: 'GY', label: 'Guyana', phone: '+592' },\n    { code: 'HK', label: 'Hong Kong', phone: '+852' },\n    {\n        code: 'HM',\n        label: 'Heard Island and McDonald Islands',\n        phone: '+672',\n    },\n    { code: 'HN', label: 'Honduras', phone: '+504' },\n    { code: 'HR', label: 'Croatia', phone: '+385' },\n    { code: 'HT', label: 'Haiti', phone: '+509' },\n    { code: 'HU', label: 'Hungary', phone: '+36' },\n    { code: 'ID', label: 'Indonesia', phone: '+62' },\n    { code: 'IE', label: 'Ireland', phone: '+353' },\n    { code: 'IL', label: 'Israel', phone: '+972' },\n    { code: 'IM', label: 'Isle of Man', phone: '+44' },\n    { code: 'IN', label: 'India', phone: '+91' },\n    {\n        code: 'IO',\n        label: 'British Indian Ocean Territory',\n        phone: '+246',\n    },\n    { code: 'IQ', label: 'Iraq', phone: '+964' },\n    {\n        code: 'IR',\n        label: 'Iran, Islamic Republic of',\n        phone: '+98',\n    },\n    { code: 'IS', label: 'Iceland', phone: '+354' },\n    { code: 'IT', label: 'Italy', phone: '+39' },\n    { code: 'JE', label: 'Jersey', phone: '+44' },\n    { code: 'JM', label: 'Jamaica', phone: '+1876' },\n    { code: 'JO', label: 'Jordan', phone: '+962' },\n    {\n        code: 'JP',\n        label: 'Japan',\n        phone: '+81',\n        suggested: true,\n    },\n    { code: 'KE', label: 'Kenya', phone: '+254' },\n    { code: 'KG', label: 'Kyrgyzstan', phone: '+996' },\n    { code: 'KH', label: 'Cambodia', phone: '+855' },\n    { code: 'KI', label: 'Kiribati', phone: '+686' },\n    { code: 'KM', label: 'Comoros', phone: '+269' },\n    {\n        code: 'KN',\n        label: 'Saint Kitts and Nevis',\n        phone: '+1869',\n    },\n    {\n        code: 'KP',\n        label: \"Korea, Democratic People's Republic of\",\n        phone: '+850',\n    },\n    { code: 'KR', label: 'Korea, Republic of', phone: '+82' },\n    { code: 'KW', label: 'Kuwait', phone: '+965' },\n    { code: 'KY', label: 'Cayman Islands', phone: '+1345' },\n    { code: 'KZ', label: 'Kazakhstan', phone: '+7' },\n    {\n        code: 'LA',\n        label: \"Lao People's Democratic Republic\",\n        phone: '+856',\n    },\n    { code: 'LB', label: 'Lebanon', phone: '+961' },\n    { code: 'LC', label: 'Saint Lucia', phone: '+1758' },\n    { code: 'LI', label: 'Liechtenstein', phone: '+423' },\n    { code: 'LK', label: 'Sri Lanka', phone: '+94' },\n    { code: 'LR', label: 'Liberia', phone: '+231' },\n    { code: 'LS', label: 'Lesotho', phone: '+266' },\n    { code: 'LT', label: 'Lithuania', phone: '+370' },\n    { code: 'LU', label: 'Luxembourg', phone: '+352' },\n    { code: 'LV', label: 'Latvia', phone: '+371' },\n    { code: 'LY', label: 'Libya', phone: '+218' },\n    { code: 'MA', label: 'Morocco', phone: '+212' },\n    { code: 'MC', label: 'Monaco', phone: '+377' },\n    {\n        code: 'MD',\n        label: 'Moldova, Republic of',\n        phone: '+373',\n    },\n    { code: 'ME', label: 'Montenegro', phone: '+382' },\n    {\n        code: 'MF',\n        label: 'Saint Martin (French part)',\n        phone: '+590',\n    },\n    { code: 'MG', label: 'Madagascar', phone: '+261' },\n    { code: 'MH', label: 'Marshall Islands', phone: '+692' },\n    {\n        code: 'MK',\n        label: 'Macedonia, the Former Yugoslav Republic of',\n        phone: '+389',\n    },\n    { code: 'ML', label: 'Mali', phone: '+223' },\n    { code: 'MM', label: 'Myanmar', phone: '+95' },\n    { code: 'MN', label: 'Mongolia', phone: '+976' },\n    { code: 'MO', label: 'Macao', phone: '+853' },\n    {\n        code: 'MP',\n        label: 'Northern Mariana Islands',\n        phone: '+1670',\n    },\n    { code: 'MQ', label: 'Martinique', phone: '+596' },\n    { code: 'MR', label: 'Mauritania', phone: '+222' },\n    { code: 'MS', label: 'Montserrat', phone: '+1664' },\n    { code: 'MT', label: 'Malta', phone: '+356' },\n    { code: 'MU', label: 'Mauritius', phone: '+230' },\n    { code: 'MV', label: 'Maldives', phone: '+960' },\n    { code: 'MW', label: 'Malawi', phone: '+265' },\n    { code: 'MX', label: 'Mexico', phone: '+52' },\n    { code: 'MY', label: 'Malaysia', phone: '+60' },\n    { code: 'MZ', label: 'Mozambique', phone: '+258' },\n    { code: 'NA', label: 'Namibia', phone: '+264' },\n    { code: 'NC', label: 'New Caledonia', phone: '+687' },\n    { code: 'NE', label: 'Niger', phone: '+227' },\n    { code: 'NF', label: 'Norfolk Island', phone: '+672' },\n    { code: 'NG', label: 'Nigeria', phone: '+234' },\n    { code: 'NI', label: 'Nicaragua', phone: '+505' },\n    { code: 'NL', label: 'Netherlands', phone: '+31' },\n    { code: 'NO', label: 'Norway', phone: '+47' },\n    { code: 'NP', label: 'Nepal', phone: '+977' },\n    { code: 'NR', label: 'Nauru', phone: '+674' },\n    { code: 'NU', label: 'Niue', phone: '+683' },\n    { code: 'NZ', label: 'New Zealand', phone: '+64' },\n    { code: 'OM', label: 'Oman', phone: '+968' },\n    { code: 'PA', label: 'Panama', phone: '+507' },\n    { code: 'PE', label: 'Peru', phone: '+51' },\n    { code: 'PF', label: 'French Polynesia', phone: '+689' },\n    { code: 'PG', label: 'Papua New Guinea', phone: '+675' },\n    { code: 'PH', label: 'Philippines', phone: '+63' },\n    { code: 'PK', label: 'Pakistan', phone: '+92' },\n    { code: 'PL', label: 'Poland', phone: '+48' },\n    {\n        code: 'PM',\n        label: 'Saint Pierre and Miquelon',\n        phone: '+508',\n    },\n    { code: 'PN', label: 'Pitcairn', phone: '+870' },\n    { code: 'PR', label: 'Puerto Rico', phone: '+1' },\n    {\n        code: 'PS',\n        label: 'Palestine, State of',\n        phone: '+970',\n    },\n    { code: 'PT', label: 'Portugal', phone: '+351' },\n    { code: 'PW', label: 'Palau', phone: '+680' },\n    { code: 'PY', label: 'Paraguay', phone: '+595' },\n    { code: 'QA', label: 'Qatar', phone: '+974' },\n    { code: 'RE', label: 'Reunion', phone: '+262' },\n    { code: 'RO', label: 'Romania', phone: '+40' },\n    { code: 'RS', label: 'Serbia', phone: '+381' },\n    { code: 'RU', label: 'Russian Federation', phone: '+7' },\n    { code: 'RW', label: 'Rwanda', phone: '+250' },\n    { code: 'SA', label: 'Saudi Arabia', phone: '+966' },\n    { code: 'SB', label: 'Solomon Islands', phone: '+677' },\n    { code: 'SC', label: 'Seychelles', phone: '+248' },\n    { code: 'SD', label: 'Sudan', phone: '+249' },\n    { code: 'SE', label: 'Sweden', phone: '+46' },\n    { code: 'SG', label: 'Singapore', phone: '+65' },\n    { code: 'SH', label: 'Saint Helena', phone: '+290' },\n    { code: 'SI', label: 'Slovenia', phone: '+386' },\n    {\n        code: 'SJ',\n        label: 'Svalbard and Jan Mayen',\n        phone: '+47',\n    },\n    { code: 'SK', label: 'Slovakia', phone: '+421' },\n    { code: 'SL', label: 'Sierra Leone', phone: '+232' },\n    { code: 'SM', label: 'San Marino', phone: '+378' },\n    { code: 'SN', label: 'Senegal', phone: '+221' },\n    { code: 'SO', label: 'Somalia', phone: '+252' },\n    { code: 'SR', label: 'Suriname', phone: '+597' },\n    { code: 'SS', label: 'South Sudan', phone: '+211' },\n    {\n        code: 'ST',\n        label: 'Sao Tome and Principe',\n        phone: '+239',\n    },\n    { code: 'SV', label: 'El Salvador', phone: '+503' },\n    {\n        code: 'SX',\n        label: 'Sint Maarten (Dutch part)',\n        phone: '+1721',\n    },\n    {\n        code: 'SY',\n        label: 'Syrian Arab Republic',\n        phone: '+963',\n    },\n    { code: 'SZ', label: 'Swaziland', phone: '+268' },\n    {\n        code: 'TC',\n        label: 'Turks and Caicos Islands',\n        phone: '+1649',\n    },\n    { code: 'TD', label: 'Chad', phone: '+235' },\n    {\n        code: 'TF',\n        label: 'French Southern Territories',\n        phone: '+262',\n    },\n    { code: 'TG', label: 'Togo', phone: '+228' },\n    { code: 'TH', label: 'Thailand', phone: '+66' },\n    { code: 'TJ', label: 'Tajikistan', phone: '+992' },\n    { code: 'TK', label: 'Tokelau', phone: '+690' },\n    { code: 'TL', label: 'TimorLeste', phone: '+670' },\n    { code: 'TM', label: 'Turkmenistan', phone: '+993' },\n    { code: 'TN', label: 'Tunisia', phone: '+216' },\n    { code: 'TO', label: 'Tonga', phone: '+676' },\n    { code: 'TR', label: 'Turkey', phone: '+90' },\n    {\n        code: 'TT',\n        label: 'Trinidad and Tobago',\n        phone: '+1868',\n    },\n    { code: 'TV', label: 'Tuvalu', phone: '+688' },\n    {\n        code: 'TW',\n        label: 'Taiwan, Province of China',\n        phone: '+886',\n    },\n    {\n        code: 'TZ',\n        label: 'United Republic of Tanzania',\n        phone: '+255',\n    },\n    { code: 'UA', label: 'Ukraine', phone: '+380' },\n    { code: 'UG', label: 'Uganda', phone: '+256' },\n    {\n        code: 'US',\n        label: 'United States',\n        phone: '+1',\n        suggested: true,\n    },\n    { code: 'UY', label: 'Uruguay', phone: '+598' },\n    { code: 'UZ', label: 'Uzbekistan', phone: '+998' },\n    {\n        code: 'VA',\n        label: 'Holy See (Vatican City State)',\n        phone: '+379',\n    },\n    {\n        code: 'VC',\n        label: 'Saint Vincent and the Grenadines',\n        phone: '+1784',\n    },\n    { code: 'VE', label: 'Venezuela', phone: '+58' },\n    {\n        code: 'VG',\n        label: 'British Virgin Islands',\n        phone: '+1284',\n    },\n    {\n        code: 'VI',\n        label: 'US Virgin Islands',\n        phone: '+1340',\n    },\n    { code: 'VN', label: 'Vietnam', phone: '+84' },\n    { code: 'VU', label: 'Vanuatu', phone: '+678' },\n    { code: 'WF', label: 'Wallis and Futuna', phone: '+681' },\n    { code: 'WS', label: 'Samoa', phone: '+685' },\n    { code: 'XK', label: 'Kosovo', phone: '+383' },\n    { code: 'YE', label: 'Yemen', phone: '+967' },\n    { code: 'YT', label: 'Mayotte', phone: '+262' },\n    { code: 'ZA', label: 'South Africa', phone: '+27' },\n    { code: 'ZM', label: 'Zambia', phone: '+260' },\n    { code: 'ZW', label: 'Zimbabwe', phone: '+263' },\n];\nexport default countries;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n    Grid,\n    TextField,\n    Button,\n    InputAdornment,\n    IconButton,\n    Box,\n    Radio,\n    RadioGroup,\n    FormControlLabel,\n    FormControl,\n    FormLabel,\n    Autocomplete,\n    Stack,\n    Typography,\n    Alert,\n    AlertTitle,\n    Backdrop,\n} from '@mui/material';\nimport {\n    Person,\n    Lock,\n    Visibility,\n    VisibilityOff,\n    Email,\n    Phone,\n    Public,\n    Work,\n    FindInPage,\n    Event,\n    Wc,\n    HighlightOff,\n} from '@mui/icons-material';\nimport { DatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport './style.css';\nimport logo from '../../assets/whiteLogo.svg';\nimport countries from '../../utilities/countries';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport Service from '../../api/service';\nimport Loader from '../../components/Loader';\n\nfunction Signup() {\n    const [showPassword, setShowPassword] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [\n        isValidationProfileAlertVisible,\n        setIsValidationProfileAlertVisible,\n    ] = useState(false);\n    const [validationProfileMessage, setValidationProfileMessage] =\n        useState('');\n\n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string().required('Ime je obavezno'),\n        lastName: Yup.string().required('Prezime je obavezno'),\n        email: Yup.string()\n            .required('Email je obavezan')\n            .email('Email nije validan'),\n        password: Yup.string()\n            .required('Šifra je obavezna')\n            .max(24, 'Šifra može da sadrži maximalno 24 karaktera')\n            .matches(\n                /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                'Šifra mora da sadrži najmanje 8 karaktera, jedno veliko, jedno malo slovo, jedan broj i jedan simbol'\n            ),\n        phoneNumber: Yup.string()\n            .required('Broj telefona je obavezan')\n            .min(10, 'Nedovoljan broj karaktera'),\n        dob: Yup.date().required('Datum rođenja je obavezan'),\n        gender: Yup.string().required('Spol je obavezan'),\n        country: Yup.string().required('Država je obavezna'),\n        organization: Yup.string(),\n        registrationPurpose: Yup.string().required(\n            'Svrha istrživanja je obavezna'\n        ),\n    });\n\n    const {\n        register,\n        control,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n        defaultValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            phoneNumber: '',\n            dob: null,\n            gender: '',\n            country: '',\n            organization: '',\n            registrationPurpose: '',\n        },\n    });\n    const handleSignup = async (userValues, e) => {\n        setIsLoading(true);\n        await Service.signup(userValues)\n            .then((res) => {\n                setIsValidationProfileAlertVisible(true);\n                setValidationProfileMessage(res.data.message);\n                reset();\n            })\n            .catch((err) => {\n                setErrorMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena, pokušajte da osjvežite aplikaciju ili nas kontaktirajte putem info maila.'\n                );\n                setIsAlertVisible(true);\n            });\n        setIsLoading(false);\n    };\n\n    return (\n        <div>\n            <div className='validationProfileAlert'>\n                {isValidationProfileAlertVisible && (\n                    <Alert\n                        severity='success'\n                        action={\n                            <HighlightOff\n                                onClick={() =>\n                                    setIsValidationProfileAlertVisible(false)\n                                }\n                                style={{ cursor: 'pointer' }}\n                            />\n                        }\n                        sx={{ font: '14px Roboto' }}\n                    >\n                        {validationProfileMessage}\n                    </Alert>\n                )}\n            </div>\n            <h2 className='headingSignup'>Digitalna biblioteka</h2>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Grid\n                container\n                justifyContent='center'\n                alignItems='center'\n                sx={{\n                    maxWidth: 600,\n                    margin: '50px auto',\n                    WebkitBoxShadow: '-1px -1px 8px -1px rgba(0, 0, 0, 0.52)',\n                    MozBoxShadow: '-1px -1px 8px -1px rgba(0, 0, 0, 0.52)',\n                    boxShadow: '-1px -1px 8px -1px rgba(0, 0, 0, 0.52)',\n                    borderRadius: 3,\n                }}\n            >\n                <div className='signupContent' sx={{ paddingBottom: 150 }}>\n                    <form>\n                        <div className='upperBoxSignup'>\n                            <h4>Registracija</h4>\n                            <img\n                                src={logo}\n                                style={{\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}\n                                alt='logo'\n                            />\n                        </div>\n\n                        <div className='formFieldsBoxSignup'>\n                            {isAlertVisible && (\n                                <Alert\n                                    severity='error'\n                                    action={\n                                        <HighlightOff\n                                            onClick={() =>\n                                                setIsAlertVisible(false)\n                                            }\n                                            style={{ cursor: 'pointer' }}\n                                        />\n                                    }\n                                    style={{ marginBottom: 15 }}\n                                >\n                                    <AlertTitle>Greška</AlertTitle>\n                                    {errorMessage} —{' '}\n                                    <strong> Pokušajte ponovo !</strong>\n                                </Alert>\n                            )}\n                            <Grid\n                                container\n                                spacing={2}\n                                columns={16}\n                                sx={{ padding: 1 }}\n                            >\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Person\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <TextField\n                                            id='firstName'\n                                            label='Ime'\n                                            type='text'\n                                            fullWidth\n                                            required\n                                            variant='standard'\n                                            {...register('firstName')}\n                                            error={\n                                                errors.firstName ? true : false\n                                            }\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.firstName?.message}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Person\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <TextField\n                                            id='lastName'\n                                            label='Prezime'\n                                            type='text'\n                                            fullWidth\n                                            required\n                                            variant='standard'\n                                            {...register('lastName')}\n                                            error={\n                                                errors.lastName ? true : false\n                                            }\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.lastName?.message}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Email\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <TextField\n                                            id='email'\n                                            label='Email'\n                                            type='email'\n                                            fullWidth\n                                            required\n                                            variant='standard'\n                                            {...register('email')}\n                                            error={errors.email ? true : false}\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.email?.message}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Lock\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <TextField\n                                            id='password'\n                                            label='Šifra'\n                                            type={\n                                                showPassword\n                                                    ? 'text'\n                                                    : 'password'\n                                            }\n                                            fullWidth\n                                            required\n                                            variant='standard'\n                                            {...register('password')}\n                                            error={\n                                                errors.password ? true : false\n                                            }\n                                            InputProps={{\n                                                endAdornment: (\n                                                    <InputAdornment position='end'>\n                                                        <IconButton\n                                                            aria-label='toggle password visibility'\n                                                            onClick={() =>\n                                                                setShowPassword(\n                                                                    !showPassword\n                                                                )\n                                                            }\n                                                        >\n                                                            {showPassword ? (\n                                                                <Visibility\n                                                                    style={{\n                                                                        color: '#393E46',\n                                                                    }}\n                                                                />\n                                                            ) : (\n                                                                <VisibilityOff\n                                                                    style={{\n                                                                        color: '#393E46',\n                                                                    }}\n                                                                />\n                                                            )}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.password?.message}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Phone\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <Controller\n                                            control={control}\n                                            name='phoneNumber'\n                                            // defaultValue=''\n                                            render={({ field }) => (\n                                                <MuiPhoneNumber\n                                                    id='phoneNumber'\n                                                    required\n                                                    fullWidth\n                                                    // defaultValue=''\n                                                    label='Broj telefona'\n                                                    defaultCountry={'ba'}\n                                                    onChange={(value) =>\n                                                        field.onChange(\n                                                            value && value\n                                                        )\n                                                    }\n                                                    disableAreaCodes={true}\n                                                    error={\n                                                        errors.phoneNumber\n                                                            ? true\n                                                            : false\n                                                    }\n                                                    // {...register('phoneNumber')}\n                                                />\n                                            )}\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.phoneNumber &&\n                                            'Broj telefona je obavezan'}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Event\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <LocalizationProvider\n                                            dateAdapter={AdapterDateFns}\n                                        >\n                                            <Controller\n                                                control={control}\n                                                name='dob'\n                                                defaultValue={null}\n                                                render={({ field }) => (\n                                                    <DatePicker\n                                                        {...field}\n                                                        label='Datum rođenja'\n                                                        inputFormat='dd/MM/yyyy'\n                                                        disableFuture\n                                                        onChange={(e) => {\n                                                            field.onChange(\n                                                                e && e.toJSON()\n                                                            );\n                                                        }}\n                                                        clearable\n                                                        renderInput={(\n                                                            params\n                                                        ) => (\n                                                            <TextField\n                                                                {...params}\n                                                                variant='standard'\n                                                                required\n                                                                fullWidth\n                                                                error={\n                                                                    errors.dob\n                                                                        ? true\n                                                                        : false\n                                                                }\n                                                            />\n                                                        )}\n                                                    />\n                                                )}\n                                                rules={{ required: true }}\n                                            />\n                                        </LocalizationProvider>\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.dob &&\n                                            'Datum rođenja je obavezan'}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Wc\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 2,\n                                            }}\n                                        />\n                                        <FormControl component='fieldset'>\n                                            <Stack spacing={4} direction='row'>\n                                                <FormLabel\n                                                    component='legend'\n                                                    sx={{ my: 2 }}\n                                                    error={\n                                                        errors.gender\n                                                            ? true\n                                                            : false\n                                                    }\n                                                >\n                                                    Spol*\n                                                </FormLabel>\n                                                <Controller\n                                                    control={control}\n                                                    name='gender'\n                                                    rules={{ required: true }}\n                                                    render={({ field }) => (\n                                                        <RadioGroup\n                                                            row\n                                                            aria-label='gender'\n                                                            name='row-radio-buttons-group'\n                                                            {...field}\n                                                        >\n                                                            <FormControlLabel\n                                                                value='female'\n                                                                control={\n                                                                    <Radio />\n                                                                }\n                                                                label='Ž'\n                                                            />\n                                                            <FormControlLabel\n                                                                value='male'\n                                                                control={\n                                                                    <Radio />\n                                                                }\n                                                                label='M'\n                                                            />\n                                                        </RadioGroup>\n                                                    )}\n                                                />\n                                            </Stack>\n                                        </FormControl>\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.gender && 'Spol je obavezan'}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Public\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <Controller\n                                            name='country'\n                                            control={control}\n                                            render={({ field }) => (\n                                                <Autocomplete\n                                                    id='country'\n                                                    options={countries}\n                                                    getOptionLabel={(option) =>\n                                                        option.label\n                                                    }\n                                                    renderOption={(\n                                                        props,\n                                                        option\n                                                    ) => (\n                                                        <Box\n                                                            component='li'\n                                                            sx={{\n                                                                '& > img': {\n                                                                    mr: 2,\n                                                                    flexShrink: 0,\n                                                                },\n                                                            }}\n                                                            {...props}\n                                                        >\n                                                            <img\n                                                                loading='lazy'\n                                                                width='20'\n                                                                src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                                                                srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                                                                alt=''\n                                                            />\n                                                            {option.label} (\n                                                            {option.code})\n                                                        </Box>\n                                                    )}\n                                                    required\n                                                    fullWidth\n                                                    renderInput={(params) => (\n                                                        <TextField\n                                                            {...params}\n                                                            label='Država'\n                                                            required\n                                                            variant='standard'\n                                                            error={\n                                                                errors.country\n                                                                    ? true\n                                                                    : false\n                                                            }\n                                                        />\n                                                    )}\n                                                    onChange={(e, value) =>\n                                                        field.onChange(\n                                                            value && value.label\n                                                        )\n                                                    }\n                                                />\n                                            )}\n                                            rules={{ required: true }}\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.country && 'Država je obavezna'}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16} sm={8}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <Work\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <TextField\n                                            id='organization'\n                                            label='Organizacija'\n                                            type='organization'\n                                            fullWidth\n                                            variant='standard'\n                                            {...register('organization')}\n                                            error={\n                                                errors.organization\n                                                    ? true\n                                                    : false\n                                            }\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.organization?.message}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={16}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'flex-end',\n                                        }}\n                                    >\n                                        <FindInPage\n                                            sx={{\n                                                color: '#393E46',\n                                                mr: 1,\n                                                my: 0.5,\n                                            }}\n                                        />\n                                        <TextField\n                                            id='registrationPurpose'\n                                            label='Svrha istraživanja'\n                                            type='registrationPurpose'\n                                            fullWidth\n                                            required\n                                            variant='outlined'\n                                            {...register('registrationPurpose')}\n                                            error={\n                                                errors.registrationPurpose\n                                                    ? true\n                                                    : false\n                                            }\n                                            multiline\n                                            rows={3}\n                                        />\n                                    </Box>\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            marginLeft: 4,\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.registrationPurpose?.message}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </div>\n\n                        <Button\n                            variant='contained'\n                            style={{\n                                textTransform: 'none',\n                                fontWeight: 'bold',\n                                // backgroundImage: `linear-gradient(to bottom right, #D0F2FF, #04297a)`,\n                                backgroundColor: '#393E46',\n                                width: '75%',\n                                color: '#fff',\n                                height: '10%',\n                                marginTop: -50,\n                                display: 'block',\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                            }}\n                            onClick={handleSubmit(handleSignup)}\n                            type='submit'\n                        >\n                            Registruj se\n                        </Button>\n                    </form>\n                </div>\n                <p className='loginBtn'>\n                    Ukoliko ste korisnik,\n                    <NavLink\n                        to='/'\n                        style={{ textDecoration: 'none', color: 'black' }}\n                    >\n                        <strong> Prijavite se</strong>\n                    </NavLink>\n                </p>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Service from '../../api/service';\nimport {\n    Grid,\n    TextField,\n    Button,\n    InputAdornment,\n    IconButton,\n    Box,\n    Typography,\n    Backdrop,\n    Alert,\n    AlertTitle,\n} from '@mui/material';\nimport {\n    Lock,\n    Visibility,\n    VisibilityOff,\n    HighlightOff,\n} from '@mui/icons-material';\nimport logo from '../../assets/whiteLogo.svg';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport Loader from '../../components/Loader';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\n\nfunction PasswordReset() {\n    const { resetToken } = useParams();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [responseMessage, setResponseMessage] = useState('');\n    const [isPasswordResetSuccessful, setIsPasswordResetSuccessful] =\n        useState(false);\n    const [accessApproved, setAccessApproved] = useState(false);\n    const navigate = useNavigate();\n    let isMounted = useRef(true);\n    useEffect(() => {\n        const findResetTokenHandler = async () => {\n            await Service.findResetToken({ resetToken })\n                .then((res) => {\n                    if (isMounted.current && res.status === 200) {\n                        setAccessApproved(true);\n                    }\n                })\n                .catch(() => {\n                    navigate('/');\n                });\n        };\n\n        findResetTokenHandler();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, [resetToken, navigate]);\n\n    const validationSchema = Yup.object().shape({\n        password: Yup.string()\n            .required('Šifra je obavezna')\n            .max(24, 'Šifra može da sadrži maximalno 24 karaktera')\n            .matches(\n                /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                'Šifra mora da sadrži minimalno 8 karaktera, jedno veliko, jedno malo slovo, jedan broj i jedan simbol'\n            ),\n        passwordConfirm: Yup.string()\n            .required('Morate ponoviti šifru')\n            .oneOf([Yup.ref('password'), null], 'Šifre moraju biti iste'),\n    });\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n    });\n\n    const resetPasswordHandler = async (values) => {\n        setIsLoading(true);\n        await Service.resetPassword({\n            values,\n            resetToken,\n        })\n            .then((res) => {\n                setResponseMessage(res.data.message);\n                setIsLoading(false);\n                setIsPasswordResetSuccessful(true);\n            })\n            .catch((err) => {\n                setResponseMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena'\n                );\n                setIsAlertVisible(true);\n                setIsLoading(false);\n            });\n    };\n\n    const switchToLoginHandler = () => {\n        navigate('/login');\n    };\n\n    return (\n        <div className='resetPasswordPage'>\n            {accessApproved && (\n                <Grid container justifyContent='center' alignItems='center'>\n                    {isPasswordResetSuccessful ? (\n                        <div className='resetPasswordSuccess'>\n                            <h2>{responseMessage}</h2>\n                            <Button\n                                variant='contained'\n                                style={{\n                                    textTransform: 'none',\n                                    fontWeight: 'bold',\n                                    backgroundColor: '#fff',\n                                    color: '#393e46',\n                                    height: '10%',\n                                    marginBottom: 20,\n                                    display: 'block',\n                                    marginLeft: 'auto',\n                                    marginRight: 'auto',\n                                }}\n                                onClick={switchToLoginHandler}\n                            >\n                                Prijavite se\n                            </Button>\n                        </div>\n                    ) : (\n                        <div className='resetPasswordContent'>\n                            <Backdrop\n                                sx={{\n                                    color: '#fff',\n                                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                                }}\n                                open={isLoading}\n                            >\n                                <Loader />\n                            </Backdrop>\n                            <form>\n                                <div className='upperBoxReset'>\n                                    <h4>Reset šifre</h4>\n                                    <img src={logo} alt='logo' />\n                                </div>\n\n                                <div className='formFieldsResetBox'>\n                                    {isAlertVisible && (\n                                        <Alert\n                                            severity='error'\n                                            action={\n                                                <HighlightOff\n                                                    onClick={() =>\n                                                        setIsAlertVisible(false)\n                                                    }\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                />\n                                            }\n                                            style={{ marginBottom: 15 }}\n                                        >\n                                            <AlertTitle>Greška</AlertTitle>\n                                            {responseMessage}\n                                        </Alert>\n                                    )}\n                                    <Grid item xs={16}>\n                                        <Box\n                                            sx={{\n                                                display: 'flex',\n                                                alignItems: 'flex-end',\n                                            }}\n                                        >\n                                            <Lock\n                                                sx={{\n                                                    color: '#393e46',\n                                                    mr: 1,\n                                                    my: 0.5,\n                                                }}\n                                            />\n                                            <TextField\n                                                id='password'\n                                                label='Nova šifra'\n                                                type={\n                                                    showPassword\n                                                        ? 'text'\n                                                        : 'password'\n                                                }\n                                                fullWidth\n                                                required\n                                                variant='standard'\n                                                {...register('password')}\n                                                error={\n                                                    errors.password\n                                                        ? true\n                                                        : false\n                                                }\n                                                InputProps={{\n                                                    endAdornment: (\n                                                        <InputAdornment position='end'>\n                                                            <IconButton\n                                                                aria-label='toggle password visibility'\n                                                                onClick={() =>\n                                                                    setShowPassword(\n                                                                        !showPassword\n                                                                    )\n                                                                }\n                                                            >\n                                                                {showPassword ? (\n                                                                    <Visibility\n                                                                        style={{\n                                                                            color: '#393e46',\n                                                                        }}\n                                                                    />\n                                                                ) : (\n                                                                    <VisibilityOff\n                                                                        style={{\n                                                                            color: '#393e46',\n                                                                        }}\n                                                                    />\n                                                                )}\n                                                            </IconButton>\n                                                        </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Box>\n                                        <Typography\n                                            variant='inherit'\n                                            color='red'\n                                            sx={{\n                                                textAlign: 'left',\n                                                marginLeft: 4,\n                                                font: '12px Roboto',\n                                            }}\n                                        >\n                                            {errors.password?.message}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={16}>\n                                        <Box\n                                            sx={{\n                                                display: 'flex',\n                                                alignItems: 'flex-end',\n                                            }}\n                                        >\n                                            <Lock\n                                                sx={{\n                                                    color: '#393e46',\n                                                    mr: 1,\n                                                    my: 0.5,\n                                                }}\n                                            />\n                                            <TextField\n                                                id='passwordConfirm'\n                                                label='Potvrdite novu šifru'\n                                                type={\n                                                    showPassword\n                                                        ? 'text'\n                                                        : 'password'\n                                                }\n                                                fullWidth\n                                                required\n                                                variant='standard'\n                                                {...register('passwordConfirm')}\n                                                error={\n                                                    errors.passwordConfirm\n                                                        ? true\n                                                        : false\n                                                }\n                                                InputProps={{\n                                                    endAdornment: (\n                                                        <InputAdornment position='end'>\n                                                            <IconButton\n                                                                aria-label='toggle password visibility'\n                                                                onClick={() =>\n                                                                    setShowPassword(\n                                                                        !showPassword\n                                                                    )\n                                                                }\n                                                            >\n                                                                {showPassword ? (\n                                                                    <Visibility\n                                                                        style={{\n                                                                            color: '#393e46',\n                                                                        }}\n                                                                    />\n                                                                ) : (\n                                                                    <VisibilityOff\n                                                                        style={{\n                                                                            color: '#393e46',\n                                                                        }}\n                                                                    />\n                                                                )}\n                                                            </IconButton>\n                                                        </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Box>\n                                        <Typography\n                                            variant='inherit'\n                                            color='red'\n                                            sx={{\n                                                textAlign: 'left',\n                                                marginLeft: 4,\n                                                font: '12px Roboto',\n                                            }}\n                                        >\n                                            {errors.passwordConfirm?.message}\n                                        </Typography>\n                                    </Grid>\n                                </div>\n\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                        // backgroundImage: `linear-gradient(to bottom right, #D0F2FF, #1890FF)`,\n                                        // backgroundColor: '#393e46',\n                                        color: '#fff',\n                                        width: '75%',\n                                        height: '10%',\n                                        marginTop: -80,\n                                    }}\n                                    onClick={handleSubmit(resetPasswordHandler)}\n                                >\n                                    Resetuj šifru\n                                </Button>\n                            </form>\n                        </div>\n                    )}\n                </Grid>\n            )}\n        </div>\n    );\n}\n\nexport default PasswordReset;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Service from '../../api/service';\nimport { Grid, Button, Stack, Alert, Backdrop } from '@mui/material';\nimport { HighlightOff } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport Loader from '../../components/Loader';\nimport './style.css';\n\nfunction ValidateProfile() {\n    const { validationToken } = useParams();\n    const [responseMessage, setResponseMessage] = useState('');\n    const [isAccessApproved, setIsAccessApproved] = useState(false);\n    const [isResendEmailButtonVisible, setIsResendEmailButtonVisible] =\n        useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [alertResponseMessage, setAlertResponseMessage] = useState('');\n    const [alertType, setAlertType] = useState('success');\n\n    const navigate = useNavigate();\n    let isMounted = useRef(true);\n    useEffect(() => {\n        const validateProfileHanlder = async () => {\n            await Service.validateProfile({ validationToken })\n                .then((res) => {\n                    setIsAccessApproved(true);\n                    setResponseMessage(res.data.message);\n                })\n                .catch((err) => {\n                    if (\n                        isMounted.current &&\n                        err.response?.data.status === 403\n                    ) {\n                        navigate('/');\n                    }\n                    setIsAccessApproved(true);\n                    setResponseMessage(err.response?.data.message);\n                    setIsResendEmailButtonVisible(true);\n                });\n        };\n\n        validateProfileHanlder();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, [validationToken, navigate]);\n\n    const switchToLoginHandler = () => {\n        navigate('/login');\n    };\n\n    const resendValidationEmailHandler = async () => {\n        setIsLoading(true);\n        await Service.resendValidationEmail({ validationToken })\n            .then((res) => {\n                setIsAlertVisible(true);\n                setAlertType('success');\n                setAlertResponseMessage(res.data.message);\n            })\n            .catch((err) => {\n                setIsAlertVisible(true);\n                setAlertType('error');\n                setAlertResponseMessage(err.response?.data.message);\n            });\n        setIsLoading(false);\n    };\n\n    return (\n        <div className='validatePage'>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            {isAccessApproved && (\n                <Grid container justifyContent='center' alignItems='center'>\n                    <div className='validationMessage'>\n                        <h2>{responseMessage}</h2>\n                        <Stack\n                            spacing={2}\n                            direction='row'\n                            justifyContent='center'\n                            style={{ marginBottom: 20 }}\n                        >\n                            {isResendEmailButtonVisible && (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                        backgroundColor: '#fff',\n                                        color: '#393e46',\n                                        height: '10%',\n                                    }}\n                                    onClick={resendValidationEmailHandler}\n                                >\n                                    Zatražite novi validacioni token\n                                </Button>\n                            )}\n                            {!isResendEmailButtonVisible && (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                        backgroundColor: '#fff',\n                                        color: '#393e46',\n                                        height: '10%',\n                                    }}\n                                    onClick={switchToLoginHandler}\n                                >\n                                    Prijavite se\n                                </Button>\n                            )}\n                        </Stack>\n                    </div>\n                </Grid>\n            )}\n            {isAlertVisible && (\n                <div className='alertMessage'>\n                    <Alert\n                        severity={alertType}\n                        action={\n                            <HighlightOff\n                                onClick={() => setIsAlertVisible(false)}\n                                style={{ cursor: 'pointer' }}\n                            />\n                        }\n                        sx={{ font: '14px Roboto' }}\n                    >\n                        {alertResponseMessage}\n                    </Alert>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ValidateProfile;\n","export function capitalizeWord(docName) {\n    return docName[0].toUpperCase() + docName.slice(1);\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport {\n    Grid,\n    Breadcrumbs,\n    Typography,\n    Stack,\n    Tooltip,\n    Box,\n    Snackbar,\n    Alert,\n    useMediaQuery,\n} from '@mui/material';\nimport { Home, History, VisibilityOutlined } from '@mui/icons-material';\nimport Service from '../../api/service';\nimport Loader from '../../components/Loader';\nimport MaterialTable from '@material-table/core';\nimport { capitalizeWord } from '../../utilities/capitalizeWord';\nimport moment from 'moment';\nimport 'moment/locale/bs';\nimport './style.css';\n\nfunction ViewHistory() {\n    const [documents, setDocuments] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const navigate = useNavigate();\n    const isMobile = useMediaQuery('(max-width:540px)');\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        const fetchUserHistoryReview = async () => {\n            await Service.getUserHistoryReview()\n                .then((res) => {\n                    if (isMounted.current) {\n                        const userDocs = res.data.userDocs;\n                        let userReviewDocs = res.data.userReviewDocs;\n                        let newReviewArr = [];\n                        for (let usr of userDocs) {\n                            userReviewDocs.forEach((doc) => {\n                                if (doc._id === usr.docId) {\n                                    newReviewArr.push({\n                                        ...doc,\n                                        timeVisited: usr.time,\n                                    });\n                                }\n                            });\n                        }\n                        setDocuments(newReviewArr);\n                        setIsLoading(false);\n                    }\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                });\n        };\n\n        fetchUserHistoryReview();\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    const documentTypeHandler = (type) => {\n        switch (type) {\n            case 'document':\n                return 'Dokument';\n            case 'audio':\n                return 'Audio';\n            case 'video':\n                return 'Video';\n            case 'image':\n                return 'Slika';\n            default:\n                break;\n        }\n    };\n\n    const documentsTableData =\n        documents &&\n        documents.map((document) => {\n            return {\n                id: document._id,\n                documentName: capitalizeWord(document.documentName),\n                documentType: documentTypeHandler(document.fileType),\n                documentLastVisit: document.timeVisited && (\n                    <Stack direction='row' spacing={1}>\n                        <History fontSize='small' />\n                        <Typography fontSize={15}>\n                            {moment(document.timeVisited)\n                                .locale('bs')\n                                .fromNow()}\n                        </Typography>\n                    </Stack>\n                ),\n                description: document.description && (\n                    <Tooltip title={document.description} placement='top-start'>\n                        <Box>{document.description}</Box>\n                    </Tooltip>\n                ),\n                ownership: capitalizeWord(document.ownership),\n                location: capitalizeWord(document.location),\n            };\n        });\n\n    const documentsColumns = [\n        {\n            title: 'Naziv dokumenta',\n            field: 'documentName',\n            sorting: false,\n            width: '20%',\n        },\n        {\n            title: 'Tip dokumenta',\n            field: 'documentType',\n            sorting: false,\n            width: '10%',\n        },\n        {\n            title: 'Opis',\n            field: 'description',\n            sorting: false,\n            width: '35%',\n            align: 'left',\n            searchable: false,\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: 200,\n            },\n        },\n        {\n            title: 'Posljednji pregled',\n            field: 'documentLastVisit',\n            sorting: false,\n        },\n\n        { title: 'Vlasništvo', field: 'ownership', sorting: false },\n        {\n            title: 'Lokacija',\n            field: 'location',\n            sorting: false,\n        },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: false,\n        pageSizeOptions: [5, 10, 20],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: {\n            font: '15px Roboto',\n        },\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 15,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage:\n                'Lista posljednjih posjećenih dokumenata je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    return (\n        <div className='historyPage'>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={8000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity='error'\n                                sx={{ width: '100%' }}\n                            >\n                                {errorMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <Grid container justifyContent='flex-start'>\n                        <Breadcrumbs aria-label='breadcrumb'>\n                            <NavLink\n                                to='/'\n                                style={{\n                                    textDecoration: 'none',\n                                    color: 'grey',\n                                }}\n                            >\n                                <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                                Početna\n                            </NavLink>\n                            <Stack\n                                direction='row'\n                                spacing={2}\n                                style={{ color: '#393e46' }}\n                            >\n                                <History\n                                    sx={{ mr: -1.2, marginTop: 0.3 }}\n                                    fontSize='inherit'\n                                />\n                                <Typography>Historija pregleda</Typography>\n                            </Stack>\n                        </Breadcrumbs>\n                    </Grid>\n                    <MaterialTable\n                        columns={documentsColumns}\n                        data={documentsTableData}\n                        actions={[\n                            {\n                                icon: () => <VisibilityOutlined />,\n                                tooltip: 'Pogledati',\n                                onClick: (e, data) =>\n                                    navigate(`/pregled/${data.id}`),\n                            },\n                        ]}\n                        title='Lista posljednjih posjećenih dokumenata'\n                        options={tableOptions}\n                        localization={tableLocalization}\n                        style={{ marginTop: 10 }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ViewHistory;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialModalResponseState = {\n    isModalResAlertVisible: false,\n    modalResMessage: '',\n    modalAlertType: 'success',\n};\n\nconst modalResponseSlice = createSlice({\n    name: 'modalResponse',\n    initialState: initialModalResponseState,\n    reducers: {\n        setIsModalResAlertVisible(state) {\n            state.isModalResAlertVisible = true;\n        },\n        setModalResMessage(state, action) {\n            state.modalResMessage = action.payload;\n        },\n        setModalAlertType(state, action) {\n            state.modalAlertType = action.payload;\n        },\n        setIsModalResAlertHidden(state) {\n            state.isModalResAlertVisible = false;\n        },\n    },\n});\n\nexport const modalResponseActions = modalResponseSlice.actions;\n\nexport default modalResponseSlice.reducer;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction UserDeactivateModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    let selectedUser = props?.selected;\n    const deactivateUserHandler = async () => {\n        setIsLoading(true);\n        const userId = selectedUser.id;\n\n        await Service.deactivateUser({ userId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.user, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite deaktivirati ovog korisnika?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={deactivateUserHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default UserDeactivateModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction UserActivateModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    let selectedUser = props?.selected;\n    const activateUserHandler = async () => {\n        setIsLoading(true);\n        const userId = selectedUser.id;\n\n        await Service.activateUser({ userId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.user, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite aktivirati ovog korisnika?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={activateUserHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default UserActivateModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction UserRemoveModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    let selectedUser = props?.selected;\n    const removeUserHandler = async () => {\n        setIsLoading(true);\n        const userId = selectedUser.id;\n\n        await Service.removeUser(userId)\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(selectedUser, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite izbrisati ovog korisnika?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={removeUserHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default UserRemoveModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction UserAddEditorModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    let selectedUser = props?.selected;\n\n    const addUserAsEditorHandler = async () => {\n        setIsLoading(true);\n        const userId = selectedUser._id;\n\n        await Service.userEditorAdd({ userId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.user, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite dodati ovog korisnika kao urednika?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={addUserAsEditorHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default UserAddEditorModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction UserRemoveEditorModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    let selectedUser = props?.selected;\n\n    const removeUserAsEditorHandler = async () => {\n        setIsLoading(true);\n        const userId = selectedUser._id;\n\n        await Service.userEditorRemove({ userId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.user, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite ukloniti ovog korisnika kao\n                        urednika?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={removeUserAsEditorHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default UserRemoveEditorModal;\n","import React, { useState } from 'react';\nimport {\n    Box,\n    OutlinedInput,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Select,\n    Chip,\n    Grid,\n    Button,\n} from '@mui/material';\nimport { HighlightOffOutlined } from '@mui/icons-material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    resetBtn: {\n        textTransform: 'none',\n        fontWeight: 'bold',\n        height: 40,\n        marginTop: 20,\n        '@media (max-width: 600px)': {\n            marginLeft: 10,\n            marginTop: 0,\n            marginBottom: 10,\n        },\n    },\n    selectField: {\n        margin: 10,\n        width: 300,\n        '@media (max-width: 300px)': {\n            width: 200,\n        },\n    },\n}));\n\nfunction UserRoleFilter(props) {\n    const [roleValues, setRoleValues] = useState([]);\n    const roles = ['admin', 'editor', 'reader'];\n    const classes = useStyles();\n\n    const handleChangeRoleValues = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setRoleValues(value);\n        props.onFilterUsers(value);\n    };\n\n    const getUserRole = (role) => {\n        switch (role) {\n            case 'admin':\n                return 'Admin';\n            case 'editor':\n                return 'Urednik';\n            case 'reader':\n                return 'Čitalac';\n            default:\n                break;\n        }\n    };\n\n    const handleResetFilter = () => {\n        props.onResetFilter();\n        setRoleValues([]);\n    };\n\n    return (\n        <div>\n            <Grid container spacing={2} columns={16} sx={{ padding: 1 }}>\n                <Grid item xs={16} sm={12}>\n                    <FormControl className={classes.selectField}>\n                        <InputLabel id='demo-multiple-name-label'>\n                            Filter rola korisnika\n                        </InputLabel>\n                        <Select\n                            labelId='demo-multiple-name-label'\n                            id='demo-multiple-name'\n                            multiple\n                            value={roleValues}\n                            onChange={handleChangeRoleValues}\n                            input={\n                                <OutlinedInput label='Filter rola korisnika' />\n                            }\n                            renderValue={(selected) => (\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        flexWrap: 'wrap',\n                                        gap: 0.5,\n                                    }}\n                                >\n                                    {selected.map((value) => (\n                                        <Chip\n                                            key={value}\n                                            label={getUserRole(value)}\n                                        />\n                                    ))}\n                                </Box>\n                            )}\n                        >\n                            {roles.map((role, index) => (\n                                <MenuItem key={index} value={role}>\n                                    {getUserRole(role)}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Grid>\n                {roleValues.length > 0 && (\n                    <Grid item xs={16} sm={4}>\n                        <Button\n                            variant='contained'\n                            startIcon={<HighlightOffOutlined />}\n                            onClick={handleResetFilter}\n                            className={classes.resetBtn}\n                        >\n                            Reset\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n        </div>\n    );\n}\n\nexport default UserRoleFilter;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    useMediaQuery,\n    Snackbar,\n    Alert,\n    Chip,\n    IconButton,\n    Grid,\n} from '@mui/material';\nimport MaterialTable from '@material-table/core';\nimport { formatDate } from '../../utilities/formatDate';\nimport Service from '../../api/service';\nimport {\n    DeleteOutlined,\n    CheckBox,\n    CheckBoxOutlineBlank,\n    ToggleOn,\n    ToggleOff,\n} from '@mui/icons-material';\nimport Loader from '../Loader';\nimport UserDeactivateModal from '../UserDeactivateModal';\nimport UserActivateModal from '../UserActivateModal';\nimport UserRemoveModal from '../UserRemoveModal';\nimport UserAddEditorModal from '../UserAddEditorModal';\nimport UserRemoveEditorModal from '../UserRemoveEditorModal';\nimport UserRoleFilter from '../UserRoleFilter';\nimport { capitalizeWord } from '../../utilities/capitalizeWord';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { requestsActions } from '../../store/requests';\n\nfunction UsersTable() {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isUserDeactivateModalVisible, setIsUserDeactivateModalVisible] =\n        useState(false);\n    const [isUserActivateModalVisible, setIsUserActivateModalVisible] =\n        useState(false);\n    const [isUserRemoveModalVisible, setIsUserRemoveModalVisible] =\n        useState(false);\n    const [selectedRow, setSelectedRow] = useState(null);\n    const [isUserAddEditorModalVisible, setIsUserAddEditorModalVisible] =\n        useState(false);\n    const [isUserRemoveEditorModalVisible, setIsUserRemoveEditorModalVisible] =\n        useState(false);\n    const [allUsers, setAllUsers] = useState([]);\n\n    const isMobile = useMediaQuery('(max-width:540px)');\n\n    const allRequests = useSelector((state) => state.requests.allRequests);\n\n    const dispatch = useDispatch();\n    let isMounted = useRef(true);\n\n    useEffect(() => {\n        const fetchAllUsersHandler = async () => {\n            await Service.getAllUsers()\n                .then((res) => {\n                    if (isMounted.current) {\n                        setUsers(res.data.allUsers);\n                        setAllUsers(res.data.allUsers);\n                        setIsLoading(false);\n                    }\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response?.status === 500\n                            ? 'Konekcija sa serverom nije uspostavljena'\n                            : err.response.data.message\n                    );\n                    setIsLoading(false);\n                });\n        };\n\n        fetchAllUsersHandler();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    const userRoleHandler = (role) => {\n        switch (role) {\n            case 'admin':\n                return 'Admin';\n            case 'editor':\n                return 'Urednik';\n            case 'reader':\n                return 'Čitalac';\n            default:\n                break;\n        }\n    };\n    const handleOpenUserAddEditorModal = (data) => {\n        setIsUserAddEditorModalVisible(true);\n        setSelectedRow(data);\n    };\n    const handleCloseUserAddEditorModal = (data, isOk) => {\n        if (isOk) {\n            let tmpUsersData = [...users];\n            tmpUsersData.forEach((user) => {\n                if (user._id === data._id) {\n                    return (user.role = 'editor');\n                }\n            });\n            setUsers(tmpUsersData);\n        }\n        setIsUserAddEditorModalVisible(false);\n        setSelectedRow(null);\n    };\n\n    const handleOpenUserRemoveEditorModal = (data) => {\n        setIsUserRemoveEditorModalVisible(true);\n        setSelectedRow(data);\n    };\n\n    const handleCloseUserRemoveEditorModal = (data, isOk) => {\n        if (isOk) {\n            let tmpUsersData = [...users];\n            tmpUsersData.forEach((user) => {\n                if (user._id === data._id) {\n                    return (user.role = 'reader');\n                }\n            });\n            setUsers(tmpUsersData);\n        }\n        setIsUserRemoveEditorModalVisible(false);\n        setSelectedRow(null);\n    };\n\n    const editorColumnHandler = (user) => {\n        const isDisabled = user.removed;\n        if (user.role === 'admin') {\n            return (\n                <IconButton disabled>\n                    <CheckBox />\n                </IconButton>\n            );\n        } else if (user.role === 'editor') {\n            return (\n                <IconButton\n                    disabled={isDisabled}\n                    onClick={() => handleOpenUserRemoveEditorModal(user)}\n                >\n                    <CheckBox\n                        style={{\n                            color: !isDisabled && '#00ab55',\n                            cursor: 'pointer',\n                        }}\n                    />\n                </IconButton>\n            );\n        } else {\n            return (\n                <IconButton\n                    disabled={isDisabled}\n                    onClick={() => handleOpenUserAddEditorModal(user)}\n                >\n                    <CheckBoxOutlineBlank />\n                </IconButton>\n            );\n        }\n    };\n\n    const handleOpenUserDeactivateModal = (data) => {\n        setIsUserDeactivateModalVisible(true);\n        setSelectedRow(data);\n    };\n\n    const handleCloseUserDeactivateModal = (data, isOk) => {\n        if (isOk) {\n            let tmpUsersData = [...users];\n            tmpUsersData.forEach((user) => {\n                if (user._id === data._id) {\n                    return (user.removed = true);\n                }\n            });\n            setUsers(tmpUsersData);\n        }\n        setIsUserDeactivateModalVisible(false);\n        setSelectedRow(null);\n    };\n\n    const handleOpenUserActivateModal = (data) => {\n        setIsUserActivateModalVisible(true);\n        setSelectedRow(data);\n    };\n\n    const handleCloseUserActivateModal = (data, isOk) => {\n        if (isOk) {\n            let tmpUsersData = [...users];\n            tmpUsersData.forEach((user) => {\n                if (user._id === data._id) {\n                    return (user.removed = false);\n                }\n            });\n            setUsers(tmpUsersData);\n        }\n        setIsUserActivateModalVisible(false);\n        setSelectedRow(null);\n    };\n\n    const handleOpenUserRemoveModal = (data) => {\n        setIsUserRemoveModalVisible(true);\n        setSelectedRow(data);\n    };\n\n    const handleCloseUserRemoveModal = (data, isOk) => {\n        if (isOk) {\n            let tmpUsersData = [...users];\n            setUsers(tmpUsersData.filter((user) => user._id !== data.id));\n            let tmpRequestsData = [...allRequests];\n            dispatch(\n                requestsActions.setAllRequests(\n                    tmpRequestsData.filter((req) => req.user?._id !== data.id)\n                )\n            );\n        }\n        setIsUserRemoveModalVisible(false);\n        setSelectedRow(null);\n    };\n\n    const usersTableData =\n        users &&\n        users.map((user) => {\n            return {\n                id: user._id,\n                firstLastName:\n                    capitalizeWord(user.firstName) +\n                    ' ' +\n                    capitalizeWord(user.lastName),\n                email: user.email,\n                role: userRoleHandler(user.role),\n                phoneNumber: user.phoneNumber,\n                dob: formatDate(user.dob),\n                gender: user.gender === 'male' ? 'M' : 'Ž',\n                country: user.country,\n                organization: capitalizeWord(user.organization),\n                registrationPurpose: user.registrationPurpose,\n                editor: editorColumnHandler(user),\n                removed: user.removed,\n                status: user.removed ? (\n                    <Chip\n                        label='Neaktivan'\n                        style={{\n                            color: '#B72136',\n                            backgroundColor: '#FFE7D9',\n                            fontWeight: 'bold',\n                        }}\n                        size='small'\n                    />\n                ) : (\n                    <Chip\n                        label='Aktivan'\n                        style={{\n                            color: '#007b55',\n                            backgroundColor: '#C8FACD',\n                            fontWeight: 'bold',\n                        }}\n                        size='small'\n                    />\n                ),\n            };\n        });\n\n    const usersColumns = [\n        {\n            title: 'Ime i prezime',\n            field: 'firstLastName',\n            sorting: true,\n            width: '10%',\n        },\n        { title: 'Email', field: 'email' },\n        { title: 'Broj telefona', field: 'phoneNumber', width: '10%' },\n        {\n            title: 'Datum rođenja',\n            field: 'dob',\n            searchable: false,\n            width: '10%',\n        },\n        { title: 'Spol', field: 'gender', searchable: false, width: '3%' },\n        { title: 'Država', field: 'country' },\n        {\n            title: 'Organizacija',\n            field: 'organization',\n            sorting: false,\n        },\n        {\n            title: 'Svrha istraživanja',\n            field: 'registrationPurpose',\n            sorting: false,\n            searchable: false,\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: 150,\n            },\n        },\n        { title: 'Rola', field: 'role', searchable: false, width: '3%' },\n        {\n            title: 'Status',\n            field: 'status',\n            searchable: false,\n            sorting: false,\n        },\n        {\n            title: 'Urednik',\n            field: 'editor',\n            searchable: false,\n            sorting: false,\n        },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: true,\n        pageSizeOptions: [5, 10, 20, 25, 50, 100],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: (rowData) => ({\n            color: rowData.removed && 'grey',\n            font: '15px Roboto',\n        }),\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 10,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage: 'Lista korisnika je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    const handleFilterUsersByRoles = (values) => {\n        if (values.length > 0) {\n            let tmpUserArr = [];\n            for (const user of allUsers) {\n                if (values.includes(user.role)) {\n                    tmpUserArr.push(user);\n                }\n            }\n            setUsers(tmpUserArr);\n        } else {\n            setUsers(allUsers);\n        }\n    };\n\n    return (\n        <div>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={8000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity='error'\n                                sx={{ width: '100%' }}\n                            >\n                                {errorMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n\n                    <Grid container justifyContent='flex-start'>\n                        <UserRoleFilter\n                            onFilterUsers={handleFilterUsersByRoles}\n                            onResetFilter={() => setUsers(allUsers)}\n                        />\n                    </Grid>\n                    <MaterialTable\n                        columns={usersColumns}\n                        data={usersTableData}\n                        actions={[\n                            (rowData) => ({\n                                icon: () =>\n                                    rowData.removed ? (\n                                        <ToggleOff\n                                            sx={{\n                                                fontSize: 30,\n                                            }}\n                                            // color='disabled'\n                                        />\n                                    ) : (\n                                        <ToggleOn\n                                            sx={{\n                                                fontSize: 30,\n                                                color:\n                                                    rowData.role !== 'Admin' &&\n                                                    'green',\n                                            }}\n                                        />\n                                    ),\n                                tooltip:\n                                    rowData.role === 'Admin' || rowData.removed\n                                        ? ''\n                                        : 'Deaktivirati',\n                                onClick: (e, data) =>\n                                    rowData.removed\n                                        ? handleOpenUserActivateModal(data)\n                                        : handleOpenUserDeactivateModal(data),\n                                disabled:\n                                    rowData.role === 'Admin' ? true : false,\n                            }),\n                            (rowData) => ({\n                                icon: () => <DeleteOutlined />,\n                                tooltip:\n                                    rowData.role === 'Admin' || rowData.removed\n                                        ? ''\n                                        : 'Izbrisati',\n                                onClick: (e, data) =>\n                                    handleOpenUserRemoveModal(data),\n                                disabled:\n                                    rowData.role === 'Admin' ? true : false,\n                            }),\n                        ]}\n                        title='Lista korisnika'\n                        options={tableOptions}\n                        localization={tableLocalization}\n                    />\n                    {isUserDeactivateModalVisible && (\n                        <UserDeactivateModal\n                            visible={isUserDeactivateModalVisible}\n                            onClose={handleCloseUserDeactivateModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                    {isUserActivateModalVisible && (\n                        <UserActivateModal\n                            visible={isUserActivateModalVisible}\n                            onClose={handleCloseUserActivateModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                    {isUserRemoveModalVisible && (\n                        <UserRemoveModal\n                            visible={isUserRemoveModalVisible}\n                            onClose={handleCloseUserRemoveModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                    {isUserAddEditorModalVisible && (\n                        <UserAddEditorModal\n                            visible={isUserAddEditorModalVisible}\n                            onClose={handleCloseUserAddEditorModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                    {isUserRemoveEditorModalVisible && (\n                        <UserRemoveEditorModal\n                            visible={isUserRemoveEditorModalVisible}\n                            onClose={handleCloseUserRemoveEditorModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UsersTable;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction DocumentPublicAccessModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    let selectedDoc = props?.selected;\n    const dispatch = useDispatch();\n\n    const approvePublicAccess = async () => {\n        setIsLoading(true);\n        const docId = selectedDoc._id;\n        await Service.approvePublicAccess({ docId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.document, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite odobriti javni pristup ovom\n                        dokumentu?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={approvePublicAccess}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DocumentPublicAccessModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction DocumentPublicAccessForbidModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    let selectedDoc = props?.selected;\n    const dispatch = useDispatch();\n\n    const forbidPublicAccess = async () => {\n        setIsLoading(true);\n        const docId = selectedDoc._id;\n        await Service.forbidPublicAccess({ docId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.document, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite zabraniti javni pristup ovom\n                        dokumentu?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={forbidPublicAccess}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DocumentPublicAccessForbidModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { modalResponseActions } from '../../store/modalResponse';\nimport { useDispatch } from 'react-redux';\n\nfunction DocumentDeleteModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    let selectedDoc = props?.selected;\n    const dispatch = useDispatch();\n\n    const deleteDocumentHandler = async () => {\n        setIsLoading(true);\n        const docId = selectedDoc.id;\n\n        await Service.deleteDocument({ docId })\n            .then((res) => {\n                setIsLoading(false);\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('success'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(res.data.message)\n                );\n                props.onClose(res.data.document, true);\n            })\n            .catch((err) => {\n                dispatch(modalResponseActions.setIsModalResAlertVisible());\n                dispatch(modalResponseActions.setModalAlertType('error'));\n                dispatch(\n                    modalResponseActions.setModalResMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    )\n                );\n                setIsLoading(false);\n                props.onClose();\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li želite učiniti ovaj dokument neaktivnim?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={deleteDocumentHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Da\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DocumentDeleteModal;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Box,\n    OutlinedInput,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Select,\n    Chip,\n    Grid,\n    Button,\n    Slider,\n    Typography,\n    TextField,\n    Stack,\n} from '@mui/material';\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    filterBtns: {\n        textTransform: 'none',\n        fontWeight: 'bold',\n    },\n    filterBtnsField: {\n        '@media (max-width: 900px)': {\n            marginTop: 10,\n        },\n    },\n}));\n\nfunction DocumentsTableFilters(props) {\n    const [fileTypeValues, setFileTypeValues] = useState([]);\n    const [rangeValue, setRangeValue] = useState([]);\n    const [docValue, setDocValue] = useState('');\n    const [docLastChangeValue, setDocLastChangeValue] = useState([null, null]);\n\n    const fileTypes = ['image', 'video', 'audio', 'document'];\n    const classes = useStyles();\n    useEffect(() => {\n        setRangeValue([0, props?.biggestDoc]);\n    }, [props?.biggestDoc]);\n\n    const handleChangeFileTypeValues = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setFileTypeValues(value);\n    };\n\n    const getFileType = (role) => {\n        switch (role) {\n            case 'image':\n                return 'Slika';\n            case 'video':\n                return 'Video';\n            case 'audio':\n                return 'Audio';\n            case 'document':\n                return 'Dokument';\n            default:\n                break;\n        }\n    };\n\n    const handleChangeSizeRangeFilter = (e, value) => {\n        setRangeValue(value);\n    };\n\n    const handleChangeDocValue = (e) => {\n        setDocValue(e.target.value);\n    };\n\n    const resetFiltersHandler = () => {\n        setFileTypeValues([]);\n        setDocLastChangeValue([null, null]);\n        setRangeValue([0, props?.biggestDoc]);\n        setDocValue('');\n        props.onResetFilters();\n    };\n\n    const filterDocsHandler = () => {\n        props.onApplyFilters({\n            docValue,\n            rangeValue,\n            fileTypeValues,\n            docLastChangeValue,\n        });\n    };\n\n    const isResetFilterBtnsVisible =\n        docLastChangeValue.every((val) => val !== null && val !== undefined) ||\n        fileTypeValues.length > 0 ||\n        rangeValue.some((val) => val !== 0 && val !== props?.biggestDoc) ||\n        docValue;\n\n    return (\n        <div>\n            <Grid\n                container\n                spacing={2}\n                columns={16}\n                sx={{ marginTop: 1, marginBottom: 1 }}\n            >\n                <Grid item xs={16} sm={8} md={4}>\n                    <FormControl fullWidth>\n                        <InputLabel id='demo-multiple-name-label'>\n                            Tip dokumenta\n                        </InputLabel>\n                        <Select\n                            labelId='demo-multiple-name-label'\n                            id='demo-multiple-name'\n                            multiple\n                            value={fileTypeValues}\n                            onChange={handleChangeFileTypeValues}\n                            input={<OutlinedInput label='Tip dokumenta' />}\n                            renderValue={(selected) => (\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        flexWrap: 'wrap',\n                                        gap: 0.5,\n                                    }}\n                                >\n                                    {selected.map((value) => (\n                                        <Chip\n                                            key={value}\n                                            label={getFileType(value)}\n                                        />\n                                    ))}\n                                </Box>\n                            )}\n                        >\n                            {fileTypes.map((role, index) => (\n                                <MenuItem key={index} value={role}>\n                                    {getFileType(role)}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={16} sm={8} md={4}>\n                    <Box sx={{ width: '100%' }}>\n                        <Typography>Veličina dokumenta</Typography>\n                        <Slider\n                            value={rangeValue}\n                            onChange={handleChangeSizeRangeFilter}\n                            valueLabelDisplay='auto'\n                            valueLabelFormat={(val) =>\n                                `${(val / 1000000).toFixed(2)} MB`\n                            }\n                            max={props?.biggestDoc}\n                            step={1000}\n                        />\n                    </Box>\n                </Grid>\n                <Grid item xs={16} sm={8} md={4}>\n                    <FormControl fullWidth>\n                        <InputLabel id='demo-simple-select-label'>\n                            Vrsta vrijednosti\n                        </InputLabel>\n                        <Select\n                            labelId='demo-simple-select-label'\n                            id='demo-simple-select'\n                            value={docValue}\n                            onChange={handleChangeDocValue}\n                            input={<OutlinedInput label='Vrsta vrijednosti' />}\n                        >\n                            <MenuItem value='public'>Javno dostupan</MenuItem>\n                            <MenuItem value='private'>\n                                Ograničen pristup\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={16} sm={8} md={4}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        {/* <Typography>Zadnja izmjena </Typography> */}\n                        <DateRangePicker\n                            startText='Od'\n                            endText='Do'\n                            inputFormat='dd/MM/yyyy'\n                            value={docLastChangeValue}\n                            onChange={(newValue) => {\n                                setDocLastChangeValue(newValue);\n                            }}\n                            renderInput={(startProps, endProps) => (\n                                <React.Fragment>\n                                    <TextField {...startProps} />\n                                    <Box sx={{ mx: 2 }}> - </Box>\n                                    <TextField {...endProps} />\n                                </React.Fragment>\n                            )}\n                        />\n                    </LocalizationProvider>\n                </Grid>\n                <Grid container justifyContent='flex-end'>\n                    {isResetFilterBtnsVisible && (\n                        <Stack\n                            spacing={2}\n                            direction='row'\n                            className={classes.filterBtnsField}\n                        >\n                            <Button\n                                variant='outlined'\n                                className={classes.filterBtns}\n                                onClick={resetFiltersHandler}\n                            >\n                                Reset\n                            </Button>\n                            <Button\n                                variant='contained'\n                                className={classes.filterBtns}\n                                onClick={filterDocsHandler}\n                            >\n                                Filter\n                            </Button>\n                        </Stack>\n                    )}\n                </Grid>\n\n                {/* {fileTypeValues.length > 0 && (\n                    <Grid item xs={16} sm={4}>\n                        <Button\n                            variant='contained'\n                            startIcon={<HighlightOffOutlined />}\n                            onClick={handleResetFilter}\n                            className={classes.resetBtn}\n                        >\n                            Reset\n                        </Button>\n                    </Grid>\n                )} */}\n            </Grid>\n        </div>\n    );\n}\n\nexport default DocumentsTableFilters;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MaterialTable from '@material-table/core';\nimport {\n    Snackbar,\n    Alert,\n    useMediaQuery,\n    Tooltip,\n    Box,\n    Chip,\n    IconButton,\n    Grid,\n    Button,\n} from '@mui/material';\nimport {\n    DeleteOutlined,\n    EditOutlined,\n    VisibilityOutlined,\n    CheckBox,\n    CheckBoxOutlineBlank,\n} from '@mui/icons-material';\nimport { makeStyles } from '@mui/styles';\n\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport DocumentPublicAccessModal from '../DocumentPublicAccessModal';\nimport DocumentPublicAccessForbidModal from '../DocumentPublicAccessForbidModal';\nimport DocumentDeleteModal from '../DocumentDeleteModal';\nimport DocumentsTableFilters from '../DocumentsTableFilters';\nimport { capitalizeWord } from '../../utilities/capitalizeWord';\n\nconst useStyles = makeStyles((theme) => ({\n    newDocBtn: {\n        textTransform: 'none',\n        fontWeight: 'bold',\n        marginBottom: 15,\n    },\n}));\nfunction DocumentsTable() {\n    const [documents, setDocuments] = useState([]);\n    const [allDocuments, setAllDocuments] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [selectedRow, setSelectedRow] = useState(null);\n    const [\n        isVisibleDocAccessApprovedModal,\n        setIsVisibleDocAccessApprovedModal,\n    ] = useState(false);\n    const [\n        isVisibleDocAccessForbiddenModal,\n        setIsVisibleDocAccessForbiddenModal,\n    ] = useState(false);\n    const [isDeleteDocModalVisible, setIsDeleteDocModalVisible] =\n        useState(false);\n    const [biggestDoc, setBiggestDoc] = useState(0);\n\n    const isMobile = useMediaQuery('(max-width:540px)');\n    const navigate = useNavigate();\n    const classes = useStyles();\n    let isMounted = useRef(true);\n\n    useEffect(() => {\n        const fetchAllDocumentsHandler = async () => {\n            await Service.getAllDocuments()\n                .then((res) => {\n                    if (isMounted.current) {\n                        setDocuments(res.data.allDocuments);\n                        setAllDocuments(res.data.allDocuments);\n\n                        let docSizes = [];\n                        for (let doc of res.data.allDocuments) {\n                            docSizes.push(Number(doc.documentSize));\n                        }\n                        setBiggestDoc(Math.max(...docSizes));\n                        setIsLoading(false);\n                    }\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response?.status === 500\n                            ? 'Konekcija sa serverom nije uspostavljena'\n                            : err.response.data.message\n                    );\n                    setIsLoading(false);\n                });\n        };\n\n        fetchAllDocumentsHandler();\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    const documentTypeHandler = (type) => {\n        switch (type) {\n            case 'document':\n                return 'Dokument';\n            case 'audio':\n                return 'Audio';\n            case 'video':\n                return 'Video';\n            case 'image':\n                return 'Slika';\n            default:\n                break;\n        }\n    };\n\n    const getFileSize = (fileSize) => {\n        if (fileSize?.length > 6) {\n            return `${Number(fileSize / 1000000).toFixed(2)} MB`;\n        }\n        if (fileSize?.length > 9) {\n            return `${Number(fileSize / 1000000000).toFixed(2)} GB`;\n        } else {\n            return `${Number(fileSize / 1000).toFixed(2)} kB`;\n        }\n    };\n\n    const handleOpenDocumentPublicAccessApproveModal = (data) => {\n        setIsVisibleDocAccessApprovedModal(true);\n        setSelectedRow(data);\n    };\n    const handleCloseDocumentAccessApproveModal = (data, isOk) => {\n        if (isOk) {\n            let tmpDocData = [...documents];\n            tmpDocData.forEach((doc) => {\n                if (doc._id === data._id) {\n                    return (doc.publicAccess = true);\n                }\n            });\n            setDocuments(tmpDocData);\n        }\n        setIsVisibleDocAccessApprovedModal(false);\n        setSelectedRow(null);\n    };\n\n    const handleOpenDocumentPublicAccessForbidModal = (data) => {\n        setIsVisibleDocAccessForbiddenModal(true);\n        setSelectedRow(data);\n    };\n\n    const handleCloseDocumentPublicAccessForbidModal = (data, isOk) => {\n        if (isOk) {\n            let tmpDocData = [...documents];\n            tmpDocData.forEach((doc) => {\n                if (doc._id === data._id) {\n                    return (doc.publicAccess = false);\n                }\n            });\n            setDocuments(tmpDocData);\n        }\n        setIsVisibleDocAccessForbiddenModal(false);\n        setSelectedRow(null);\n    };\n\n    const handleOpenDeleteDocModal = (data) => {\n        setIsDeleteDocModalVisible(true);\n        setSelectedRow(data);\n    };\n\n    const handleCloseDeleteDocModal = (data, isOk) => {\n        if (isOk) {\n            let tmpDocData = [...documents];\n            tmpDocData.forEach((doc) => {\n                if (doc._id === data._id) {\n                    return (doc.active = false);\n                }\n            });\n            setDocuments(tmpDocData);\n        }\n        setIsDeleteDocModalVisible(false);\n        setSelectedRow(null);\n    };\n\n    const documentsTableData =\n        documents &&\n        documents.map((document) => {\n            return {\n                id: document._id,\n                documentName: capitalizeWord(document.documentName),\n                documentType: documentTypeHandler(document.fileType),\n                size: getFileSize(document.documentSize),\n                initialSize: document.documentSize,\n                active: document.active ? (\n                    <Chip\n                        label='Aktivan'\n                        style={{\n                            color: '#007b55',\n                            backgroundColor: '#C8FACD',\n                            fontWeight: 'bold',\n                        }}\n                        size='small'\n                    />\n                ) : (\n                    <Chip\n                        label='Neaktivan'\n                        style={{\n                            color: '#B72136',\n                            backgroundColor: '#FFE7D9',\n                            fontWeight: 'bold',\n                        }}\n                        size='small'\n                    />\n                ),\n                removed: !document.active,\n                description: document.description && (\n                    <Tooltip title={document.description} placement='top-start'>\n                        <Box>{document.description}</Box>\n                    </Tooltip>\n                ),\n                ownership: capitalizeWord(document.ownership),\n                location: capitalizeWord(document.location),\n                publicAccess:\n                    document.publicAccess === true ? (\n                        <IconButton\n                            onClick={() =>\n                                handleOpenDocumentPublicAccessForbidModal(\n                                    document\n                                )\n                            }\n                            disabled={!document.active}\n                        >\n                            <CheckBox\n                                style={{\n                                    color: document.active && '#00ab55',\n                                    cursor: 'pointer',\n                                }}\n                            />\n                        </IconButton>\n                    ) : (\n                        <IconButton\n                            onClick={() =>\n                                handleOpenDocumentPublicAccessApproveModal(\n                                    document\n                                )\n                            }\n                            disabled={!document.active}\n                        >\n                            <CheckBoxOutlineBlank\n                                style={{ cursor: 'pointer' }}\n                            />\n                        </IconButton>\n                    ),\n            };\n        });\n\n    const documentsColumns = [\n        {\n            title: 'Naziv dokumenta',\n            field: 'documentName',\n            width: '15%',\n            // customSort: (a, b) => a.documentName - b.documentName,\n        },\n        {\n            title: 'Tip dokumenta',\n            field: 'documentType',\n            width: '10%',\n        },\n        {\n            title: 'Veličina',\n            field: 'size',\n            type: 'numeric',\n            align: 'left',\n            searchable: false,\n            customSort: (a, b) => a.initialSize - b.initialSize,\n        },\n        {\n            title: 'Status',\n            field: 'active',\n            align: 'left',\n            searchable: false,\n            sorting: false,\n        },\n        {\n            title: 'Opis',\n            field: 'description',\n            sorting: false,\n            // width: '25%',\n            align: 'left',\n            searchable: false,\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: 200,\n            },\n        },\n        { title: 'Vlasništvo', field: 'ownership' },\n        {\n            title: 'Lokacija',\n            field: 'location',\n        },\n        {\n            title: 'Dozvoli javni pregled',\n            field: 'publicAccess',\n            width: '8%',\n            align: 'center',\n            sorting: false,\n        },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: true,\n        pageSizeOptions: [5, 10, 20, 25, 50, 100],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: (rowData) => ({\n            backgroundColor: selectedRow?._id === rowData.id ? '#ccc' : '',\n            color: rowData.removed && 'grey',\n            font: '15px Roboto',\n        }),\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 10,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage: 'Lista dokumenata je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    const filterDocsHandler = (data) => {\n        const { docLastChangeValue, docValue, fileTypeValues, rangeValue } =\n            data;\n        let tmpDocArr = [...allDocuments];\n\n        if (fileTypeValues.length > 0) {\n            tmpDocArr = tmpDocArr.filter(\n                (doc) => fileTypeValues.includes(doc.fileType) && doc\n            );\n        }\n\n        if (rangeValue.length > 0) {\n            tmpDocArr = tmpDocArr.filter(\n                (doc) =>\n                    Number(doc.documentSize) >= rangeValue[0] &&\n                    Number(doc.documentSize) <= rangeValue[1]\n            );\n        }\n\n        if (docValue) {\n            tmpDocArr = tmpDocArr.filter((doc) =>\n                docValue === 'public' ? doc.publicAccess : !doc.publicAccess\n            );\n        }\n\n        if ((docLastChangeValue[0] && docLastChangeValue[1]) !== null) {\n            const start = new Date(docLastChangeValue[0]);\n            const end = new Date(docLastChangeValue[1]);\n            tmpDocArr = tmpDocArr.filter(\n                (doc) =>\n                    start <= new Date(doc.lastEdit).getTime() &&\n                    end >= new Date(doc.lastEdit).getTime()\n            );\n        }\n\n        setDocuments(tmpDocArr);\n    };\n\n    return (\n        <div>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={8000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity='error'\n                                sx={{ width: '100%' }}\n                            >\n                                {errorMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <Grid>\n                        <DocumentsTableFilters\n                            biggestDoc={biggestDoc}\n                            onApplyFilters={filterDocsHandler}\n                            onResetFilters={() => setDocuments(allDocuments)}\n                        />\n                    </Grid>\n                    <Grid container justifyContent='flex-end'>\n                        <Button\n                            variant='contained'\n                            className={classes.newDocBtn}\n                            onClick={() => navigate('/novidokument')}\n                        >\n                            Novi dokument\n                        </Button>\n                    </Grid>\n                    <MaterialTable\n                        columns={documentsColumns}\n                        data={documentsTableData}\n                        actions={[\n                            {\n                                icon: () => <VisibilityOutlined />,\n                                tooltip: 'Pogledati',\n                                onClick: (e, data) =>\n                                    navigate(`/pregled/${data.id}`),\n                            },\n                            {\n                                icon: () => <EditOutlined />,\n                                tooltip: 'Urediti',\n                                onClick: (e, data) =>\n                                    navigate(`/izmjena/${data.id}`),\n                            },\n                            (rowData) => ({\n                                icon: () => <DeleteOutlined />,\n                                tooltip: rowData.removed ? '' : 'Deaktivirati',\n                                onClick: (e, data) =>\n                                    handleOpenDeleteDocModal(data),\n                                disabled: rowData.removed,\n                            }),\n                        ]}\n                        title='Lista dokumenata'\n                        options={tableOptions}\n                        localization={tableLocalization}\n                    />\n                    {isVisibleDocAccessApprovedModal && (\n                        <DocumentPublicAccessModal\n                            visible={isVisibleDocAccessApprovedModal}\n                            onClose={handleCloseDocumentAccessApproveModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                    {isVisibleDocAccessForbiddenModal && (\n                        <DocumentPublicAccessForbidModal\n                            visible={isVisibleDocAccessForbiddenModal}\n                            onClose={handleCloseDocumentPublicAccessForbidModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                    {isDeleteDocModalVisible && (\n                        <DocumentDeleteModal\n                            visible={isDeleteDocModalVisible}\n                            onClose={handleCloseDeleteDocModal}\n                            selected={selectedRow}\n                        />\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default DocumentsTable;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport MaterialTable from '@material-table/core';\nimport {\n    Snackbar,\n    Alert,\n    useMediaQuery,\n    Tooltip,\n    Box,\n    Chip,\n} from '@mui/material';\nimport { VisibilityOutlined } from '@mui/icons-material';\nimport { capitalizeWord } from '../../utilities/capitalizeWord';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\n\nfunction UsersApprovedDocumentsTable() {\n    const [documents, setDocuments] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    const isMobile = useMediaQuery('(max-width:540px)');\n    const navigate = useNavigate();\n    let isMounted = useRef(true);\n\n    useEffect(() => {\n        const fetchAllApprovedDocumentsHandler = async () => {\n            await Service.getApprovedDocuments()\n                .then((res) => {\n                    if (isMounted.current) {\n                        setDocuments(res.data.userFilteredDocs);\n                        setIsLoading(false);\n                    }\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response?.status === 500\n                            ? 'Konekcija sa serverom nije uspostavljena'\n                            : err.response.data.message\n                    );\n                    setIsLoading(false);\n                });\n        };\n\n        fetchAllApprovedDocumentsHandler();\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    const documentTypeHandler = (type) => {\n        switch (type) {\n            case 'document':\n                return 'Dokument';\n            case 'audio':\n                return 'Audio';\n            case 'video':\n                return 'Video';\n            case 'image':\n                return 'Slika';\n            default:\n                break;\n        }\n    };\n\n    const documentStatusShow = (docId) => {\n        if (currentUser.approvedDocuments.includes(docId)) {\n            return (\n                <Chip\n                    label='Odobren'\n                    style={{\n                        color: '#04297A',\n                        backgroundColor: '#D0F2FF',\n                        fontWeight: 'bold',\n                    }}\n                    size='small'\n                />\n            );\n        } else if (currentUser.pendingDocuments.includes(docId)) {\n            return (\n                <Chip\n                    label='Na čekanju'\n                    style={{\n                        color: '#B78103',\n                        backgroundColor: '#FFF7CD',\n                        fontWeight: 'bold',\n                    }}\n                    size='small'\n                />\n            );\n        } else {\n            return (\n                <Chip\n                    label='Javno dostupan'\n                    style={{\n                        color: '#007b55',\n                        backgroundColor: '#C8FACD',\n                        fontWeight: 'bold',\n                    }}\n                    size='small'\n                />\n            );\n        }\n    };\n\n    const documentsTableData =\n        documents &&\n        documents.map((document) => {\n            return {\n                id: document._id,\n                documentName: capitalizeWord(document.documentName),\n                documentType: documentTypeHandler(document.fileType),\n                description: document.description && (\n                    <Tooltip title={document.description} placement='top-start'>\n                        <Box>{document.description}</Box>\n                    </Tooltip>\n                ),\n                ownership: capitalizeWord(document.ownership),\n                location: capitalizeWord(document.location),\n                status: documentStatusShow(document._id),\n            };\n        });\n\n    const documentsColumns = [\n        {\n            title: 'Naziv dokumenta',\n            field: 'documentName',\n            width: '15%',\n        },\n        {\n            title: 'Tip dokumenta',\n            field: 'documentType',\n            width: '10%',\n        },\n        {\n            title: 'Opis',\n            field: 'description',\n            sorting: false,\n            width: '35%',\n            align: 'left',\n            searchable: false,\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: 200,\n            },\n        },\n        { title: 'Vlasništvo', field: 'ownership' },\n        {\n            title: 'Lokacija',\n            field: 'location',\n        },\n        {\n            title: 'Status',\n            field: 'status',\n            align: 'left',\n            searchable: false,\n            sorting: false,\n        },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: true,\n        pageSizeOptions: [5, 10, 20, 25, 50, 100],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: {\n            font: '15px Roboto',\n        },\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 10,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage: 'Vaša lista dokumenata je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    return (\n        <div>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={8000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity='error'\n                                sx={{ width: '100%' }}\n                            >\n                                {errorMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <MaterialTable\n                        columns={documentsColumns}\n                        data={documentsTableData}\n                        actions={[\n                            {\n                                icon: () => <VisibilityOutlined />,\n                                tooltip: 'Pogledati',\n                                onClick: (e, data) =>\n                                    navigate(`/pregled/${data.id}`),\n                            },\n                        ]}\n                        title='Vaša lista dokumenata'\n                        options={tableOptions}\n                        localization={tableLocalization}\n                        style={{ marginTop: 10 }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UsersApprovedDocumentsTable;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid, Breadcrumbs, Typography, Stack } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport UsersTable from '../../components/UsersTable';\nimport './style.css';\nimport DocumentsTable from '../../components/DocumentsTable';\nimport UsersApprovedDocumentsTable from '../../components/UsersApprovedDocumentsTable';\n\nfunction Home() {\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    return (\n        <div role='presentation' className='homePage'>\n            <Grid container justifyContent='flex-start'>\n                <Breadcrumbs aria-label='breadcrumb'>\n                    <Stack\n                        direction='row'\n                        spacing={2}\n                        style={{ color: '#393e46' }}\n                    >\n                        <HomeIcon\n                            sx={{ mr: -1.5, marginTop: 0.1 }}\n                            fontSize='inherit'\n                        />\n                        <Typography>Početna</Typography>\n                    </Stack>\n                </Breadcrumbs>\n            </Grid>\n\n            {currentUser.role === 'admin' && <UsersTable />}\n            {currentUser.role === 'editor' && <DocumentsTable />}\n            {currentUser.role === 'reader' && <UsersApprovedDocumentsTable />}\n        </div>\n    );\n}\n\nexport default Home;\n","import { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\nimport { Person } from '@mui/icons-material';\n// import { fShortenNumber } from '../../../utils/formatNumber';\nimport CountUp from 'react-countup';\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n    boxShadow: 'none',\n    textAlign: 'center',\n    padding: theme.spacing(5, 0),\n    color: '#005249',\n    backgroundColor: '#C8FACD',\n    borderRadius: 20,\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n    margin: 'auto',\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    justifyContent: 'center',\n    marginBottom: theme.spacing(3),\n    color: '#005249',\n    backgroundImage: `linear-gradient(135deg, ${alpha(\n        '#005249',\n        0\n    )} 0%, ${alpha('#005249', 0.24)} 100%)`,\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function TotalUsersNumber(props) {\n    return (\n        <RootStyle>\n            <IconWrapperStyle>\n                <Person style={{ color: '#005249' }} />\n            </IconWrapperStyle>\n            <Typography variant='h3'>\n                <CountUp end={props?.totalUsers} duration={2} />\n            </Typography>\n            <Typography\n                variant='subtitle2'\n                sx={{ opacity: 0.72, fontWeight: 'bold' }}\n            >\n                Broj korisnika\n            </Typography>\n        </RootStyle>\n    );\n}\n","import { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\nimport { Login } from '@mui/icons-material';\n// import { fShortenNumber } from '../../../utils/formatNumber';\nimport CountUp from 'react-countup';\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n    boxShadow: 'none',\n    textAlign: 'center',\n    padding: theme.spacing(5, 0),\n    color: '#04297A',\n    backgroundColor: '#D0F2FF',\n    borderRadius: 20,\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n    margin: 'auto',\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    justifyContent: 'center',\n    marginBottom: theme.spacing(3),\n    color: '#04297A',\n    backgroundImage: `linear-gradient(135deg, ${alpha(\n        '#04297A',\n        0\n    )} 0%, ${alpha('#04297A', 0.24)} 100%)`,\n}));\n\nexport default function LastDayVisitors(props) {\n    return (\n        <RootStyle>\n            <IconWrapperStyle>\n                <Login style={{ color: '#04297A' }} />\n            </IconWrapperStyle>\n            <Typography variant='h3'>\n                <CountUp end={props?.todayVisit} duration={2} />\n            </Typography>\n            <Typography\n                variant='subtitle2'\n                sx={{ opacity: 0.72, fontWeight: 'bold' }}\n            >\n                Broj posjeta u posljednja 24h\n            </Typography>\n        </RootStyle>\n    );\n}\n","import { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\nimport { DocumentScanner } from '@mui/icons-material';\nimport CountUp from 'react-countup';\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n    boxShadow: 'none',\n    textAlign: 'center',\n    padding: theme.spacing(5, 0),\n    color: '#7A4F01',\n    backgroundColor: '#FFF7CD',\n    borderRadius: 20,\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n    margin: 'auto',\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    justifyContent: 'center',\n    marginBottom: theme.spacing(3),\n    color: '#7A4F01',\n    backgroundImage: `linear-gradient(135deg, ${alpha(\n        '#7A4F01',\n        0\n    )} 0%, ${alpha('#7A4F01', 0.24)} 100%)`,\n}));\n\nexport default function TotalDocsNumber(props) {\n    return (\n        <RootStyle>\n            <IconWrapperStyle>\n                <DocumentScanner style={{ color: '#7A4F01' }} />\n            </IconWrapperStyle>\n            <Typography variant='h3'>\n                <CountUp end={props?.totalDocs} duration={2} />\n            </Typography>\n            <Typography\n                variant='subtitle2'\n                sx={{ opacity: 0.72, fontWeight: 'bold' }}\n            >\n                Broj dokumenata\n            </Typography>\n        </RootStyle>\n    );\n}\n","import { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\nimport { Login } from '@mui/icons-material';\nimport CountUp from 'react-countup';\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n    boxShadow: 'none',\n    textAlign: 'center',\n    padding: theme.spacing(5, 0),\n    color: '#7A0C2E',\n    backgroundColor: '#FFE7D9',\n    borderRadius: 20,\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n    margin: 'auto',\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    justifyContent: 'center',\n    marginBottom: theme.spacing(3),\n    color: '#7A0C2E',\n    backgroundImage: `linear-gradient(135deg, ${alpha(\n        '#7A0C2E',\n        0\n    )} 0%, ${alpha('#7A0C2E', 0.24)} 100%)`,\n}));\n\nexport default function LastDayVisits(props) {\n    return (\n        <RootStyle>\n            <IconWrapperStyle>\n                <Login style={{ color: '#7A0C2E' }} />\n            </IconWrapperStyle>\n            <Typography variant='h3'>\n                <CountUp end={props?.lastDaysDocVisits} duration={2} />\n            </Typography>\n            <Typography\n                variant='subtitle2'\n                sx={{ opacity: 0.72, fontWeight: 'bold' }}\n            >\n                Broj pregledanih dokumenata u posljednja 24h\n            </Typography>\n        </RootStyle>\n    );\n}\n","// material\nimport { useTheme } from '@mui/material/styles';\n// import { GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\n// export function ChartsOptions() {\n//     const theme = useTheme();\n\n//     const background = {\n//         backdropFilter: 'blur(6px)',\n//         WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n//         backgroundColor: alpha(theme.palette.background.default, 0.72),\n//     };\n\n//     // return (\n//     //     <GlobalStyles\n//     //         styles={{\n//     //             '&.apexcharts-canvas': {\n//     //                 // Tooltip\n//     //                 '.apexcharts-xaxistooltip': {\n//     //                     ...background,\n//     //                     border: 0,\n//     //                     // boxShadow: theme.customShadows.z24,\n//     //                     color: theme.palette.text.primary,\n//     //                     borderRadius: theme.shape.borderRadiusSm,\n//     //                     '&:before': { borderBottomColor: 'transparent' },\n//     //                     '&:after': {\n//     //                         borderBottomColor: alpha(\n//     //                             theme.palette.background.default,\n//     //                             0.72\n//     //                         ),\n//     //                     },\n//     //                 },\n//     //                 '.apexcharts-tooltip.apexcharts-theme-light': {\n//     //                     ...background,\n//     //                     border: 0,\n//     //                     // boxShadow: theme.customShadows.z24,\n//     //                     borderRadius: theme.shape.borderRadiusSm,\n//     //                     '& .apexcharts-tooltip-title': {\n//     //                         border: 0,\n//     //                         textAlign: 'center',\n//     //                         fontWeight: theme.typography.fontWeightBold,\n//     //                         backgroundColor: theme.palette.grey[500_16],\n//     //                         color: theme.palette.text[\n//     //                             theme.palette.mode === 'light'\n//     //                                 ? 'secondary'\n//     //                                 : 'primary'\n//     //                         ],\n//     //                     },\n//     //                 },\n//     //                 // Legend\n//     //                 '.apexcharts-legend': {\n//     //                     padding: 0,\n//     //                 },\n//     //                 '.apexcharts-legend-series': {\n//     //                     display: 'flex !important',\n//     //                     alignItems: 'center',\n//     //                 },\n//     //                 '.apexcharts-legend-marker': {\n//     //                     marginRight: 8,\n//     //                 },\n//     //                 '.apexcharts-legend-text': {\n//     //                     lineHeight: '18px',\n//     //                     textTransform: 'capitalize',\n//     //                 },\n//     //             },\n//     //         }}\n//     //     />\n//     //     );\n// }\n\nexport default function OptionCharts() {\n    const theme = useTheme();\n\n    const LABEL_TOTAL = {\n        show: true,\n        label: 'Total',\n        color: theme.palette.text.secondary,\n        ...theme.typography.subtitle2,\n    };\n\n    const LABEL_VALUE = {\n        offsetY: 8,\n        color: theme.palette.text.primary,\n        ...theme.typography.h3,\n    };\n\n    return {\n        // Colors\n        // colors: [\n        //     '#1890FF',\n        //     '#00AB55',\n\n        //     // '#FFC107',\n        //     // '#FF4842',\n        //     // theme.palette.primary.main,\n        // ],\n\n        // Chart\n        chart: {\n            toolbar: { show: false },\n            zoom: { enabled: false },\n            // animations: { enabled: false },\n            foreColor: theme.palette.text.disabled,\n            fontFamily: theme.typography.fontFamily,\n        },\n\n        // States\n        states: {\n            hover: {\n                filter: {\n                    type: 'lighten',\n                    value: 0.04,\n                },\n            },\n            active: {\n                filter: {\n                    type: 'darken',\n                    value: 0.88,\n                },\n            },\n        },\n\n        // Fill\n        fill: {\n            opacity: 1,\n            gradient: {\n                type: 'vertical',\n                shadeIntensity: 0,\n                opacityFrom: 0.4,\n                opacityTo: 0,\n                stops: [0, 100],\n            },\n        },\n\n        // Datalabels\n        dataLabels: { enabled: false },\n\n        // Stroke\n        stroke: {\n            width: 3,\n            curve: 'smooth',\n            lineCap: 'round',\n        },\n\n        // Grid\n        grid: {\n            strokeDashArray: 3,\n            borderColor: theme.palette.divider,\n        },\n\n        // Xaxis\n        xaxis: {\n            axisBorder: { show: false },\n            axisTicks: { show: false },\n        },\n\n        // Markers\n        markers: {\n            size: 0,\n            strokeColors: theme.palette.background.paper,\n        },\n\n        // Tooltip\n        tooltip: {\n            x: {\n                show: false,\n            },\n        },\n\n        // Legend\n        legend: {\n            show: true,\n            fontSize: 13,\n            position: 'top',\n            horizontalAlign: 'right',\n            markers: {\n                radius: 12,\n            },\n            fontWeight: 500,\n            itemMargin: { horizontal: 12 },\n            labels: {\n                colors: theme.palette.text.primary,\n            },\n        },\n\n        // plotOptions\n        plotOptions: {\n            // Bar\n            bar: {\n                columnWidth: '28%',\n                borderRadius: 4,\n            },\n            // Pie + Donut\n            pie: {\n                donut: {\n                    labels: {\n                        show: true,\n                        value: LABEL_VALUE,\n                        total: LABEL_TOTAL,\n                    },\n                },\n            },\n            // Radialbar\n            radialBar: {\n                track: {\n                    strokeWidth: '100%',\n                    background: theme.palette.grey[500_16],\n                },\n                dataLabels: {\n                    value: LABEL_VALUE,\n                    total: LABEL_TOTAL,\n                },\n            },\n            // Radar\n            radar: {\n                polygons: {\n                    fill: { colors: ['transparent'] },\n                    strokeColors: theme.palette.divider,\n                    connectorColors: theme.palette.divider,\n                },\n            },\n            // polarArea\n            polarArea: {\n                rings: {\n                    strokeColor: theme.palette.divider,\n                },\n                spokes: {\n                    connectorColors: theme.palette.divider,\n                },\n            },\n        },\n\n        // Responsive\n        responsive: [\n            {\n                // sm\n                breakpoint: theme.breakpoints.values.sm,\n                options: {\n                    plotOptions: { bar: { columnWidth: '40%' } },\n                },\n            },\n            {\n                // md\n                breakpoint: theme.breakpoints.values.md,\n                options: {\n                    plotOptions: { bar: { columnWidth: '32%' } },\n                },\n            },\n        ],\n    };\n}\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Collapse,\n} from '@mui/material';\nimport { formatDate } from '../../../utilities/formatDate';\nimport moment from 'moment';\nimport { EventNote, ExpandLess, ExpandMore } from '@mui/icons-material';\n\nfunction UsersVisitModal(props) {\n    const [open, setOpen] = useState({});\n    const users = props?.users;\n\n    const handleOpenListItem = (id) => {\n        setOpen((prevState) => ({ ...prevState, [id]: !prevState[id] }));\n    };\n    return (\n        <div>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle>\n                    Pregled posjete korisnika u posljednjih 7 dana\n                </DialogTitle>\n                <DialogContent dividers>\n                    <List\n                        sx={{\n                            width: '100%',\n                            maxWidth: '100%',\n                        }}\n                        component='nav'\n                        aria-labelledby='nested-list-subheader'\n                    >\n                        {users?.map((user, index) => {\n                            return (\n                                <div key={index}>\n                                    <ListItemButton\n                                        onClick={() =>\n                                            handleOpenListItem(index)\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <EventNote />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={formatDate(\n                                                moment().subtract(index, 'days')\n                                            )}\n                                        />\n                                        {open[index] ? (\n                                            <ExpandLess />\n                                        ) : (\n                                            <ExpandMore />\n                                        )}\n                                    </ListItemButton>\n                                    <Collapse\n                                        in={open[index]}\n                                        timeout='auto'\n                                        unmountOnExit\n                                    >\n                                        <List disablePadding>\n                                            {user.length > 0 ? (\n                                                <div>\n                                                    <ListItem>\n                                                        <ListItemIcon />\n                                                        <ListItemText\n                                                            primary={`Ukupno ${\n                                                                user.length\n                                                            } ${\n                                                                user.length > 1\n                                                                    ? 'korisnika:'\n                                                                    : 'korisnik:'\n                                                            }`}\n                                                            sx={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    </ListItem>\n                                                    {user.map((usr, i) => {\n                                                        return (\n                                                            <ListItem\n                                                                key={i}\n                                                                sx={{ ml: 1 }}\n                                                            >\n                                                                <ListItemIcon />\n                                                                <ListItemText\n                                                                    secondary={`- ${usr}`}\n                                                                />\n                                                            </ListItem>\n                                                        );\n                                                    })}\n                                                </div>\n                                            ) : (\n                                                <ListItem>\n                                                    <ListItemIcon />\n                                                    <ListItemText secondary='Nema prijavljenih korisnika' />\n                                                </ListItem>\n                                            )}\n                                        </List>\n                                    </Collapse>\n                                </div>\n                            );\n                        })}\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Zatvori\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default UsersVisitModal;\n","import React, { useState } from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { Card, CardHeader, Box, IconButton, Tooltip } from '@mui/material';\nimport moment from 'moment';\nimport ChartOptions from '../../ChartsOptions';\nimport { formatDate } from '../../../utilities/formatDate';\nimport { ViewList } from '@mui/icons-material';\nimport UsersVisitModal from '../UsersVisitModal';\n\nexport default function LastSevenDayLogin(props) {\n    const [isUsersVisitModalVisible, setIsUsersVisitModalVisible] =\n        useState(false);\n\n    const lastDaysAppVisits = props?.lastDaysAppVisits;\n    const lastDaysAppVisitsUsers = props?.lastDaysAppVisitsUsers;\n\n    const CHART_DATA = [\n        {\n            name: 'Posjeta',\n            type: 'column',\n            data: lastDaysAppVisits,\n        },\n        {\n            type: 'area',\n            data: lastDaysAppVisits,\n        },\n    ];\n\n    const chartOptions = merge(ChartOptions(), {\n        stroke: { width: [0, 2, 3] },\n        plotOptions: { bar: { columnWidth: '5%', borderRadius: 4 } },\n        fill: { type: ['solid', 'gradient', 'solid'] },\n        colors: ['#1890FF', '#00AB55'],\n        labels: [\n            formatDate(moment().subtract(6, 'days')),\n            formatDate(moment().subtract(5, 'days')),\n            formatDate(moment().subtract(4, 'days')),\n            formatDate(moment().subtract(3, 'days')),\n            formatDate(moment().subtract(2, 'days')),\n            formatDate(moment().subtract(1, 'days')),\n            formatDate(moment().subtract(0, 'days')),\n        ],\n        legend: {\n            show: false,\n        },\n        // xaxis: { type: 'datetime' },\n        tooltip: {\n            shared: false,\n            intersect: false,\n            y: {\n                formatter: (y) => {\n                    if (typeof y !== 'undefined') {\n                        return `${y}`;\n                    }\n                    return y;\n                },\n            },\n        },\n    });\n\n    const handleOpenUsersVisitModal = () => {\n        setIsUsersVisitModalVisible(true);\n    };\n\n    const handleCloseUsersVisitModal = () => {\n        setIsUsersVisitModalVisible(false);\n    };\n\n    return (\n        <Card>\n            <CardHeader\n                subheader='Posjeta posljednjih 7 dana'\n                action={\n                    <Tooltip title='Pregled' placement='top'>\n                        <IconButton onClick={handleOpenUsersVisitModal}>\n                            <ViewList />\n                        </IconButton>\n                    </Tooltip>\n                }\n            />\n\n            <Box sx={{ p: 3, pb: 1 }} dir='ltr'>\n                <ReactApexChart\n                    type='line'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={364}\n                />\n            </Box>\n            {isUsersVisitModalVisible && (\n                <UsersVisitModal\n                    visible={isUsersVisitModalVisible}\n                    onClose={handleCloseUsersVisitModal}\n                    users={lastDaysAppVisitsUsers}\n                />\n            )}\n        </Card>\n    );\n}\n","import React from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { styled } from '@mui/material/styles';\nimport { Card, CardHeader } from '@mui/material';\nimport ChartOptions from '../../ChartsOptions';\n\nconst CHART_HEIGHT = 372;\nconst LEGEND_HEIGHT = 72;\n\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\n    height: CHART_HEIGHT,\n    marginTop: theme.spacing(5),\n    '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\n    '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\n        overflow: 'visible',\n    },\n    '& .apexcharts-legend': {\n        height: LEGEND_HEIGHT,\n        alignContent: 'center',\n        position: 'relative !important',\n        borderTop: `solid 1px ${theme.palette.divider}`,\n        top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`,\n    },\n}));\n\nexport default function UsersAge(props) {\n    const usersAge = props?.usersAge;\n\n    const CHART_DATA = usersAge;\n\n    const chartOptions = merge(ChartOptions(), {\n        colors: [\n            '#00AB55',\n            '#1890FF',\n            '#FFC107',\n            '#FF4842',\n            '#826AF9',\n            '#FF9933',\n        ],\n        labels: ['Ispod 20', '20-30', '30-40', '40-50', '50-60', 'Iznad 60'],\n        // stroke: { colors: [theme.palette.background.paper] },\n        legend: { floating: true, horizontalAlign: 'center' },\n        dataLabels: { enabled: true, dropShadow: { enabled: false } },\n        tooltip: {\n            fillSeriesColor: false,\n            y: {\n                // formatter: (seriesName) => fNumber(seriesName),\n                title: {\n                    formatter: (seriesName) => `${seriesName}: korisnika`,\n                },\n            },\n        },\n        plotOptions: {\n            pie: { donut: { labels: { show: false } } },\n        },\n    });\n\n    return (\n        <Card>\n            <CardHeader subheader='Pregled korisnika po godinama' />\n\n            <ChartWrapperStyle dir='ltr'>\n                <ReactApexChart\n                    type='pie'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={280}\n                />\n            </ChartWrapperStyle>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { Box, Card, CardHeader } from '@mui/material';\nimport ChartOptions from '../../ChartsOptions';\n\nexport default function UsersCountries(props) {\n    const countries = props?.usersCountries;\n    let sortedCountries = [];\n\n    for (let country of countries) {\n        sortedCountries.unshift(country);\n    }\n\n    const CHART_DATA = [\n        {\n            data: [sortedCountries.map((country) => country[1])][0],\n        },\n    ];\n    const chartOptions = merge(ChartOptions(), {\n        tooltip: {\n            marker: { show: false },\n            y: {\n                // formatter: (seriesName) => fNumber(seriesName),\n                title: {\n                    formatter: () => `Broj korisnika`,\n                },\n            },\n        },\n        colors: ['#00AB55'],\n        plotOptions: {\n            bar: { horizontal: true, barHeight: '7%', borderRadius: 2 },\n        },\n        xaxis: {\n            categories: [sortedCountries.map((country) => country[0])][0],\n        },\n    });\n\n    return (\n        <Card>\n            <CardHeader subheader='Pregled korisnika po državama' />\n\n            <Box sx={{ mx: 3 }} dir='ltr'>\n                <ReactApexChart\n                    type='bar'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={396}\n                />\n            </Box>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { styled } from '@mui/material/styles';\nimport { Card, CardHeader } from '@mui/material';\nimport ChartOptions from '../../ChartsOptions';\n\nconst CHART_HEIGHT = 372;\nconst LEGEND_HEIGHT = 72;\n\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\n    height: CHART_HEIGHT,\n    marginTop: theme.spacing(5),\n    '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\n    '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\n        overflow: 'visible',\n    },\n    '& .apexcharts-legend': {\n        height: LEGEND_HEIGHT,\n        alignContent: 'center',\n        position: 'relative !important',\n        borderTop: `solid 1px ${theme.palette.divider}`,\n        top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`,\n    },\n}));\n\nexport default function PublicPrivateDocs(props) {\n    const CHART_DATA = [props?.publicDocs, props?.privateDocs];\n\n    const chartOptions = merge(ChartOptions(), {\n        colors: ['#FF9933', '#826AF9'],\n        labels: ['Javni', 'Privatni'],\n        // stroke: { colors: [theme.palette.background.paper] },\n        legend: { floating: true, horizontalAlign: 'center' },\n        dataLabels: { enabled: true, dropShadow: { enabled: false } },\n        tooltip: {\n            fillSeriesColor: false,\n            y: {\n                // formatter: (seriesName) => fNumber(seriesName),\n                title: {\n                    formatter: (seriesName) => `${seriesName}`,\n                },\n            },\n        },\n        plotOptions: {\n            pie: { donut: { labels: { show: false } } },\n        },\n    });\n\n    return (\n        <Card>\n            <CardHeader subheader='Pregled dokumenata po pristupu' />\n            <ChartWrapperStyle dir='ltr'>\n                <ReactApexChart\n                    type='pie'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={280}\n                />\n            </ChartWrapperStyle>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { Box, Card, CardHeader } from '@mui/material';\nimport ChartOptions from '../../ChartsOptions';\n\nexport default function MostAccessedDocs(props) {\n    const docs = props?.mostAccessedDocs;\n\n    const CHART_DATA = [\n        {\n            data: docs.map((doc) => doc.visits),\n        },\n    ];\n    const chartOptions = merge(ChartOptions(), {\n        tooltip: {\n            marker: { show: false },\n            y: {\n                title: {\n                    formatter: () => `Broj posjeta`,\n                },\n            },\n        },\n        colors: ['#1890FF'],\n        plotOptions: { bar: { columnWidth: '12%', borderRadius: 4 } },\n        labels: docs.map((doc) => doc.documentName),\n    });\n\n    return (\n        <Card>\n            <CardHeader subheader='Najposjećeniji dokumenti' />\n            <Box sx={{ mx: 3 }} dir='ltr'>\n                <ReactApexChart\n                    type='bar'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={396}\n                />\n            </Box>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { Box, Card, CardHeader } from '@mui/material';\nimport ChartOptions from '../../ChartsOptions';\n\nexport default function MostSearchedDocs(props) {\n    const docs = props?.mostSearchedDocs;\n\n    const CHART_DATA = [\n        {\n            data: docs.map((doc) => doc.searchNumber),\n        },\n    ];\n    const chartOptions = merge(ChartOptions(), {\n        tooltip: {\n            marker: { show: false },\n            y: {\n                title: {\n                    formatter: () => `Broj traženja`,\n                },\n            },\n        },\n        colors: ['#00AB55'],\n        plotOptions: { bar: { columnWidth: '12%', borderRadius: 4 } },\n        labels: docs.map((doc) => doc.documentName),\n    });\n\n    return (\n        <Card>\n            <CardHeader subheader='Najtraženiji dokumenti po ključnim riječima' />\n            <Box sx={{ mx: 3 }} dir='ltr'>\n                <ReactApexChart\n                    type='bar'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={396}\n                />\n            </Box>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\nimport { Box, Card, CardHeader } from '@mui/material';\nimport ChartOptions from '../../ChartsOptions';\n\nexport default function MostDownloadedDocs(props) {\n    const docs = props?.mostDownloadedDocs;\n\n    const CHART_DATA = [\n        {\n            data: docs.map((doc) => doc.downloadNumber),\n        },\n    ];\n    const chartOptions = merge(ChartOptions(), {\n        tooltip: {\n            marker: { show: false },\n            y: {\n                title: {\n                    formatter: () => `Broj preuzimanja`,\n                },\n            },\n        },\n        colors: ['#FFC107'],\n        plotOptions: { bar: { columnWidth: '8%', borderRadius: 4 } },\n        labels: docs.map((doc) => doc.documentName),\n    });\n\n    return (\n        <Card>\n            <CardHeader subheader='Dokumenti sa najviše preuzimanja' />\n            <Box sx={{ mx: 3 }} dir='ltr'>\n                <ReactApexChart\n                    type='bar'\n                    series={CHART_DATA}\n                    options={chartOptions}\n                    height={396}\n                />\n            </Box>\n        </Card>\n    );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n    Grid,\n    Breadcrumbs,\n    Typography,\n    Stack,\n    Snackbar,\n    Alert,\n} from '@mui/material';\nimport { Home, Timeline } from '@mui/icons-material';\nimport UsersTotal from '../../components/UsersStatistics/UsersTotal';\nimport LastDayVisitors from '../../components/UsersStatistics/LastDayVisitors';\nimport DocumentsTotal from '../../components/DocumentsStatistics/DocumentsTotal';\nimport LastDayDocVisits from '../../components/DocumentsStatistics/LastDayDocVisits';\nimport LastSevenDayVisits from '../../components/UsersStatistics/LastSevenDayVisits';\nimport UsersAge from '../../components/UsersStatistics/UsersAge';\nimport UsersCountries from '../../components/UsersStatistics/UsersCountries';\nimport PublicPrivateDocs from '../../components/DocumentsStatistics/PublicPrivateDocs';\nimport './style.css';\nimport MostAccessedDocs from '../../components/DocumentsStatistics/MostAccessedDocs';\nimport Service from '../../api/service';\nimport Loader from '../../components/Loader';\nimport MostSearchedDocs from '../../components/DocumentsStatistics/MostSearchedDocs';\nimport MostDownloadedDocs from '../../components/DocumentsStatistics/MostDownloadedDocs';\n\nfunction Statistics() {\n    const [publicDocs, setPublicDocs] = useState(0);\n    const [privateDocs, setPrivateDocs] = useState(0);\n    const [mostAccessedDocs, setMostAccessedDocs] = useState([]);\n    const [mostSearchedDocs, setMostSearchedDocs] = useState([]);\n    const [mostDownloadedDocs, setMostDownloadedDocs] = useState([]);\n    const [lastDaysDocVisits, setLastDaysDocVisits] = useState(0);\n    const [totalDocs, setTotalDocs] = useState(0);\n\n    const [lastDaysAppVisits, setLastDaysAppVisits] = useState([]);\n    const [lastDaysAppVisitsUsers, setLastDaysAppVisitsUsers] = useState([]);\n    const [usersAge, setUsersAge] = useState([]);\n    const [usersCountries, setUsersCountries] = useState([]);\n    const [totalUsers, setTotalUsers] = useState(0);\n    const [todayVisit, setTodayVisit] = useState(0);\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        const fetchDocsStats = async () => {\n            await Service.getDocsStats()\n                .then((res) => {\n                    if (isMounted.current) {\n                        setPublicDocs(res.data.publicDocs);\n                        setPrivateDocs(res.data.privateDocs);\n                        setMostAccessedDocs(res.data.sortedDocs);\n                        setMostSearchedDocs(res.data.mostSearchedDocs);\n                        setMostDownloadedDocs(res.data.mostDownloadedDocs);\n                        setTotalDocs(res.data.totalDocs);\n                        setLastDaysDocVisits(res.data.lastDayDocsVisits);\n                    }\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                });\n        };\n\n        const fetchUsersStats = async () => {\n            await Service.getUsersStats()\n                .then((res) => {\n                    if (isMounted.current) {\n                        setLastDaysAppVisits(res.data.lastDaysAppVisits);\n                        setLastDaysAppVisitsUsers(\n                            res.data.lastDaysAppVisitsUsers\n                        );\n                        setTodayVisit(res.data.todayVisit);\n                        setUsersAge(res.data.usersAge);\n                        setUsersCountries(res.data.sortedCountries);\n                        setTotalUsers(res.data.totalUsers);\n                        setIsLoading(false);\n                    }\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                    setIsLoading(false);\n                });\n        };\n\n        fetchDocsStats();\n        fetchUsersStats();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    return (\n        <div className='statisticsPage'>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={8000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity='error'\n                                sx={{ width: '100%' }}\n                            >\n                                {errorMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <Grid container justifyContent='flex-start'>\n                        <Breadcrumbs aria-label='breadcrumb'>\n                            <NavLink\n                                to='/'\n                                style={{\n                                    textDecoration: 'none',\n                                    color: 'grey',\n                                }}\n                            >\n                                <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                                Početna\n                            </NavLink>\n                            <Stack\n                                direction='row'\n                                spacing={2}\n                                style={{ color: '#393e46' }}\n                            >\n                                <Timeline\n                                    sx={{ mr: -1.2, marginTop: 0.3 }}\n                                    fontSize='inherit'\n                                />\n                                <Typography>Statistika</Typography>\n                            </Stack>\n                        </Breadcrumbs>\n                    </Grid>\n                    <div className='statNumbers'>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6} md={3}>\n                                <UsersTotal totalUsers={totalUsers} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={3}>\n                                <LastDayVisitors todayVisit={todayVisit} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={3}>\n                                <DocumentsTotal totalDocs={totalDocs} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={3}>\n                                <LastDayDocVisits\n                                    lastDaysDocVisits={lastDaysDocVisits}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} md={6} lg={8}>\n                                <LastSevenDayVisits\n                                    lastDaysAppVisits={lastDaysAppVisits}\n                                    lastDaysAppVisitsUsers={\n                                        lastDaysAppVisitsUsers\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <UsersAge usersAge={usersAge} />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <UsersCountries\n                                    usersCountries={usersCountries}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <PublicPrivateDocs\n                                    publicDocs={publicDocs}\n                                    privateDocs={privateDocs}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={6}>\n                                <MostAccessedDocs\n                                    mostAccessedDocs={mostAccessedDocs}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={6}>\n                                <MostSearchedDocs\n                                    mostSearchedDocs={mostSearchedDocs}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={12}>\n                                <MostDownloadedDocs\n                                    mostDownloadedDocs={mostDownloadedDocs}\n                                />\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Statistics;\n","import React, { useState } from 'react';\nimport {\n    Grid,\n    TextField,\n    Button,\n    InputAdornment,\n    IconButton,\n    Typography,\n    Backdrop,\n    Alert,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Snackbar,\n    AlertTitle,\n} from '@mui/material';\nimport {\n    Lock,\n    Visibility,\n    VisibilityOff,\n    ExpandMore,\n    HighlightOff,\n} from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport Loader from '../../components/Loader';\nimport './style.css';\nimport Service from '../../api/service';\n\nfunction PasswordChangeAccordion() {\n    const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSuccessAlertVisible, setIsSuccessAlertVisible] = useState(false);\n    const [isErrorAlertVisible, setIsErrorAlertVisible] = useState(false);\n    const [alertType, setAlertType] = useState('success');\n    const [alertMessage, setAlertMessage] = useState('');\n    const [isExpandedAccordion, setIsExpandedAccordion] = useState(false);\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    const validationSchema = Yup.object().shape({\n        currentPassword: Yup.string().required('Morate unijeti staru šifru'),\n        password: Yup.string()\n            .required('Šifra je obavezna')\n            .max(24, 'Šifra može da sadrži maximalno 24 karaktera')\n            .matches(\n                /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                'Šifra mora da sadrži minimalno 8 karaktera, jedno veliko, jedno malo slovo, jedan broj i jedan simbol'\n            ),\n        passwordConfirm: Yup.string()\n            .required('Morate potvrditi novu šifru')\n            .oneOf([Yup.ref('password'), null], 'Šifre moraju biti iste'),\n    });\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n        defaultValues: {\n            currentPassword: '',\n            password: '',\n            passwordConfirm: '',\n        },\n    });\n\n    const handleUpdatePassword = async (passwordValues) => {\n        setIsLoading(true);\n        await Service.updateUserPassword({\n            currentPassword: passwordValues.currentPassword,\n            newPassword: passwordValues.password,\n            id: currentUser?._id,\n        })\n            .then((res) => {\n                setIsSuccessAlertVisible(true);\n                setAlertMessage(res.data.message);\n                setAlertType(res.data.status);\n                reset();\n                setIsErrorAlertVisible(false);\n                setIsExpandedAccordion(false);\n                window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth',\n                });\n            })\n            .catch((err) => {\n                setAlertMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena, pokušajte da osjvežite aplikaciju ili nas kontaktirajte putem info maila.'\n                );\n                setIsErrorAlertVisible(true);\n                setAlertType(err.response ? err.response.data.status : 'error');\n            });\n        setIsLoading(false);\n    };\n\n    const handleChangeAccordion = (panel) => (event, isExpanded) => {\n        setIsExpandedAccordion(isExpanded ? panel : false);\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            {isSuccessAlertVisible && (\n                <Snackbar\n                    open={isSuccessAlertVisible}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    autoHideDuration={6000}\n                    onClose={() => setIsSuccessAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsSuccessAlertVisible(false)}\n                        severity={alertType}\n                        sx={{ width: '100%', font: '14px Roboto' }}\n                    >\n                        {alertMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            <Accordion\n                expanded={isExpandedAccordion === 'panel1'}\n                onChange={handleChangeAccordion('panel1')}\n                sx={{ m: 1, borderRadius: 1 }}\n            >\n                <AccordionSummary expandIcon={<ExpandMore />}>\n                    <Typography>Promjena šifre</Typography>\n                </AccordionSummary>\n                <AccordionDetails sx={{ padding: 0 }}>\n                    <div className='accordionOptions'>\n                        <Grid\n                            container\n                            justifyContent='center'\n                            spacing={2}\n                            columns={12}\n                            sx={{ mb: 2, padding: 1 }}\n                        >\n                            <Grid item xs={12} sm={10} md={8}>\n                                {isErrorAlertVisible && (\n                                    <Alert\n                                        severity={alertType}\n                                        action={\n                                            <HighlightOff\n                                                onClick={() =>\n                                                    setIsErrorAlertVisible(\n                                                        false\n                                                    )\n                                                }\n                                                style={{ cursor: 'pointer' }}\n                                            />\n                                        }\n                                        style={{\n                                            marginBottom: 15,\n                                        }}\n                                    >\n                                        <AlertTitle>Greška</AlertTitle>\n                                        {alertMessage}\n                                        <strong> Pokušajte ponovo !</strong>\n                                    </Alert>\n                                )}\n                            </Grid>\n                            <Grid item xs={12} sm={10} md={8}>\n                                <TextField\n                                    id='currentPassword'\n                                    label='Trenutna šifra'\n                                    type={\n                                        showCurrentPassword\n                                            ? 'text'\n                                            : 'password'\n                                    }\n                                    fullWidth\n                                    required\n                                    {...register('currentPassword')}\n                                    error={errors.password ? true : false}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <IconButton\n                                                    aria-label='toggle password visibility'\n                                                    onClick={() =>\n                                                        setShowCurrentPassword(\n                                                            !showCurrentPassword\n                                                        )\n                                                    }\n                                                >\n                                                    {showCurrentPassword ? (\n                                                        <Visibility\n                                                            style={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    ) : (\n                                                        <VisibilityOff\n                                                            style={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        textAlign: 'left',\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.currentPassword?.message}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={10} md={8}>\n                                <TextField\n                                    id='password'\n                                    label='Nova šifra'\n                                    type={showPassword ? 'text' : 'password'}\n                                    fullWidth\n                                    required\n                                    {...register('password')}\n                                    error={errors.password ? true : false}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <IconButton\n                                                    aria-label='toggle password visibility'\n                                                    onClick={() =>\n                                                        setShowPassword(\n                                                            !showPassword\n                                                        )\n                                                    }\n                                                >\n                                                    {showPassword ? (\n                                                        <Visibility\n                                                            style={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    ) : (\n                                                        <VisibilityOff\n                                                            style={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        textAlign: 'left',\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.password?.message}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={10} md={8}>\n                                <TextField\n                                    id='passwordConfirm'\n                                    label='Potvrdite novu šifru'\n                                    type={showPassword ? 'text' : 'password'}\n                                    fullWidth\n                                    required\n                                    {...register('passwordConfirm')}\n                                    error={\n                                        errors.passwordConfirm ? true : false\n                                    }\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <IconButton\n                                                    aria-label='toggle password visibility'\n                                                    onClick={() =>\n                                                        setShowPassword(\n                                                            !showPassword\n                                                        )\n                                                    }\n                                                >\n                                                    {showPassword ? (\n                                                        <Visibility\n                                                            style={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    ) : (\n                                                        <VisibilityOff\n                                                            style={{\n                                                                color: '#393e46',\n                                                            }}\n                                                        />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        textAlign: 'left',\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.passwordConfirm?.message}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container justifyContent='center' columns={12}>\n                            <Grid item xs={8} sm={6} md={4}>\n                                <Button\n                                    variant='contained'\n                                    startIcon={<Lock />}\n                                    sx={{\n                                        m: 1,\n                                        mt: -1,\n                                        mb: 2,\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                        width: '100%',\n                                    }}\n                                    onClick={handleSubmit(handleUpdatePassword)}\n                                    // disabled={!switchChecked}\n                                >\n                                    Izmjeni\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n\nexport default PasswordChangeAccordion;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Grid,\n    Breadcrumbs,\n    Typography,\n    Stack,\n    Card,\n    Divider,\n    OutlinedInput,\n    InputLabel,\n    Switch,\n    FormGroup,\n    FormControlLabel,\n    Button,\n    TextField,\n    Autocomplete,\n    Box,\n    Alert,\n    Snackbar,\n    Backdrop,\n} from '@mui/material';\nimport { Home, Person, LocationOn, SaveOutlined } from '@mui/icons-material';\nimport { DatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport countries from '../../utilities/countries';\nimport femaleLogo from '../../assets/femaleLogo.png';\nimport maleLogo from '../../assets/maleLogo.png';\nimport Service from '../../api/service';\nimport Loader from '../../components/Loader';\nimport { authActions } from '../../store/auth';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport PasswordChangeAccordion from '../../components/PasswordChangeAccordion';\nimport './style.css';\n\nfunction Profile() {\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [alertType, setAlertType] = useState('success');\n    const [switchChecked, setSwitchChecked] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string().required('Ime je obavezno'),\n        lastName: Yup.string().required('Prezime je obavezno'),\n        phoneNumber: Yup.string()\n            .required('Broj telefona je obavezan')\n            .min(10, 'Nedovoljan broj karaktera'),\n        dob: Yup.date().required('Datum rođenja je obavezan'),\n        country: Yup.string().required('Država je obavezna'),\n        organization: Yup.string(),\n        address: Yup.string(),\n        city: Yup.string(),\n        about: Yup.string(),\n    });\n\n    const {\n        register,\n        control,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n        defaultValues: {\n            firstName: currentUser?.firstName,\n            lastName: currentUser?.lastName,\n            dob: currentUser?.dob,\n            address: currentUser?.address,\n            country: currentUser?.country,\n            city: currentUser?.city,\n            phoneNumber: currentUser?.phoneNumber,\n            organization: currentUser?.organization,\n            about: currentUser?.about,\n        },\n    });\n\n    const handleSwitchChange = (event) => {\n        setSwitchChecked(event.target.checked);\n    };\n\n    const handleUpdateProfile = async (values) => {\n        setIsLoading(true);\n        await Service.updateUserProfile({\n            values,\n            id: currentUser._id,\n        })\n            .then((res) => {\n                dispatch(authActions.setCurrentUser(res.data.user));\n                setIsLoading(false);\n                setAlertType('success');\n                setIsAlertVisible(true);\n                setAlertMessage(res.data.message);\n                setSwitchChecked(false);\n            })\n            .catch((err) => {\n                setAlertMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena.'\n                );\n                setAlertType('error');\n                setIsAlertVisible(true);\n                setIsLoading(false);\n            });\n    };\n\n    return (\n        <div className='profilePage'>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            {isAlertVisible && (\n                <Snackbar\n                    open={isAlertVisible}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    autoHideDuration={6000}\n                    onClose={() => setIsAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsAlertVisible(false)}\n                        severity={alertType}\n                        sx={{ width: '100%', font: '14px Roboto' }}\n                    >\n                        {alertMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            <Grid container justifyContent='flex-start'>\n                <Breadcrumbs aria-label='breadcrumb'>\n                    <NavLink\n                        to='/'\n                        style={{ textDecoration: 'none', color: 'grey' }}\n                    >\n                        <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                        Početna\n                    </NavLink>\n                    <Stack\n                        direction='row'\n                        spacing={2}\n                        style={{ color: '#393e46' }}\n                    >\n                        <Person\n                            sx={{ mr: -1.2, marginTop: 0.3 }}\n                            fontSize='inherit'\n                        />\n                        <Typography>Profil</Typography>\n                    </Stack>\n                </Breadcrumbs>\n            </Grid>\n            <div className='userCard'>\n                <Card sx={{ borderRadius: 3, backgroundColor: '#f4f6f8' }}>\n                    <div className='userNameAvatarDiv'>\n                        <Grid container justifyContent='flex-end'>\n                            <FormGroup sx={{ mr: 1 }}>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            onChange={handleSwitchChange}\n                                            checked={switchChecked}\n                                        />\n                                    }\n                                    label='Urediti profil'\n                                    labelPlacement='start'\n                                />\n                            </FormGroup>\n                        </Grid>\n                        <img\n                            src={\n                                currentUser?.gender === 'female'\n                                    ? femaleLogo\n                                    : maleLogo\n                            }\n                            alt='user avatar'\n                            className='userAvatarProfilePage'\n                        />\n                        <Typography\n                            variant='h5'\n                            align='center'\n                            sx={{ margin: 1.5 }}\n                        >\n                            {`${currentUser?.firstName} ${currentUser?.lastName}`}\n                        </Typography>\n                        <Typography align='center' sx={{ color: '#637381' }}>\n                            {currentUser?.email}\n                        </Typography>\n                        <Stack\n                            direction='row'\n                            spacing={2}\n                            justifyContent='center'\n                            sx={{ margin: 1.5 }}\n                        >\n                            <LocationOn style={{ color: '#637381' }} />\n                            <Typography\n                                align='center'\n                                sx={{ color: '#637381' }}\n                            >\n                                {currentUser?.country}\n                            </Typography>\n                        </Stack>\n                    </div>\n                    <Divider\n                        variant='middle'\n                        sx={{ mb: 1.5, color: '#637381' }}\n                    />\n\n                    <div className='userMainInfo'>\n                        <Typography\n                            variant='subtitle1'\n                            sx={{\n                                fontWeight: 'bold',\n                                color: '#637381',\n                            }}\n                        >\n                            INFO\n                        </Typography>\n                        <Grid\n                            container\n                            spacing={2}\n                            columns={12}\n                            sx={{ padding: 1 }}\n                        >\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel>Ime</InputLabel>\n                                <OutlinedInput\n                                    id='firstName'\n                                    fullWidth\n                                    sx={{ backgroundColor: '#fff' }}\n                                    disabled={!switchChecked}\n                                    {...register('firstName')}\n                                    error={errors.firstName ? true : false}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.firstName?.message}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel>Prezime</InputLabel>\n                                <OutlinedInput\n                                    fullWidth\n                                    id='lastName'\n                                    sx={{ backgroundColor: '#fff' }}\n                                    disabled={!switchChecked}\n                                    {...register('lastName')}\n                                    error={errors.lastName ? true : false}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.lastName?.message}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel>Email</InputLabel>\n                                <TextField\n                                    fullWidth\n                                    id='email'\n                                    defaultValue={currentUser?.email}\n                                    sx={{ backgroundColor: '#fff' }}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                    disabled={!switchChecked}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel>Datum rođenja</InputLabel>\n                                <LocalizationProvider\n                                    dateAdapter={AdapterDateFns}\n                                >\n                                    <Controller\n                                        control={control}\n                                        name='dob'\n                                        defaultValue={currentUser?.dob}\n                                        render={({ field }) => (\n                                            <DatePicker\n                                                {...field}\n                                                inputFormat='dd/MM/yyyy'\n                                                disableFuture\n                                                onChange={(e) => {\n                                                    field.onChange(\n                                                        e && e.toJSON()\n                                                    );\n                                                }}\n                                                clearable\n                                                disabled={!switchChecked}\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        required\n                                                        fullWidth\n                                                        sx={{\n                                                            backgroundColor:\n                                                                '#fff',\n                                                        }}\n                                                        error={\n                                                            errors.dob\n                                                                ? true\n                                                                : false\n                                                        }\n                                                    />\n                                                )}\n                                            />\n                                        )}\n                                        rules={{ required: true }}\n                                    />\n                                    <Typography\n                                        variant='inherit'\n                                        color='red'\n                                        sx={{\n                                            font: '12px Roboto',\n                                        }}\n                                    >\n                                        {errors.dob &&\n                                            'Datum rođenja je obavezan'}\n                                    </Typography>\n                                </LocalizationProvider>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Divider\n                        variant='middle'\n                        sx={{\n                            mt: 2,\n                            mb: 1.5,\n                            color: '#637381',\n                        }}\n                    />\n                    <div className='userContactInfo'>\n                        <Typography\n                            variant='subtitle1'\n                            sx={{ fontWeight: 'bold', color: '#637381', mr: 2 }}\n                        >\n                            KONTAKT INFO\n                        </Typography>\n                        <Grid\n                            container\n                            spacing={2}\n                            columns={12}\n                            sx={{ padding: 1 }}\n                        >\n                            <Grid item xs={12}>\n                                <InputLabel>Adresa</InputLabel>\n                                <OutlinedInput\n                                    fullWidth\n                                    id='address'\n                                    sx={{ backgroundColor: '#fff' }}\n                                    disabled={!switchChecked}\n                                    {...register('address')}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <InputLabel>Država</InputLabel>\n\n                                <Controller\n                                    name='country'\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Autocomplete\n                                            id='country'\n                                            options={countries}\n                                            defaultValue={currentUser?.country}\n                                            isOptionEqualToValue={(\n                                                option,\n                                                value\n                                            ) =>\n                                                option.label === value.label ||\n                                                option.label === value\n                                            }\n                                            disabled={!switchChecked}\n                                            renderOption={(props, option) => (\n                                                <Box\n                                                    component='li'\n                                                    sx={{\n                                                        '& > img': {\n                                                            mr: 2,\n                                                            flexShrink: 0,\n                                                        },\n                                                    }}\n                                                    {...props}\n                                                >\n                                                    <img\n                                                        loading='lazy'\n                                                        width='20'\n                                                        src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                                                        srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                                                        alt=''\n                                                    />\n                                                    {option.label} (\n                                                    {option.code})\n                                                </Box>\n                                            )}\n                                            required\n                                            fullWidth\n                                            renderInput={(params) => (\n                                                <TextField\n                                                    {...params}\n                                                    required\n                                                    sx={{\n                                                        backgroundColor: '#fff',\n                                                    }}\n                                                    error={\n                                                        errors.country\n                                                            ? true\n                                                            : false\n                                                    }\n                                                />\n                                            )}\n                                            onChange={(e, value) =>\n                                                field.onChange(\n                                                    value && value.label\n                                                )\n                                            }\n                                        />\n                                    )}\n                                    rules={{ required: true }}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.country && 'Država je obavezna'}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <InputLabel>Grad</InputLabel>\n                                <OutlinedInput\n                                    fullWidth\n                                    id='city'\n                                    sx={{ backgroundColor: '#fff' }}\n                                    disabled={!switchChecked}\n                                    {...register('city')}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} sm={4}>\n                                <InputLabel>Broj telefona</InputLabel>\n                                <Controller\n                                    control={control}\n                                    name='phoneNumber'\n                                    // defaultValue=''\n                                    render={({ field }) => (\n                                        <MuiPhoneNumber\n                                            id='phoneNumber'\n                                            required\n                                            fullWidth\n                                            // defaultValue=''\n                                            value={currentUser?.phoneNumber}\n                                            onChange={(value) =>\n                                                field.onChange(value && value)\n                                            }\n                                            variant='outlined'\n                                            disableAreaCodes={true}\n                                            sx={{ backgroundColor: '#fff' }}\n                                            disabled={!switchChecked}\n                                            error={\n                                                errors.phoneNumber\n                                                    ? true\n                                                    : false\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Typography\n                                    variant='inherit'\n                                    color='red'\n                                    sx={{\n                                        marginLeft: 4,\n                                        font: '12px Roboto',\n                                    }}\n                                >\n                                    {errors.phoneNumber &&\n                                        'Broj telefona je obavezan'}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Divider\n                        variant='middle'\n                        sx={{\n                            mt: 2,\n                            mb: 1.5,\n                            color: '#637381',\n                        }}\n                    />\n\n                    <div className='additionalInfo'>\n                        <Typography\n                            variant='subtitle1'\n                            sx={{ fontWeight: 'bold', color: '#637381', mr: 2 }}\n                        >\n                            DODATNI INFO\n                        </Typography>\n                        <Grid\n                            container\n                            spacing={2}\n                            columns={12}\n                            sx={{ padding: 1 }}\n                        >\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel>Organizacija</InputLabel>\n                                <OutlinedInput\n                                    fullWidth\n                                    id='organization'\n                                    sx={{ backgroundColor: '#fff' }}\n                                    disabled={!switchChecked}\n                                    {...register('organization')}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <InputLabel>O meni</InputLabel>\n                                <OutlinedInput\n                                    fullWidth\n                                    id='about'\n                                    multiline\n                                    rows={2}\n                                    sx={{ backgroundColor: '#fff' }}\n                                    disabled={!switchChecked}\n                                    {...register('about')}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container justifyContent='center' columns={12}>\n                            <Grid item xs={8} sm={6} md={4}>\n                                <Button\n                                    variant='contained'\n                                    startIcon={<SaveOutlined />}\n                                    sx={{\n                                        m: 1,\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                        width: '100%',\n                                    }}\n                                    onClick={handleSubmit(handleUpdateProfile)}\n                                    disabled={!switchChecked}\n                                >\n                                    Spasi\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <PasswordChangeAccordion />\n                    </div>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDropzone } from 'react-dropzone';\nimport {\n    Grid,\n    Breadcrumbs,\n    Typography,\n    Stack,\n    Select,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Alert,\n    AlertTitle,\n    TextField,\n    List,\n    ListItem,\n    ListItemText,\n    Button,\n    IconButton,\n    Snackbar,\n    Backdrop,\n    Checkbox,\n    FormControlLabel,\n} from '@mui/material';\nimport {\n    Home,\n    DocumentScanner,\n    HighlightOff,\n    AddCircleOutlineOutlined,\n    DeleteOutline,\n    CloudUploadOutlined,\n} from '@mui/icons-material';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport Service from '../../api/service';\nimport Loader from '../../components/Loader';\nimport './style.css';\n\nfunction NewDocument() {\n    const [fileType, setFileType] = useState('');\n    const [selectedFileType, setSelectedFileType] = useState('');\n    const [files, setFiles] = useState([]);\n    const [isFileAlertVisible, setIsFileAlertVisible] = useState(false);\n    const [isUploadAlertVisible, setIsUploadAlertVisible] = useState(false);\n    const [uploadMessage, setUploadMessage] = useState('');\n    const [uploadAlertType, setUploadAlertType] = useState('success');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    const maxDocFileSize = 25000000;\n    const maxOtherFilesSize = 1000000000;\n\n    const validationSchema = Yup.object().shape({\n        documentName: Yup.string().required('Ime dokumenta je obavezno'),\n        description: Yup.string().required('Opis dokumenta je obavezan'),\n        ownership: Yup.string().required('Vlasništvo dokumenta je obavezno'),\n        publicAccess: Yup.bool(),\n        location: Yup.string().required('Lokacija je obavezna'),\n        active: Yup.bool(),\n        keyWords: Yup.string().required('Ključne riječi su obavezne'),\n    });\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        control,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            documentName: '',\n            description: '',\n            ownership: '',\n            publicAccess: false,\n            location: '',\n            active: false,\n            keyWords: '',\n        },\n        resolver: yupResolver(validationSchema),\n    });\n\n    const changeFileTypeHandler = (e) => {\n        setFileType(e.target.value);\n        switch (e.target.value) {\n            case 'image':\n                setSelectedFileType('.jpeg, .png, .jpg, .gif');\n                break;\n            case 'video':\n                setSelectedFileType('.mp4, .MPEG-4, .mkv, .avi, .flv, .mov');\n                break;\n            case 'audio':\n                setSelectedFileType('.mp3, .aac, .wav, .wma');\n                break;\n            case 'document':\n                setSelectedFileType('.pdf, .doc, .docx, .txt');\n                break;\n            default:\n                break;\n        }\n        setFiles([]);\n    };\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: selectedFileType,\n        onDrop: (acceptedFiles) => {\n            acceptedFiles.map((file, i) =>\n                Object.assign(file, {\n                    preview: URL.createObjectURL(file),\n                    fileId: i,\n                })\n            );\n            setFiles(acceptedFiles);\n        },\n        maxFiles: fileType === 'image' ? 5 : 1,\n        maxSize: fileType === 'document' ? maxDocFileSize : maxOtherFilesSize,\n        disabled: !selectedFileType ? true : false,\n    });\n\n    const removeImageFromFiles = (fileId) => {\n        const tmpFiles = [...files.filter((file) => file.fileId !== fileId)];\n        setFiles(tmpFiles);\n    };\n\n    const handleSaveDocument = async (docValues) => {\n        setIsLoading(true);\n        if (files.length > 0) {\n            let formData = new FormData();\n            let fileSize = 0;\n\n            for (let file of files) {\n                formData.append('files', file);\n                fileSize = fileSize + file.size;\n            }\n            Object.keys(docValues).forEach((key) =>\n                formData.append(key, docValues[key])\n            );\n\n            formData.append('fileType', fileType);\n            formData.append('fileSize', fileSize);\n            formData.append('userId', currentUser._id);\n            formData.append(\n                'uploadedBy',\n                `${currentUser.firstName} ${currentUser.lastName}`\n            );\n\n            await Service.createDocument(formData)\n                .then((res) => {\n                    setIsUploadAlertVisible(true);\n                    setUploadMessage(res.data.message);\n                    setUploadAlertType('success');\n                })\n                .catch((err) => {\n                    setIsUploadAlertVisible(true);\n                    setUploadMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                    setUploadAlertType('error');\n                });\n            reset();\n            setFiles([]);\n            setFileType('');\n            setSelectedFileType('');\n        } else {\n            setIsFileAlertVisible(true);\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <div className='newDocumentPage'>\n            {isUploadAlertVisible && (\n                <Snackbar\n                    open={isUploadAlertVisible}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    autoHideDuration={6000}\n                    onClose={() => setIsUploadAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsUploadAlertVisible(false)}\n                        severity={uploadAlertType}\n                        sx={{ width: '100%' }}\n                    >\n                        {uploadMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Grid container justifyContent='flex-start'>\n                <Breadcrumbs aria-label='breadcrumb'>\n                    <NavLink\n                        to='/'\n                        style={{ textDecoration: 'none', color: 'grey' }}\n                    >\n                        <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                        Početna\n                    </NavLink>\n                    <Stack\n                        direction='row'\n                        spacing={2}\n                        style={{ color: '#393e46' }}\n                    >\n                        <DocumentScanner\n                            sx={{ mr: -1.2, marginTop: 0.3 }}\n                            fontSize='inherit'\n                        />\n                        <Typography>Novi dokument</Typography>\n                    </Stack>\n                </Breadcrumbs>\n            </Grid>\n            <Grid container justifyContent='center'>\n                <FormControl\n                    variant='outlined'\n                    sx={{ m: 1, maxWidth: 400, width: '100%' }}\n                >\n                    <InputLabel id='demo-simple-select-filled-label'>\n                        Novi dokument\n                    </InputLabel>\n                    <Select\n                        labelId='demo-simple-select-filled-label'\n                        id='demo-simple-select-filled'\n                        label='Novi dokument'\n                        value={fileType}\n                        onChange={changeFileTypeHandler}\n                    >\n                        <MenuItem value='document'>Dokument</MenuItem>\n                        <MenuItem value='video'>Video</MenuItem>\n                        <MenuItem value='image'>Slika</MenuItem>\n                        <MenuItem value='audio'>Audio</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid container justifyContent='center'>\n                <div className='uploadBox'>\n                    <div\n                        className={\n                            !selectedFileType ? 'dragArea disabled' : 'dragArea'\n                        }\n                        {...getRootProps()}\n                    >\n                        <AddCircleOutlineOutlined className='icon' />\n                        <h3>Dodaj dokument</h3>\n                        <p>Povuci/izbaci</p>\n                        <p>Podržani fajlovi {selectedFileType}</p>\n                        <p>\n                            maksimalno {fileType === 'image' ? 5 : 1}{' '}\n                            fajl/fajlova po uploadu\n                        </p>\n                        {fileType === 'document' && (\n                            <p>Maksimalna veličina fajla 25MB</p>\n                        )}\n                        <input\n                            type='file'\n                            hidden\n                            {...getInputProps()}\n                            // onChange={(e) =>\n                            // \tsetFiles(e.target.files)\n                            // }\n                        />\n                    </div>\n                    <div>\n                        {files.map((file, index) => {\n                            return (\n                                <List key={index}>\n                                    <ListItem\n                                        secondaryAction={\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={() =>\n                                                    removeImageFromFiles(\n                                                        file.fileId\n                                                    )\n                                                }\n                                            >\n                                                <DeleteOutline />\n                                            </IconButton>\n                                        }\n                                    >\n                                        <ListItemText primary={file.path} />\n                                    </ListItem>\n                                </List>\n                            );\n                        })}\n                    </div>\n                </div>\n            </Grid>\n            {isFileAlertVisible && (\n                <Grid container justifyContent='center' sx={{ marginTop: 2 }}>\n                    <Alert\n                        severity='error'\n                        action={\n                            <HighlightOff\n                                onClick={() => setIsFileAlertVisible(false)}\n                                style={{ cursor: 'pointer' }}\n                            />\n                        }\n                        style={{ marginBottom: 15 }}\n                    >\n                        <AlertTitle>\n                            Fajl prilog je obavezan, molimo uploadujte fajl\n                        </AlertTitle>\n                    </Alert>\n                </Grid>\n            )}\n            <Grid container justifyContent='center'>\n                <div className='uploadDocumentInfo'>\n                    <Grid\n                        container\n                        spacing={2}\n                        columns={16}\n                        sx={{ padding: 1 }}\n                    >\n                        <Grid item xs={16}>\n                            <TextField\n                                id='documentName'\n                                label='Naziv dokumenta'\n                                type='text'\n                                fullWidth\n                                required\n                                disabled={fileType ? false : true}\n                                variant='outlined'\n                                {...register('documentName', {\n                                    required: true,\n                                })}\n                                error={errors.documentName ? true : false}\n                            />\n                            <Typography\n                                variant='inherit'\n                                color='red'\n                                sx={{\n                                    font: '12px Roboto',\n                                }}\n                            >\n                                {errors.documentName?.message}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={16} sm={8}>\n                            <TextField\n                                id='description'\n                                label='Opis'\n                                type='text'\n                                fullWidth\n                                required\n                                disabled={fileType ? false : true}\n                                variant='outlined'\n                                multiline\n                                rows={4}\n                                {...register('description', { required: true })}\n                                error={errors.description ? true : false}\n                            />\n                            <Typography\n                                variant='inherit'\n                                color='red'\n                                sx={{\n                                    font: '12px Roboto',\n                                }}\n                            >\n                                {errors.description?.message}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={16} sm={8}>\n                            <TextField\n                                id='ownership'\n                                label='Vlasništvo'\n                                type='text'\n                                fullWidth\n                                required\n                                disabled={fileType ? false : true}\n                                variant='outlined'\n                                {...register('ownership', { required: true })}\n                                error={errors.ownership ? true : false}\n                            />\n                            <Typography\n                                variant='inherit'\n                                color='red'\n                                sx={{\n                                    font: '12px Roboto',\n                                }}\n                            >\n                                {errors.ownership?.message}\n                            </Typography>\n                            <FormControlLabel\n                                label='Javno dostupan'\n                                disabled={fileType ? false : true}\n                                control={\n                                    <Controller\n                                        name='publicAccess'\n                                        control={control}\n                                        defaultValue={false}\n                                        render={({\n                                            field: { value, ...field },\n                                        }) => (\n                                            <Checkbox\n                                                {...field}\n                                                disabled={\n                                                    fileType ? false : true\n                                                }\n                                                checked={!!value}\n                                                sx={{\n                                                    '& .MuiSvgIcon-root': {\n                                                        fontSize: 28,\n                                                    },\n                                                }}\n                                                onChange={(e, value) =>\n                                                    field.onChange(value)\n                                                }\n                                            />\n                                        )}\n                                    />\n                                }\n                                labelPlacement='start'\n                                sx={{ marginTop: 1.5, marginLeft: 0 }}\n                            />\n                        </Grid>\n                        <Grid item xs={16} sm={8}>\n                            <TextField\n                                id='location'\n                                label='Lokacija'\n                                type='text'\n                                fullWidth\n                                required\n                                disabled={fileType ? false : true}\n                                variant='outlined'\n                                {...register('location', { required: true })}\n                                error={errors.location ? true : false}\n                            />\n                            <Typography\n                                variant='inherit'\n                                color='red'\n                                sx={{\n                                    font: '12px Roboto',\n                                }}\n                            >\n                                {errors.location?.message}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={16} sm={8}>\n                            <FormControlLabel\n                                id='active'\n                                disabled={fileType ? false : true}\n                                label='Status'\n                                control={\n                                    <Controller\n                                        name='active'\n                                        control={control}\n                                        defaultValue={false}\n                                        render={({\n                                            field: { value, ...field },\n                                        }) => (\n                                            <Checkbox\n                                                {...field}\n                                                disabled={\n                                                    fileType ? false : true\n                                                }\n                                                checked={!!value}\n                                                sx={{\n                                                    '& .MuiSvgIcon-root': {\n                                                        fontSize: 28,\n                                                    },\n                                                }}\n                                                onChange={(e, value) =>\n                                                    field.onChange(value)\n                                                }\n                                            />\n                                        )}\n                                    />\n                                }\n                                labelPlacement='start'\n                                sx={{ marginTop: 0.8, marginLeft: 0 }}\n                            />\n                        </Grid>\n                        <Grid item xs={16} sm={8}>\n                            <TextField\n                                id='keyWords'\n                                label='Ključne riječi'\n                                type='text'\n                                fullWidth\n                                required\n                                disabled={fileType ? false : true}\n                                variant='outlined'\n                                {...register('keyWords', { required: true })}\n                                error={errors.keyWords ? true : false}\n                            />\n                            <Typography\n                                variant='inherit'\n                                color='red'\n                                sx={{\n                                    font: '12px Roboto',\n                                }}\n                            >\n                                {errors.keyWords?.message}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid container justifyContent='center' columns={12}>\n                        <Grid item xs={8} sm={6} md={4}>\n                            <Button\n                                variant='contained'\n                                startIcon={<CloudUploadOutlined />}\n                                style={{\n                                    textTransform: 'none',\n                                    fontWeight: 'bold',\n                                    marginTop: 15,\n                                    width: '100%',\n                                }}\n                                disabled={fileType ? false : true}\n                                onClick={handleSubmit(handleSaveDocument)}\n                            >\n                                Spasi\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NewDocument;\n","export default __webpack_public_path__ + \"static/media/privateDoc.5627b096.png\";","import React, { useState } from 'react';\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Typography,\n    Backdrop,\n    Alert,\n    AlertTitle,\n} from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HighlightOff } from '@mui/icons-material';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authActions } from '../../store/auth';\nimport * as Yup from 'yup';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\n\nfunction DocumentDonwloadRequestModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    const dispatch = useDispatch();\n\n    const validationSchema = Yup.object().shape({\n        reason: Yup.string().required('Razlog je obavezan'),\n    });\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            reason: '',\n        },\n        resolver: yupResolver(validationSchema),\n    });\n\n    const handleSendDownloadRequest = async (value) => {\n        setIsLoading(true);\n        const values = {\n            reason: value.reason,\n            user: currentUser._id,\n            document: props?.document._id,\n            type: 'download',\n        };\n\n        await Service.createRequest(values)\n            .then((res) => {\n                setIsLoading(false);\n                props.onClose(true, res.data.message);\n                reset();\n                dispatch(authActions.setCurrentUser(res.data.currentUser));\n\n                // props.onOpenAlert(res.data.status, res.data.message);\n            })\n            .catch((err) => {\n                // console.error(err);\n                setIsAlertVisible(true);\n                setErrorMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena'\n                );\n                setIsLoading(false);\n            });\n    };\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={() => {\n                    props.onClose();\n                    reset();\n                }}\n            >\n                <DialogTitle>Zatražite preuzimanje dokumenta</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Molimo vas da unese razlog zbog kojeg želite preuzeti\n                        ovaj dokument.\n                    </DialogContentText>\n                    {isAlertVisible && (\n                        <Alert\n                            severity='error'\n                            action={\n                                <HighlightOff\n                                    onClick={() => setIsAlertVisible(false)}\n                                    style={{ cursor: 'pointer' }}\n                                />\n                            }\n                            style={{ marginBottom: 15 }}\n                        >\n                            <AlertTitle>Greška</AlertTitle>\n                            {errorMessage}\n                        </Alert>\n                    )}\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        id='reason'\n                        label='Razlog'\n                        type='text'\n                        fullWidth\n                        required\n                        multiline\n                        rows={2}\n                        variant='standard'\n                        {...register('reason')}\n                        error={errors.reason ? true : false}\n                    />\n\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            textAlign: 'left',\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.reason?.message}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => {\n                            props.onClose();\n                            reset();\n                        }}\n                        sx={{\n                            textTransform: 'none',\n                            fontFamily: 'Roboto',\n                            fontWeight: 'bold',\n                        }}\n                    >\n                        Poništi\n                    </Button>\n\n                    <Button\n                        variant='contained'\n                        sx={{\n                            textTransform: 'none',\n                            fontFamily: 'Roboto',\n                            color: '#fff',\n                            fontWeight: 'bold',\n                        }}\n                        onClick={handleSubmit(handleSendDownloadRequest)}\n                    >\n                        Pošalji\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DocumentDonwloadRequestModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Grid,\n    Select,\n    Stack,\n    Typography,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Snackbar,\n    Alert,\n    Backdrop,\n    // useMediaQuery,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { formatDateTime } from '../../utilities/formatDate';\nimport { useSelector } from 'react-redux';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport DocumentDonwloadRequestModal from '../DocumentDownloadRequestModal';\n\nconst useStyles = makeStyles(() => ({\n    documentInfo: {\n        maxWidth: 800,\n        width: '100%',\n        display: 'block',\n        margin: 'auto',\n    },\n    docMoreInfo: {\n        maxWidth: 600,\n        width: '100%',\n    },\n    docLabel: {\n        color: '#393E46',\n        fontWeight: 'bold',\n    },\n    documentInfoGrid: {\n        padding: 1,\n        marginLeft: 20,\n        '@media (max-width: 768px)': {\n            marginLeft: 0,\n        },\n    },\n    reqAccessBtn: {\n        marginTop: 50,\n    },\n}));\n\nexport default function ViewDocumentDetails(props) {\n    const [downloadImageIndex, setDownloadImageIndex] = useState(-1);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [alertType, setAlertType] = useState('success');\n    const [isDownlaodRequestModalVisible, setIsDownloadRequestModalVisible] =\n        useState(false);\n\n    const documentProp = props?.document;\n    const isDownloadAvailable = props?.isDownloadAvailable;\n    const isDownloadRequestSent = props?.isDownloadRequestSent;\n    const isDocPrivate = props?.isDocPrivate;\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    const classes = useStyles();\n\n    // const isLaptop = useMediaQuery('(min-width:1281px)');\n\n    const getFileType = (fileType) => {\n        switch (fileType) {\n            case 'image':\n                return 'Slika';\n            case 'video':\n                return 'Video';\n            case 'document':\n                return 'Dokument';\n            case 'audio':\n                return 'Audio';\n            default:\n                break;\n        }\n    };\n\n    const getFileSize = (fileSize) => {\n        if (fileSize?.length > 6) {\n            return `${Number(fileSize / 1000000).toFixed(2)} MB`;\n        }\n        if (fileSize?.length > 9) {\n            return `${Number(fileSize / 1000000000).toFixed(2)} GB`;\n        } else {\n            return `${Number(fileSize / 1000).toFixed(2)} kB`;\n        }\n    };\n\n    const handleDownloadChange = (event) => {\n        setDownloadImageIndex(event.target.value);\n    };\n\n    const downloadFilesHandler = async () => {\n        setIsLoading(true);\n        await Service.downloadDocument(\n            { docId: documentProp?._id },\n            {\n                responseType: 'blob',\n            }\n        )\n            .then((res) => {\n                const downloadDoc = res.data.document;\n                setIsAlertVisible(true);\n                setAlertType(res.data.status);\n                setAlertMessage(res.data.message);\n                const link = document.createElement('a');\n                if (downloadDoc?.files.length > 1) {\n                    link.href = downloadDoc?.files[downloadImageIndex];\n                } else {\n                    link.href = downloadDoc?.files[0];\n                }\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                // if (downloadDoc?.files.length > 1) {\n                //     // window.open(downloadDoc?.files[downloadImageIndex]);\n                // } else {\n                //     const link = document.createElement('a');\n                //     link.href = downloadDoc?.files[0];\n                //     document.body.appendChild(link);\n                //     link.click();\n                //     document.body.removeChild(link);\n\n                //     // window.open(downloadDoc?.files[0]);\n                // }\n            })\n            .catch((err) => {\n                setAlertMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena'\n                );\n                setIsAlertVisible(true);\n                setAlertType(err.response ? err.response.data.status : 'error');\n            });\n        // console.clear();\n        setIsLoading(false);\n    };\n\n    const handleOpenDownloadRequestModal = () => {\n        setIsDownloadRequestModalVisible(true);\n    };\n\n    const handleCloseDownloadRequestModal = (isRequestSent, data) => {\n        if (isRequestSent) {\n            props.onChangeDownloadStatus(isRequestSent, data);\n            setAlertMessage('Zahtjev za preuzimanje dokumenta je poslan');\n            setIsAlertVisible(true);\n            setAlertType('success');\n        }\n        setIsDownloadRequestModalVisible(false);\n    };\n\n    return (\n        <div className={classes.documentInfo}>\n            {isLoading && (\n                <Backdrop\n                    sx={{\n                        color: '#fff',\n                        zIndex: (theme) => theme.zIndex.drawer + 1,\n                        backgroundColor: '#fff',\n                    }}\n                    open={isLoading}\n                >\n                    <Loader />\n                </Backdrop>\n            )}\n            {isAlertVisible && (\n                <Snackbar\n                    open={isAlertVisible}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    autoHideDuration={6000}\n                    onClose={() => setIsAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsAlertVisible(false)}\n                        severity={alertType}\n                        sx={{ width: '100%', font: '14px Roboto' }}\n                    >\n                        {alertMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            <Grid container justifyContent='center'>\n                <Grid\n                    container\n                    spacing={2}\n                    columns={16}\n                    className={classes.documentInfoGrid}\n                >\n                    {isDownloadAvailable && !isDocPrivate && (\n                        <div>\n                            <Grid item xs={16}>\n                                {documentProp?.files.length > 1 ? (\n                                    <Stack direction='row' spacing={2}>\n                                        <FormControl\n                                            size='small'\n                                            sx={{ minWidth: 130 }}\n                                        >\n                                            <InputLabel>\n                                                Izaberi sliku\n                                            </InputLabel>\n                                            <Select\n                                                label='Izaberi sliku'\n                                                onChange={handleDownloadChange}\n                                                defaultValue=''\n                                            >\n                                                {documentProp?.files.map(\n                                                    (item, index) => {\n                                                        return (\n                                                            <MenuItem\n                                                                name={item}\n                                                                value={index}\n                                                                key={index}\n                                                            >\n                                                                Slika {++index}\n                                                            </MenuItem>\n                                                        );\n                                                    }\n                                                )}\n                                            </Select>\n                                        </FormControl>\n                                        <Button\n                                            variant='contained'\n                                            style={{\n                                                textTransform: 'none',\n                                                fontWeight: 'bold',\n                                                height: 40,\n                                            }}\n                                            onClick={downloadFilesHandler}\n                                            disabled={downloadImageIndex === -1}\n                                        >\n                                            Preuzmi\n                                        </Button>\n                                    </Stack>\n                                ) : (\n                                    <Button\n                                        variant='contained'\n                                        style={{\n                                            textTransform: 'none',\n                                            fontWeight: 'bold',\n                                        }}\n                                        onClick={downloadFilesHandler}\n                                    >\n                                        Preuzmi\n                                    </Button>\n                                )}\n                            </Grid>\n                        </div>\n                    )}\n\n                    {!isDownloadAvailable && !isDocPrivate && (\n                        <Grid container justifyContent='center'>\n                            {isDownloadRequestSent ? (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                    }}\n                                    disabled\n                                >\n                                    Zahtjev za preuzimanje dokumenta je poslan\n                                </Button>\n                            ) : (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                    }}\n                                    onClick={handleOpenDownloadRequestModal}\n                                >\n                                    Zatražite preuzimanje dokumenta\n                                </Button>\n                            )}\n                        </Grid>\n                    )}\n\n                    <Grid item xs={16}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Opis dokumenta:{' '}\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                sx={{ maxHeight: 200, overflow: 'auto' }}\n                            >\n                                {documentProp?.description}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Tip dokumenta:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {getFileType(documentProp?.fileType)}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Veličina:{' '}\n                            </Typography>\n\n                            <Typography variant='subtitle1'>\n                                {getFileSize(documentProp?.documentSize)}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Lokacija:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {documentProp?.location}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Vrsta vrijednosti:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {documentProp?.publicAccess\n                                    ? 'Javno dostupan'\n                                    : 'Nije javno dostupan'}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Ključne riječi:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {documentProp?.keyWords}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Vlasništvo:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {documentProp?.ownership}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Zadnja izmjena:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {formatDateTime(documentProp?.lastEdit)}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={16} sm={8}>\n                        <Stack direction='row' spacing={2}>\n                            <Typography\n                                variant='subtitle1'\n                                className={classes.docLabel}\n                            >\n                                Status:{' '}\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                {documentProp?.active === true\n                                    ? 'Aktivan'\n                                    : 'Neaktivan'}\n                            </Typography>\n                        </Stack>\n                    </Grid>\n                    {(currentUser.role === 'admin' ||\n                        currentUser.role === 'editor') && (\n                        <Grid item xs={16} sm={8}>\n                            <Stack direction='row' spacing={2}>\n                                <Typography\n                                    variant='subtitle1'\n                                    className={classes.docLabel}\n                                >\n                                    Uploadovao/la:{' '}\n                                </Typography>\n                                <Typography variant='subtitle1'>\n                                    {documentProp?.uploadedBy}\n                                </Typography>\n                            </Stack>\n                        </Grid>\n                    )}\n                    {(currentUser.role === 'admin' ||\n                        currentUser.role === 'editor') &&\n                        documentProp?.editedBy && (\n                            <Grid item xs={16} sm={8}>\n                                <Stack direction='row' spacing={2}>\n                                    <Typography\n                                        variant='subtitle1'\n                                        className={classes.docLabel}\n                                    >\n                                        Izmjenio/la:{' '}\n                                    </Typography>\n                                    <Typography variant='subtitle1'>\n                                        {documentProp?.editedBy}\n                                    </Typography>\n                                </Stack>\n                            </Grid>\n                        )}\n                </Grid>\n            </Grid>\n\n            {isDownlaodRequestModalVisible && (\n                <DocumentDonwloadRequestModal\n                    document={documentProp}\n                    visible={isDownlaodRequestModalVisible}\n                    onClose={handleCloseDownloadRequestModal}\n                />\n            )}\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Typography,\n    Backdrop,\n    Alert,\n    AlertTitle,\n} from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HighlightOff } from '@mui/icons-material';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authActions } from '../../store/auth';\nimport * as Yup from 'yup';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\n\nfunction DocumentAccessRequestModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    const dispatch = useDispatch();\n\n    const validationSchema = Yup.object().shape({\n        reason: Yup.string().required('Razlog je obavezan'),\n    });\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            reason: '',\n        },\n        resolver: yupResolver(validationSchema),\n    });\n\n    const handleRequestAccess = async (value) => {\n        setIsLoading(true);\n        const values = {\n            reason: value.reason,\n            user: currentUser._id,\n            document: props?.document._id,\n            type: 'access',\n        };\n\n        await Service.createRequest(values)\n            .then((res) => {\n                setIsLoading(false);\n                props.onClose(true, res.data.message);\n                reset();\n                dispatch(authActions.setCurrentUser(res.data.currentUser));\n\n                // props.onOpenAlert(res.data.status, res.data.message);\n            })\n            .catch((err) => {\n                // console.error(err);\n                setIsAlertVisible(true);\n                setErrorMessage(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena'\n                );\n                setIsLoading(false);\n            });\n    };\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={() => {\n                    props.onClose();\n                    reset();\n                }}\n            >\n                <DialogTitle>Zatražite pregled dokumenta</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Molimo vas da unese razlog zbog kojeg želite imati\n                        pristup ovom dokumentu.\n                    </DialogContentText>\n                    {isAlertVisible && (\n                        <Alert\n                            severity='error'\n                            action={\n                                <HighlightOff\n                                    onClick={() => setIsAlertVisible(false)}\n                                    style={{ cursor: 'pointer' }}\n                                />\n                            }\n                            style={{ marginBottom: 15 }}\n                        >\n                            <AlertTitle>Greška</AlertTitle>\n                            {errorMessage}\n                        </Alert>\n                    )}\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        id='reason'\n                        label='Razlog'\n                        type='text'\n                        fullWidth\n                        required\n                        multiline\n                        rows={2}\n                        variant='standard'\n                        {...register('reason')}\n                        error={errors.reason ? true : false}\n                    />\n\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            textAlign: 'left',\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.reason?.message}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => {\n                            props.onClose();\n                            reset();\n                        }}\n                        sx={{\n                            textTransform: 'none',\n                            fontFamily: 'Roboto',\n                            fontWeight: 'bold',\n                        }}\n                    >\n                        Poništi\n                    </Button>\n\n                    <Button\n                        variant='contained'\n                        sx={{\n                            textTransform: 'none',\n                            fontFamily: 'Roboto',\n                            color: '#fff',\n                            fontWeight: 'bold',\n                        }}\n                        onClick={handleSubmit(handleRequestAccess)}\n                    >\n                        Pošalji\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DocumentAccessRequestModal;\n","import React, { useEffect, useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Zoom, Navigation, Pagination } from 'swiper';\nimport ImgsViewer from 'react-images-viewer';\nimport AudioPlayer from 'react-h5-audio-player';\nimport './style.css';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport 'react-h5-audio-player/lib/styles.css';\nSwiperCore.use([Zoom, Navigation, Pagination]);\n\nfunction ShowDocumentFile(props) {\n    const [isImageViewerOpen, setIsImageViewerOpen] = useState(false);\n    const [currentImage, setCurrentImage] = useState(0);\n    const [imageFiles, setImageFiles] = useState([]);\n\n    const document = props?.document;\n    useEffect(() => {\n        if (document?.fileType === 'image') {\n            let tmpImageFiles = [];\n\n            for (let file of document?.files) {\n                tmpImageFiles.push({\n                    src: file,\n                    width: 200,\n                    height: 200,\n                });\n            }\n            setImageFiles(tmpImageFiles);\n        }\n    }, [document]);\n\n    const clickNextViewerImage = () => {\n        let tmpImg = currentImage;\n        tmpImg++;\n        setCurrentImage(tmpImg);\n    };\n\n    const clickPreviousViewerImage = () => {\n        let tmpImg = currentImage;\n        tmpImg--;\n        setCurrentImage(tmpImg);\n    };\n\n    const getFilesData = (fileType) => {\n        switch (fileType) {\n            case 'image':\n                return (\n                    <div\n                        className='imageFile'\n                        onContextMenu={(e) => e.preventDefault()}\n                    >\n                        {document?.files.length > 1 ? (\n                            <div>\n                                <Swiper\n                                    className='swiper'\n                                    style={{\n                                        '--swiper-navigation-color': '#000',\n                                        '--swiper-pagination-color': '#000',\n                                    }}\n                                    // zoom={true}\n                                    navigation={true}\n                                    pagination={{\n                                        clickable: true,\n                                    }}\n                                >\n                                    {document?.files.map((file, index) => (\n                                        <SwiperSlide\n                                            className='swiperSlide'\n                                            key={index}\n                                            onClick={() => {\n                                                setIsImageViewerOpen(true);\n                                                setCurrentImage(index);\n                                            }}\n                                        >\n                                            <div className='swiper-zoom-container'>\n                                                <img\n                                                    // key={index}\n                                                    src={file}\n                                                    alt='Dokument slika'\n                                                />\n                                            </div>\n                                        </SwiperSlide>\n                                    ))}\n                                </Swiper>\n                                <ImgsViewer\n                                    imgs={imageFiles}\n                                    isOpen={isImageViewerOpen}\n                                    onClose={() => setIsImageViewerOpen(false)}\n                                    width={1500}\n                                    currImg={currentImage}\n                                    onClickPrev={clickPreviousViewerImage}\n                                    onClickNext={clickNextViewerImage}\n                                    spinnerDisabled\n                                    backdropCloseable\n                                />\n                            </div>\n                        ) : (\n                            <div className='imageFile'>\n                                <img\n                                    src={document?.files[0]}\n                                    // src={`data:image/jpeg;base64, ${document?.files[0]}`}\n                                    alt='Dokument slika'\n                                    onClick={() => setIsImageViewerOpen(true)}\n                                    // onContextMenu={return false}\n                                    // style={{\n                                    //     filter: isDocPrivate && 'blur(1.5rem)',\n                                    //     // visibility: 'hidden',\n                                    // }}\n                                />\n                                <ImgsViewer\n                                    imgs={[{ src: document?.files[0] }]}\n                                    isOpen={isImageViewerOpen}\n                                    onClose={() => setIsImageViewerOpen(false)}\n                                    width={1500}\n                                    spinnerDisabled\n                                    backdropCloseable\n                                    onClickImg={(e) => e.preventDefault()}\n                                />\n                            </div>\n                        )}\n                    </div>\n                );\n            case 'video':\n                return (\n                    <div className='videoFile'>\n                        <video\n                            src={document?.files[0]}\n                            // src={`data:video/mp4;base64, ${document?.files[0]}`}\n                            controls\n                            controlsList='nodownload'\n                        />\n                    </div>\n                );\n            case 'audio':\n                return (\n                    <AudioPlayer\n                        src={document?.files[0]}\n                        customAdditionalControls={[]}\n                        className='audioFile'\n                        // controls\n                        // controlsList='nodownload'\n                    />\n                );\n            case 'document':\n                return (\n                    <iframe\n                        sandbox='allow-scripts allow-same-origin'\n                        title={document?.documentName}\n                        src={`https://docs.google.com/gview?url=${encodeURIComponent(\n                            document?.files[0]\n                        )}&embedded=true`}\n                        frameBorder='0'\n                        width='100%'\n                        className='docFile'\n                        allowFullScreen\n                        onContextMenu={(e) => e.preventDefault()}\n                    />\n                );\n            default:\n                break;\n        }\n    };\n    return (\n        <div className='documentFile'>{getFilesData(document?.fileType)}</div>\n    );\n}\n\nexport default ShowDocumentFile;\n","import React, { useState } from 'react';\nimport MaterialTable from '@material-table/core';\nimport {\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    useMediaQuery,\n} from '@mui/material';\nimport { ExpandMore } from '@mui/icons-material';\nimport { formatDateTime } from '../../utilities/formatDate';\nimport './style.css';\n\nexport default function DownloadUsersTable({ users }) {\n    const [isExpandedAccordion, setIsExpandedAccordion] = useState(false);\n\n    const isMobile = useMediaQuery('(max-width:540px)');\n\n    const usersTableData =\n        users &&\n        users.map((user) => {\n            return {\n                id: user._id,\n                username: user.user,\n                time: formatDateTime(user.time),\n            };\n        });\n\n    const usersColumns = [\n        {\n            title: 'Ime i prezime',\n            field: 'username',\n            sorting: true,\n        },\n        { title: 'Vrijeme preuzimanja', field: 'time' },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: true,\n        pageSizeOptions: [5, 10, 20, 25, 50, 100],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: (rowData) => ({\n            color: rowData.removed && 'grey',\n            font: '15px Roboto',\n        }),\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 10,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage:\n                'Lista korisnika koji su preuzeli dokument je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    const handleChangeAccordion = (panel) => (event, isExpanded) => {\n        setIsExpandedAccordion(isExpanded ? panel : false);\n    };\n\n    return (\n        <div className='downloadedBy'>\n            <Accordion\n                expanded={isExpandedAccordion === 'panel1'}\n                onChange={handleChangeAccordion('panel1')}\n                sx={{ m: 1, borderRadius: 1 }}\n            >\n                <AccordionSummary expandIcon={<ExpandMore />}>\n                    <Typography>\n                        Lista korisnika koji su preuzeli dokument\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails sx={{ padding: 1 }}>\n                    <MaterialTable\n                        columns={usersColumns}\n                        data={usersTableData}\n                        title=''\n                        options={tableOptions}\n                        localization={tableLocalization}\n                    />\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams, NavLink, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n    Grid,\n    Breadcrumbs,\n    Stack,\n    Typography,\n    Paper,\n    Snackbar,\n    Alert,\n    Button,\n} from '@mui/material';\nimport { Home, DocumentScanner } from '@mui/icons-material';\nimport Loader from '../../components/Loader';\nimport Service from '../../api/service';\nimport { makeStyles } from '@mui/styles';\nimport privateDocImage from '../../assets/privateDoc.png';\nimport './style.css';\nimport ViewDocumentDetails from '../../components/ViewDocumentDetails';\nimport DocumentAccessRequestModal from '../../components/DocumentAccessRequestModal';\nimport ShowDocumentFile from '../../components/ShowDocumentFile';\nimport DownloadUsersTable from '../../components/DownloadUsersTable/DownloadUsersTable';\n\nconst useStyles = makeStyles(() => ({\n    reqAccessBtn: {\n        marginTop: 30,\n        marginBottom: 30,\n    },\n}));\n\nfunction ViewDocumentPage() {\n    const { id } = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const [document, setDocument] = useState(null);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [alertType, setAlertType] = useState('error');\n    const [isDocPrivate, setIsDocPrivate] = useState(true);\n    const [isDocAccessRequestModalVisible, setIsDocAccessRequestModalVisible] =\n        useState(false);\n    const [isRequestSent, setIsRequestSent] = useState(false);\n    const [isDownloadAvailable, setIsDownloadAvailable] = useState(false);\n    const [isDownloadRequestSent, setIsDownloadRequestSent] = useState(false);\n    const currentUser = useSelector((state) => state.auth.currentUser);\n\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchSelectedDocument = async () => {\n            await Service.getDocument({ id })\n                .then((res) => {\n                    setDocument(res.data.document);\n                    if (\n                        currentUser.role === 'reader' &&\n                        !res.data.document.active\n                    ) {\n                        navigate('/');\n                    }\n\n                    if (res.data.document.publicAccess === true) {\n                        setIsDocPrivate(false);\n                    }\n                    if (\n                        currentUser.role === 'editor' ||\n                        currentUser.role === 'admin' ||\n                        currentUser.approvedDocuments.includes(id)\n                    ) {\n                        setIsDocPrivate(false);\n                    }\n\n                    if (currentUser.pendingDocuments.includes(id)) {\n                        setIsRequestSent(true);\n                    }\n\n                    if (\n                        currentUser.role === 'editor' ||\n                        currentUser.role === 'admin' ||\n                        currentUser.approvedDownload.includes(id)\n                    ) {\n                        setIsDownloadAvailable(true);\n                    }\n\n                    if (currentUser.pendingDownload.includes(id)) {\n                        setIsDownloadRequestSent(true);\n                    }\n\n                    setIsLoading(false);\n                })\n                .catch((err) => {\n                    setAlertMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                    setIsAlertVisible(true);\n                    setAlertType('error');\n                    navigate('/dokumenti');\n                    setIsLoading(false);\n                });\n        };\n        fetchSelectedDocument();\n    }, [id, navigate, currentUser]);\n\n    const handleOpenDocAccessRequestModal = () => {\n        setIsDocAccessRequestModalVisible(true);\n    };\n\n    const handleCloseDocAccessRequestModal = (isRequestSent, sentMessage) => {\n        if (isRequestSent === true) {\n            setIsRequestSent(true);\n            setAlertMessage(sentMessage);\n            setIsAlertVisible(true);\n            setAlertType('success');\n        }\n        setIsDocAccessRequestModalVisible(false);\n    };\n\n    const handleChangeDownloadRequestStatus = () => {\n        setIsDownloadRequestSent(true);\n    };\n\n    return (\n        <div>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div\n                    className='viewDocumentPage'\n                    onContextMenu={(e) => e.preventDefault()}\n                >\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={6000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity={alertType}\n                                sx={{ width: '100%', font: '14px Roboto' }}\n                            >\n                                {alertMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <Grid container justifyContent='flex-start'>\n                        <Breadcrumbs aria-label='breadcrumb'>\n                            <NavLink\n                                to='/'\n                                style={{\n                                    textDecoration: 'none',\n                                    color: 'grey',\n                                }}\n                            >\n                                <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                                Početna\n                            </NavLink>\n                            <Stack\n                                direction='row'\n                                spacing={2}\n                                style={{ color: '#393e46' }}\n                            >\n                                <DocumentScanner\n                                    sx={{ mr: -1.2, marginTop: 0.3 }}\n                                    fontSize='inherit'\n                                />\n                                <Typography>Pregled</Typography>\n                            </Stack>\n                        </Breadcrumbs>\n                    </Grid>\n                    <Grid container justifyContent='center'>\n                        <Paper\n                            style={{\n                                padding: 10,\n                                marginTop: 20,\n                                backgroundColor: isDocPrivate\n                                    ? '#393e46'\n                                    : '#fff',\n                            }}\n                        >\n                            <Stack direction='row' spacing={2}>\n                                <Typography\n                                    variant='h6'\n                                    style={{\n                                        color: isDocPrivate\n                                            ? '#fff'\n                                            : '#393e46',\n                                    }}\n                                >\n                                    Naziv dokumenta:{' '}\n                                </Typography>\n                                <Typography\n                                    variant='h6'\n                                    style={{\n                                        color: isDocPrivate\n                                            ? '#fff'\n                                            : '#393e46',\n                                    }}\n                                >\n                                    {document?.documentName}\n                                </Typography>\n                            </Stack>\n                        </Paper>\n                    </Grid>\n                    <Grid container justifyContent='center'>\n                        {isDocPrivate ? (\n                            <div className='documentFile'>\n                                <img\n                                    src={privateDocImage}\n                                    className='privateDocImage'\n                                    alt='locked Document'\n                                />\n                            </div>\n                        ) : (\n                            <ShowDocumentFile document={document} />\n                        )}\n                    </Grid>\n                    {isDocPrivate && (\n                        <Grid\n                            container\n                            justifyContent='center'\n                            className={classes.reqAccessBtn}\n                        >\n                            {isRequestSent ? (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                    }}\n                                    disabled\n                                >\n                                    Zahtjev za pregled dokumenta je poslan\n                                </Button>\n                            ) : (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                    }}\n                                    onClick={handleOpenDocAccessRequestModal}\n                                >\n                                    Zatražite pregled dokumenta\n                                </Button>\n                            )}\n                        </Grid>\n                    )}\n\n                    <ViewDocumentDetails\n                        document={document}\n                        isDownloadAvailable={isDownloadAvailable}\n                        isDownloadRequestSent={isDownloadRequestSent}\n                        isDocPrivate={isDocPrivate}\n                        onChangeDownloadStatus={\n                            handleChangeDownloadRequestStatus\n                        }\n                    />\n                    {(currentUser?.role === 'editor' ||\n                        currentUser?.role === 'admin') && (\n                        <DownloadUsersTable users={document.downloadedBy} />\n                    )}\n\n                    {isDocAccessRequestModalVisible && (\n                        <DocumentAccessRequestModal\n                            document={document}\n                            visible={isDocAccessRequestModalVisible}\n                            onClose={handleCloseDocAccessRequestModal}\n                        />\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ViewDocumentPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Grid, Breadcrumbs, Typography, Stack } from '@mui/material';\nimport { Home, DocumentScanner } from '@mui/icons-material';\nimport DocumentsTable from '../../components/DocumentsTable';\nimport './style.css';\n\nfunction DocumentsPage() {\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    return (\n        <div className='documentsPage'>\n            <Grid container justifyContent='flex-start'>\n                <Breadcrumbs aria-label='breadcrumb'>\n                    <NavLink\n                        to='/'\n                        style={{\n                            textDecoration: 'none',\n                            color: 'grey',\n                        }}\n                    >\n                        <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                        Početna\n                    </NavLink>\n                    <Stack\n                        direction='row'\n                        spacing={2}\n                        style={{ color: '#393e46' }}\n                    >\n                        <DocumentScanner\n                            sx={{ mr: -1.2, marginTop: 0.3 }}\n                            fontSize='inherit'\n                        />\n                        <Typography>Dokumenti</Typography>\n                    </Stack>\n                </Breadcrumbs>\n            </Grid>\n            {currentUser.role === 'admin' && (\n                <DocumentsTable style={{ marginTop: 50 }} />\n            )}\n        </div>\n    );\n}\n\nexport default DocumentsPage;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport MaterialTable from '@material-table/core';\nimport {\n    Snackbar,\n    Alert,\n    useMediaQuery,\n    Tooltip,\n    Box,\n    Grid,\n    Breadcrumbs,\n    Stack,\n    Typography,\n} from '@mui/material';\nimport { Search, VisibilityOutlined, Home } from '@mui/icons-material';\nimport Loader from '../../components/Loader';\nimport './style.css';\nimport { useSelector } from 'react-redux';\nimport Service from '../../api/service';\nimport { capitalizeWord } from '../../utilities/capitalizeWord';\n\nfunction SearchPage() {\n    const [documents, setDocuments] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const isMobile = useMediaQuery('(max-width:540px)');\n    const navigate = useNavigate();\n\n    const searchQuery = useSelector((state) => state.docs.searchQuery);\n\n    useEffect(() => {\n        setIsLoading(true);\n        const fetchSearchedDocs = async () => {\n            await Service.searchDocument({ query: searchQuery })\n                .then((res) => {\n                    setDocuments(res.data.documents);\n                    setIsLoading(false);\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                });\n        };\n\n        fetchSearchedDocs();\n    }, [searchQuery]);\n\n    const documentTypeHandler = (type) => {\n        switch (type) {\n            case 'document':\n                return 'Dokument';\n            case 'audio':\n                return 'Audio';\n            case 'video':\n                return 'Video';\n            case 'image':\n                return 'Slika';\n            default:\n                break;\n        }\n    };\n\n    const documentsTableData =\n        documents &&\n        documents.map((document) => {\n            return {\n                id: document._id,\n                documentName: capitalizeWord(document.documentName),\n                documentType: documentTypeHandler(document.fileType),\n                description: document.description && (\n                    <Tooltip title={document.description} placement='top-start'>\n                        <Box>{document.description}</Box>\n                    </Tooltip>\n                ),\n                ownership: capitalizeWord(document.ownership),\n                location: capitalizeWord(document.location),\n            };\n        });\n\n    const documentsColumns = [\n        {\n            title: 'Naziv dokumenta',\n            field: 'documentName',\n            sorting: false,\n            width: '20%',\n        },\n        {\n            title: 'Tip dokumenta',\n            field: 'documentType',\n            sorting: false,\n            width: '10%',\n        },\n        {\n            title: 'Opis',\n            field: 'description',\n            sorting: false,\n            width: '35%',\n            align: 'left',\n            searchable: false,\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: 200,\n            },\n        },\n        { title: 'Vlasništvo', field: 'ownership', sorting: false },\n        {\n            title: 'Lokacija',\n            field: 'location',\n            sorting: false,\n        },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: true,\n        pageSizeOptions: [5, 10, 20],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: {\n            font: '15px Roboto',\n        },\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 15,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage: 'Lista pretraživanja je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    return (\n        <div className='searchPage'>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={8000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity='error'\n                                sx={{ width: '100%' }}\n                            >\n                                {errorMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <Grid container justifyContent='flex-start'>\n                        <Breadcrumbs aria-label='breadcrumb'>\n                            <NavLink\n                                to='/'\n                                style={{\n                                    textDecoration: 'none',\n                                    color: 'grey',\n                                }}\n                            >\n                                <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                                Početna\n                            </NavLink>\n                            <Stack\n                                direction='row'\n                                spacing={2}\n                                style={{ color: '#393e46' }}\n                            >\n                                <Search\n                                    sx={{ mr: -1.2, marginTop: 0.3 }}\n                                    fontSize='inherit'\n                                />\n                                <Typography>Pretraga</Typography>\n                            </Stack>\n                        </Breadcrumbs>\n                    </Grid>\n                    <MaterialTable\n                        columns={documentsColumns}\n                        data={documentsTableData}\n                        actions={[\n                            {\n                                icon: () => <VisibilityOutlined />,\n                                tooltip: 'Pogledati',\n                                onClick: (e, data) =>\n                                    navigate(`/pregled/${data.id}`),\n                            },\n                        ]}\n                        title='Lista dokumenata'\n                        options={tableOptions}\n                        localization={tableLocalization}\n                        style={{ marginTop: 10 }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Grid,\n    Breadcrumbs,\n    Typography,\n    Stack,\n    Chip,\n    Tooltip,\n    useMediaQuery,\n    Box,\n} from '@mui/material';\nimport MaterialTable from '@material-table/core';\nimport { DoneAll, Home, Notifications } from '@mui/icons-material';\nimport { requestsActions } from '../../store/requests';\nimport './style.css';\nimport { formatDateTime } from '../../utilities/formatDate';\nimport { capitalizeWord } from '../../utilities/capitalizeWord';\n\nfunction RequestsPage() {\n    const allRequests = useSelector((state) => state.requests.allRequests);\n    const isMobile = useMediaQuery('(max-width:540px)');\n    const dispatch = useDispatch();\n\n    const documentTypeHandler = (type) => {\n        switch (type) {\n            case 'document':\n                return 'Dokument';\n            case 'audio':\n                return 'Audio';\n            case 'video':\n                return 'Video';\n            case 'image':\n                return 'Slika';\n            default:\n                break;\n        }\n    };\n\n    const requestsTableData =\n        allRequests &&\n        allRequests.map((request) => {\n            return {\n                id: request._id,\n                userId: request.user?._id,\n                docId: request.document?._id,\n                documentName: capitalizeWord(request.document?.documentName),\n                documentType: documentTypeHandler(request.document?.fileType),\n                reason: request.reason && (\n                    <Tooltip title={request.reason} placement='top-start'>\n                        <Box>{request.reason}</Box>\n                    </Tooltip>\n                ),\n                description: request.reason,\n                requestedBy: capitalizeWord(\n                    `${request.user?.firstName} ${request.user?.lastName}`\n                ),\n                type: request.type,\n                typeTable:\n                    request.type === 'access' ? (\n                        <Chip\n                            label='Pregled dokumenta'\n                            style={{\n                                color: '#7A0C2E',\n                                backgroundColor: '#FFE7D9',\n                                fontWeight: 'bold',\n                            }}\n                            size='small'\n                        />\n                    ) : (\n                        <Chip\n                            label='Preuzimanje dokumenta'\n                            style={{\n                                color: '#04297A',\n                                backgroundColor: '#D0F2FF',\n                                fontWeight: 'bold',\n                            }}\n                            size='small'\n                        />\n                    ),\n                isApproved: !request.isApproved && (\n                    <Chip\n                        label='Na čekanju'\n                        style={{\n                            color: '#B78103',\n                            backgroundColor: '#FFF7CD',\n                            fontWeight: 'bold',\n                        }}\n                        size='small'\n                    />\n                ),\n                createdAt: request.createdAt,\n                createdAtTable: formatDateTime(request.createdAt),\n            };\n        });\n\n    const requestsColumns = [\n        {\n            title: 'Naziv dokumenta',\n            field: 'documentName',\n            sorting: false,\n            width: '20%',\n        },\n        {\n            title: 'Tip dokumenta',\n            field: 'documentType',\n            sorting: false,\n            width: '10%',\n        },\n\n        {\n            title: 'Korisnik',\n            field: 'requestedBy',\n            sorting: false,\n            width: '10%',\n        },\n        {\n            title: 'Datum',\n            field: 'createdAtTable',\n            sorting: false,\n            width: '15%',\n        },\n        {\n            title: 'Opis',\n            field: 'reason',\n            sorting: false,\n            width: '35%',\n            align: 'left',\n            searchable: false,\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: 200,\n            },\n        },\n        {\n            title: 'Tip zahtjeva',\n            field: 'typeTable',\n            sorting: false,\n            width: '5%',\n            align: 'left',\n            searchable: false,\n        },\n        {\n            title: 'Odobren',\n            field: 'isApproved',\n            sorting: false,\n        },\n    ];\n\n    const tableOptions = {\n        actionsColumnIndex: -1,\n        columnsButton: true,\n        grouping: false,\n        sorting: true,\n        paging: true,\n        pageSizeOptions: [5, 10, 20, 25, 50, 100],\n        pageSize: 10,\n        emptyRowsWhenPaging: false,\n        rowStyle: {\n            font: '15px Roboto',\n        },\n        headerStyle: {\n            background: '#ddd',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingRight: 10,\n        },\n    };\n\n    const tableLocalization = {\n        pagination: {\n            labelDisplayedRows: '',\n            previousTooltip: 'Prethodna',\n            nextTooltip: 'Sljedeća',\n            lastTooltip: 'Posljednja',\n            firstTooltip: 'Prva',\n            labelRowsPerPage: !isMobile && 'Redova po stranici',\n            labelRowsSelect: '',\n        },\n        toolbar: {\n            nRowsSelected: '{0} row(s) selected',\n            searchPlaceholder: 'Pretraga...',\n            showColumnsTitle: 'Prikaži kolone',\n            addRemoveColumns: 'Dadaj ili ukloni kolonu',\n        },\n        header: {\n            actions: 'Opcije',\n        },\n        body: {\n            emptyDataSourceMessage: 'Lista zahtjeva je prazna',\n            filterRow: {\n                filterTooltip: 'Filter',\n            },\n        },\n    };\n\n    const handleOpenApproveRequestModal = (data) => {\n        dispatch(requestsActions.setRequestModalVisible());\n        dispatch(requestsActions.setSelectedRequest(data));\n    };\n\n    return (\n        <div className='requestsPage'>\n            <Grid container justifyContent='flex-start' sx={{ mb: 1 }}>\n                <Breadcrumbs aria-label='breadcrumb'>\n                    <NavLink\n                        to='/'\n                        style={{ textDecoration: 'none', color: 'grey' }}\n                    >\n                        <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                        Početna\n                    </NavLink>\n                    <Stack\n                        direction='row'\n                        spacing={2}\n                        style={{ color: '#393e46' }}\n                    >\n                        <Notifications\n                            sx={{ mr: -1.2, marginTop: 0.3 }}\n                            fontSize='inherit'\n                        />\n                        <Typography>Zahtjevi</Typography>\n                    </Stack>\n                </Breadcrumbs>\n            </Grid>\n            <MaterialTable\n                columns={requestsColumns}\n                data={requestsTableData}\n                actions={[\n                    {\n                        icon: () => <DoneAll color='success' />,\n                        tooltip: 'Pogledati',\n                        onClick: (e, data) =>\n                            handleOpenApproveRequestModal(data),\n                    },\n                ]}\n                title='Lista zahjeva'\n                options={tableOptions}\n                localization={tableLocalization}\n            />\n        </div>\n    );\n}\n\nexport default RequestsPage;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n    Typography,\n} from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { AccessTime } from '@mui/icons-material';\nimport { requestsActions } from '../../store/requests';\nimport { formatDateTime } from '../../utilities/formatDate';\nimport { modalResponseActions } from '../../store/modalResponse';\n\nfunction ApproveRequestModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const allRequests = useSelector((state) => state.requests.allRequests);\n    const selectedRequest = props?.selected;\n    const dispatch = useDispatch();\n\n    const successResponse = (res) => {\n        props.onClose(selectedRequest.id, true);\n        dispatch(modalResponseActions.setIsModalResAlertVisible());\n        dispatch(modalResponseActions.setModalAlertType('success'));\n        dispatch(modalResponseActions.setModalResMessage(res.data.message));\n        setIsLoading(false);\n        const filteredRequests = allRequests.filter(\n            (request) => request._id !== selectedRequest.id\n        );\n        dispatch(requestsActions.setAllRequests(filteredRequests));\n    };\n\n    const errResponse = (err) => {\n        dispatch(modalResponseActions.setIsModalResAlertVisible());\n        dispatch(modalResponseActions.setModalAlertType('error'));\n        dispatch(\n            modalResponseActions.setModalResMessage(\n                err.response\n                    ? err.response.data.message\n                    : 'Konekcija sa serverom nije uspostavljena'\n            )\n        );\n        setIsLoading(false);\n        props.onClose();\n    };\n\n    const approveRequestHandler = async () => {\n        setIsLoading(true);\n\n        await Service.approveRequest({\n            id: selectedRequest.id,\n            userId: selectedRequest.userId,\n            docId: selectedRequest.docId,\n            type: selectedRequest.type,\n        })\n            .then((res) => {\n                successResponse(res);\n            })\n            .catch((err) => {\n                errResponse(err);\n            });\n    };\n\n    const declineRequestHandler = async () => {\n        setIsLoading(true);\n\n        await Service.declineRequest({\n            id: selectedRequest.id,\n            userId: selectedRequest.userId,\n            docId: selectedRequest.docId,\n            type: selectedRequest.type,\n        })\n            .then((res) => {\n                successResponse(res);\n            })\n            .catch((err) => {\n                errResponse(err);\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Da li sigurno želite dozvoliti{' '}\n                        {`${\n                            selectedRequest?.type === 'access'\n                                ? 'pristup dokumentu'\n                                : 'preuzimanje dokumenta'\n                        }`}\n                        : {selectedRequest?.documentName}, korisniku:{' '}\n                        {selectedRequest?.requestedBy}?\n                    </DialogContentText>\n                    <DialogContentText component='span'>\n                        Razlog: {selectedRequest?.description}\n                    </DialogContentText>\n                    <Typography\n                        variant='caption'\n                        component='span'\n                        sx={{\n                            ml: -0.5,\n                            mt: 2,\n                            display: 'flex',\n                            alignItems: 'center',\n                            color: 'text.disabled',\n                        }}\n                    >\n                        <AccessTime />\n                        {formatDateTime(selectedRequest?.createdAt)}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Zatvori\n                    </Button>\n                    <Button\n                        onClick={declineRequestHandler}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Odbaci\n                    </Button>\n                    <Button\n                        onClick={approveRequestHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Prihvati\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ApproveRequestModal;\n","import React, { useRef, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport {\n    AddCircleOutlineOutlined,\n    DeleteOutline,\n    Cancel,\n    Add,\n} from '@mui/icons-material';\nimport './style.css';\n\nfunction UploadBox(props) {\n    const [files, setFiles] = useState(props?.document.files);\n\n    const document = props?.document;\n    const maxDocFileSize = 25000000;\n    const maxOtherFilesSize = 1000000000;\n    const addImageBox = useRef(null);\n\n    const isEditEnabled = props?.isEditEnabled;\n\n    const changeFileTypeHandler = () => {\n        switch (document?.fileType) {\n            case 'image':\n                return '.jpeg, .png, .jpg, .gif';\n            case 'video':\n                return '.mp4, .MPEG-4, .mkv, .avi, .flv, .mov';\n            case 'audio':\n                return '.mp3, .aac, .wav, .wma';\n            case 'document':\n                return '.pdf, .doc, .docx, .txt';\n            default:\n                break;\n        }\n    };\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: changeFileTypeHandler(),\n        onDrop: (acceptedFiles) => {\n            acceptedFiles.map((file) =>\n                Object.assign(file, {\n                    preview: URL.createObjectURL(file),\n                })\n            );\n            setFiles(acceptedFiles);\n            handleEditFiles(acceptedFiles);\n        },\n        maxFiles: document?.fileType === 'image' ? 5 : 1,\n        maxSize:\n            document?.fileType === 'document'\n                ? maxDocFileSize\n                : maxOtherFilesSize,\n        disabled: isEditEnabled ? false : true,\n    });\n\n    const removeImageFromFiles = (index) => {\n        const tmpFiles = [...files.filter((_, id) => id !== index)];\n        setFiles(tmpFiles);\n        handleEditFiles(tmpFiles);\n    };\n\n    const addMoreImages = () => {\n        if (isEditEnabled) {\n            addImageBox.current.click();\n        }\n    };\n\n    const addMoreFilesChangeHadler = (e) => {\n        if (e.target.files.length > 0) {\n            let editedImagesArr = [...files];\n            const newImage = e.target.files[0];\n            editedImagesArr.push(\n                Object.assign(newImage, {\n                    preview: URL.createObjectURL(newImage),\n                })\n            );\n            setFiles(editedImagesArr);\n            handleEditFiles(editedImagesArr);\n        }\n    };\n\n    const images = files.map((file, index) => (\n        <div className='imageOuter' key={index}>\n            {isEditEnabled && (\n                <Cancel\n                    style={{\n                        cursor: 'pointer',\n                        position: 'absolute',\n                        marginLeft: 80,\n                        marginTop: -20,\n                    }}\n                    onClick={() => removeImageFromFiles(index)}\n                />\n            )}\n\n            <div className='imageInner'>\n                <img\n                    src={file.preview ? file.preview : file}\n                    className='img'\n                    alt='post'\n                />\n            </div>\n        </div>\n    ));\n\n    const handleEditFiles = (editedFiles) => {\n        props.onEdit(editedFiles);\n    };\n\n    return (\n        <div className='uploadBox'>\n            <div\n                className={isEditEnabled ? 'dragArea' : 'dragArea disabled'}\n                {...getRootProps()}\n            >\n                <AddCircleOutlineOutlined className='icon' />\n                <h3>Dodaj dokument</h3>\n                <p>Povuci/izbaci</p>\n                <p>Podržani fajlovi {changeFileTypeHandler()}</p>\n                <p>\n                    maksimalno {document?.fileType === 'image' ? 5 : 1}{' '}\n                    fajl/fajlova po uploadu\n                </p>\n                {document?.fileType === 'document' && (\n                    <p>Maksimalna veličina fajla 25MB</p>\n                )}\n                <input type='file' hidden {...getInputProps()} />\n            </div>\n            {document?.fileType === 'image' ? (\n                <div className='imageContainer'>\n                    {images}\n                    {files.length > 0 && files.length < 5 && (\n                        <div\n                            className='imageOuter'\n                            style={{\n                                cursor: isEditEnabled\n                                    ? 'pointer'\n                                    : 'not-allowed',\n                            }}\n                            onClick={addMoreImages}\n                        >\n                            <input\n                                type='file'\n                                hidden\n                                accept='image/png, image/gif, image/jpeg, image/jpg'\n                                ref={addImageBox}\n                                onChange={addMoreFilesChangeHadler}\n                            />\n                            <Add\n                                style={{\n                                    position: 'absolute',\n                                    marginLeft: 32,\n                                    marginTop: 32,\n                                }}\n                            />\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div>\n                    {files.map((file, index) => {\n                        return (\n                            <List key={index}>\n                                <ListItem\n                                    secondaryAction={\n                                        <IconButton\n                                            edge='end'\n                                            aria-label='delete'\n                                            onClick={() =>\n                                                removeImageFromFiles(index)\n                                            }\n                                            disabled={\n                                                !isEditEnabled ? true : false\n                                            }\n                                        >\n                                            <DeleteOutline />\n                                        </IconButton>\n                                    }\n                                >\n                                    <ListItemText\n                                        primary={\n                                            file.path\n                                                ? file.path\n                                                : document.documentName\n                                        }\n                                    />\n                                </ListItem>\n                            </List>\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UploadBox;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Backdrop,\n    Stack,\n    Typography,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport Loader from '../Loader';\nimport { WarningAmber } from '@mui/icons-material';\n\nfunction DocumentRemoveModal(props) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    let docId = props?.selected;\n\n    const deleteDocumentHandler = async () => {\n        setIsLoading(true);\n\n        await Service.removeDocument(docId)\n            .then((res) => {\n                setIsLoading(false);\n                props.onClose(res.data, true);\n            })\n            .catch((err) => {\n                setIsLoading(false);\n                props.onClose(\n                    err.response\n                        ? err.response.data.message\n                        : 'Konekcija sa serverom nije uspostavljena',\n                    true\n                );\n            });\n    };\n\n    return (\n        <div>\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: 1500,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            <Dialog\n                open={props.visible}\n                onClose={props.onClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogContent>\n                    <Stack direction='row' spacing={1} sx={{ mb: 2 }}>\n                        <WarningAmber color='warning' />\n                        <Typography color='#e65100'>Upozorenje!</Typography>\n                    </Stack>\n                    <DialogContentText>\n                        Da li sigurno želite izbrisati ovaj dokument i sve\n                        njegove fajlove?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={props.onClose}\n                        variant='outlined'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Ne\n                    </Button>\n                    <Button\n                        onClick={deleteDocumentHandler}\n                        variant='contained'\n                        style={{ textTransform: 'none', fontWeight: 'bold' }}\n                    >\n                        Izbrisati\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DocumentRemoveModal;\n","import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n    Grid,\n    InputLabel,\n    OutlinedInput,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    Alert,\n    AlertTitle,\n    Snackbar,\n    Backdrop,\n} from '@mui/material';\nimport Service from '../../api/service';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Delete, Edit, HighlightOff } from '@mui/icons-material';\nimport Loader from '../Loader';\nimport './style.css';\nimport DocumentRemoveModal from '../DocumentRemoveModal';\n\nfunction DocumentInfoEdit(props) {\n    const { id } = useParams();\n    const [isFileAlertVisible, setIsFileAlertVisible] = useState(false);\n    const [isEditAlertVisible, setIsEditAlertVisible] = useState(false);\n    const [editMessage, setEditMessage] = useState('');\n    const [editAlertType, setEditAlertType] = useState('success');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isRemoveDocModalVisible, setIsRemoveDocModalVisible] =\n        useState(false);\n\n    const document = props?.document;\n    const isEditEnabled = props?.isEditEnabled;\n    const files = props?.files;\n    const navigate = useNavigate();\n\n    const validationSchema = Yup.object().shape({\n        documentName: Yup.string().required('Naziv dokumenta je obavezan'),\n        description: Yup.string().required('Opis dokumenta je obavezan'),\n        ownership: Yup.string().required('Vlasništvo dokumenta je obavezno'),\n        publicAccess: Yup.bool(),\n        location: Yup.string().required('Lokacija je obavezna'),\n        active: Yup.bool(),\n        keyWords: Yup.string().required('Ključne riječi su obavezne'),\n    });\n\n    const {\n        register,\n        control,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            documentName: document?.documentName,\n            description: document?.description,\n            ownership: document?.ownership,\n            publicAccess: document?.publicAccess,\n            location: document?.location,\n            active: document?.active,\n            keyWords: document?.keyWords,\n        },\n        resolver: yupResolver(validationSchema),\n    });\n\n    const handleEditDocument = async (values) => {\n        setIsLoading(true);\n        if (files.length > 0) {\n            setIsFileAlertVisible(false);\n            let formData = new FormData();\n\n            for (let file of files) {\n                formData.append('files', file);\n            }\n\n            Object.keys(values).forEach((key) =>\n                formData.append(key, values[key])\n            );\n\n            formData.append('docId', id);\n\n            await Service.editDocument(formData)\n                .then((res) => {\n                    setIsEditAlertVisible(true);\n                    setEditMessage(res.data.message);\n                    setEditAlertType('success');\n                    props.onShowPreview();\n                    props.onSwitchDisable();\n                    window.scrollTo({\n                        top: 0,\n                        behavior: 'smooth',\n                    });\n                })\n                .catch((err) => {\n                    setIsEditAlertVisible(true);\n                    setEditMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                    setEditAlertType('error');\n                });\n        } else {\n            setIsFileAlertVisible(true);\n        }\n        setIsLoading(false);\n    };\n\n    const handleOpenRemoveDocModal = () => {\n        setIsRemoveDocModalVisible(true);\n    };\n\n    const handleCloseRemoveDocModal = (data, isOk) => {\n        if (isOk) {\n            setIsEditAlertVisible(true);\n            setEditAlertType(data.status ? data.status : 'error');\n            setEditMessage(data.message ? data.message : data);\n            setTimeout(() => {\n                navigate('/dokumenti');\n            }, 1000);\n        }\n        setIsRemoveDocModalVisible(false);\n    };\n\n    return (\n        <div className='editDocumentInfo'>\n            {isEditAlertVisible && (\n                <Snackbar\n                    open={isEditAlertVisible}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    autoHideDuration={6000}\n                    onClose={() => setIsEditAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsEditAlertVisible(false)}\n                        severity={editAlertType}\n                        sx={{ width: '100%' }}\n                    >\n                        {editMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            <Backdrop\n                sx={{\n                    color: '#fff',\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                }}\n                open={isLoading}\n            >\n                <Loader />\n            </Backdrop>\n            {isFileAlertVisible && (\n                <Grid container justifyContent='center'>\n                    <Alert\n                        severity='error'\n                        action={\n                            <HighlightOff\n                                onClick={() => setIsFileAlertVisible(false)}\n                                style={{ cursor: 'pointer' }}\n                            />\n                        }\n                        style={{ marginBottom: 15 }}\n                    >\n                        <AlertTitle>\n                            Fajl prilog je obavezan, molimo uploadujte fajl\n                        </AlertTitle>\n                    </Alert>\n                </Grid>\n            )}\n            <Grid container spacing={2} columns={16} sx={{ padding: 1 }}>\n                <Grid item xs={16}>\n                    <InputLabel>Naziv dokumenta</InputLabel>\n                    <OutlinedInput\n                        id='documentName'\n                        fullWidth\n                        disabled={isEditEnabled ? false : true}\n                        {...register('documentName')}\n                        error={errors.documentName ? true : false}\n                    />\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.documentName?.message}\n                    </Typography>\n                </Grid>\n                <Grid item xs={16} sm={8}>\n                    <InputLabel>Opis</InputLabel>\n                    <OutlinedInput\n                        id='description'\n                        type='text'\n                        fullWidth\n                        required\n                        disabled={isEditEnabled ? false : true}\n                        variant='outlined'\n                        multiline\n                        rows={4}\n                        {...register('description', { required: true })}\n                        error={errors.description ? true : false}\n                    />\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.description?.message}\n                    </Typography>\n                </Grid>\n                <Grid item xs={16} sm={8}>\n                    <InputLabel>Vlasništvo</InputLabel>\n                    <OutlinedInput\n                        id='ownership'\n                        type='text'\n                        fullWidth\n                        required\n                        disabled={isEditEnabled ? false : true}\n                        variant='outlined'\n                        {...register('ownership', { required: true })}\n                        error={errors.ownership ? true : false}\n                    />\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.ownership?.message}\n                    </Typography>\n                    <FormControlLabel\n                        label='Javno dostupan'\n                        disabled={isEditEnabled ? false : true}\n                        control={\n                            <Controller\n                                name='publicAccess'\n                                control={control}\n                                defaultValue={false}\n                                render={({ field: { value, ...field } }) => (\n                                    <Checkbox\n                                        {...field}\n                                        disabled={isEditEnabled ? false : true}\n                                        checked={!!value}\n                                        sx={{\n                                            '& .MuiSvgIcon-root': {\n                                                fontSize: 28,\n                                            },\n                                        }}\n                                        onChange={(e, value) =>\n                                            field.onChange(value)\n                                        }\n                                    />\n                                )}\n                            />\n                        }\n                        labelPlacement='start'\n                        sx={{ marginTop: 1.5, marginLeft: 0 }}\n                    />\n                </Grid>\n                <Grid item xs={16} sm={8}>\n                    <InputLabel>Lokacija</InputLabel>\n                    <OutlinedInput\n                        id='location'\n                        type='text'\n                        fullWidth\n                        required\n                        disabled={isEditEnabled ? false : true}\n                        variant='outlined'\n                        {...register('location', { required: true })}\n                        error={errors.location ? true : false}\n                    />\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.location?.message}\n                    </Typography>\n                </Grid>\n                <Grid item xs={16} sm={8}>\n                    <FormControlLabel\n                        id='active'\n                        disabled={isEditEnabled ? false : true}\n                        label='Status'\n                        control={\n                            <Controller\n                                name='active'\n                                control={control}\n                                defaultValue={false}\n                                render={({ field: { value, ...field } }) => (\n                                    <Checkbox\n                                        {...field}\n                                        disabled={isEditEnabled ? false : true}\n                                        checked={!!value}\n                                        sx={{\n                                            '& .MuiSvgIcon-root': {\n                                                fontSize: 28,\n                                            },\n                                        }}\n                                        onChange={(e, value) =>\n                                            field.onChange(value)\n                                        }\n                                    />\n                                )}\n                            />\n                        }\n                        labelPlacement='start'\n                        sx={{ marginTop: 3.5, marginLeft: 0 }}\n                    />\n                </Grid>\n                <Grid item xs={16} sm={8}>\n                    <InputLabel>Ključne riječi</InputLabel>\n                    <OutlinedInput\n                        id='keyWords'\n                        type='text'\n                        fullWidth\n                        required\n                        disabled={isEditEnabled ? false : true}\n                        variant='outlined'\n                        {...register('keyWords', { required: true })}\n                        error={errors.keyWords ? true : false}\n                    />\n                    <Typography\n                        variant='inherit'\n                        color='red'\n                        sx={{\n                            font: '12px Roboto',\n                        }}\n                    >\n                        {errors.keyWords?.message}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Grid container justifyContent='center' spacing={2} columns={12}>\n                <Grid item xs={6} md={4}>\n                    <Button\n                        variant='contained'\n                        startIcon={<Delete />}\n                        style={{\n                            textTransform: 'none',\n                            fontWeight: 'bold',\n                            marginTop: 15,\n                            width: '100%',\n                        }}\n                        color='error'\n                        disabled={isEditEnabled ? false : true}\n                        onClick={handleOpenRemoveDocModal}\n                    >\n                        Izbriši\n                    </Button>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <Button\n                        variant='contained'\n                        startIcon={<Edit />}\n                        style={{\n                            textTransform: 'none',\n                            fontWeight: 'bold',\n                            marginTop: 15,\n                            width: '100%',\n                        }}\n                        disabled={isEditEnabled ? false : true}\n                        onClick={handleSubmit(handleEditDocument)}\n                    >\n                        Izmjeni\n                    </Button>\n                </Grid>\n            </Grid>\n            {isRemoveDocModalVisible && (\n                <DocumentRemoveModal\n                    visible={isRemoveDocModalVisible}\n                    onClose={handleCloseRemoveDocModal}\n                    selected={id}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default DocumentInfoEdit;\n","import React, { useState, useEffect } from 'react';\nimport { NavLink, useParams, useNavigate } from 'react-router-dom';\nimport {\n    Grid,\n    Breadcrumbs,\n    Typography,\n    Stack,\n    Snackbar,\n    Alert,\n    FormGroup,\n    FormControlLabel,\n    Switch,\n    Button,\n} from '@mui/material';\nimport { Edit, Home } from '@mui/icons-material';\nimport UploadDocumentBox from '../../components/UploadDocumentBox';\nimport Service from '../../api/service';\nimport Loader from '../../components/Loader';\nimport './style.css';\nimport DocumentInfoEdit from '../../components/DocumentInfoEdit';\n\nfunction EditDocumentPage() {\n    const { id } = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const [document, setDocument] = useState(null);\n    const [updatedFiles, setUpdatedFiles] = useState([]);\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [alertType, setAlertType] = useState('error');\n    const [isEditEnabled, setIsEditEnabled] = useState(false);\n    const [isPreviewBtnVisible, setIsPreviewBtnVisible] = useState(false);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchSelectedDocument = async () => {\n            await Service.getDocument({ id })\n                .then((res) => {\n                    setDocument(res.data.document);\n                    setUpdatedFiles(res.data.document.files);\n                    setIsLoading(false);\n                })\n                .catch((err) => {\n                    setAlertMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                    setIsAlertVisible(true);\n                    setAlertType('error');\n                    navigate('/dokumenti');\n                    setIsLoading(false);\n                });\n        };\n        fetchSelectedDocument();\n    }, [id, navigate]);\n\n    const handleSwitchChange = (event) => {\n        setIsEditEnabled(event.target.checked);\n    };\n\n    const handleEditFiles = (tmpFiles) => {\n        setUpdatedFiles(tmpFiles);\n    };\n\n    return (\n        <div>\n            {isLoading ? (\n                <Loader loaderColor={`black`} />\n            ) : (\n                <div className='editDocumentPage'>\n                    {isAlertVisible && (\n                        <Snackbar\n                            open={isAlertVisible}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                            autoHideDuration={6000}\n                            onClose={() => setIsAlertVisible(false)}\n                        >\n                            <Alert\n                                onClose={() => setIsAlertVisible(false)}\n                                severity={alertType}\n                                sx={{ width: '100%', font: '14px Roboto' }}\n                            >\n                                {alertMessage}\n                            </Alert>\n                        </Snackbar>\n                    )}\n                    <Grid container justifyContent='flex-start' sx={{ mb: 1 }}>\n                        <Breadcrumbs aria-label='breadcrumb'>\n                            <NavLink\n                                to='/'\n                                style={{\n                                    textDecoration: 'none',\n                                    color: 'grey',\n                                }}\n                            >\n                                <Home sx={{ mr: 0.5 }} fontSize='inherit' />\n                                Početna\n                            </NavLink>\n                            <Stack\n                                direction='row'\n                                spacing={2}\n                                style={{ color: '#393e46' }}\n                            >\n                                <Edit\n                                    sx={{ mr: -1.2, marginTop: 0.3 }}\n                                    fontSize='inherit'\n                                />\n                                <Typography>Izmjena dokumenta</Typography>\n                            </Stack>\n                        </Breadcrumbs>\n                    </Grid>\n                    <div className='editSwitch'>\n                        <Grid container justifyContent='flex-end'>\n                            {isPreviewBtnVisible && (\n                                <Button\n                                    variant='outlined'\n                                    style={{\n                                        textTransform: 'none',\n                                        fontWeight: 'bold',\n                                    }}\n                                    onClick={() => navigate(`/pregled/${id}`)}\n                                >\n                                    Pregled\n                                </Button>\n                            )}\n\n                            <FormGroup sx={{ mr: 1 }}>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            onChange={handleSwitchChange}\n                                            checked={isEditEnabled}\n                                        />\n                                    }\n                                    label='Izmjena dokumenta'\n                                    labelPlacement='start'\n                                />\n                            </FormGroup>\n                        </Grid>\n                    </div>\n\n                    <Grid container justifyContent='center'>\n                        <UploadDocumentBox\n                            document={document}\n                            isEditEnabled={isEditEnabled}\n                            onEdit={handleEditFiles}\n                        />\n                    </Grid>\n                    <Grid\n                        justifyContent='center'\n                        container\n                        spacing={2}\n                        columns={16}\n                        sx={{ padding: 1 }}\n                    >\n                        <DocumentInfoEdit\n                            document={document}\n                            isEditEnabled={isEditEnabled}\n                            files={updatedFiles}\n                            onShowPreview={() => setIsPreviewBtnVisible(true)}\n                            onSwitchDisable={() => setIsEditEnabled(false)}\n                        />\n                    </Grid>\n                    {/* <div className='actionButtons'>\n                       \n                    </div> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default EditDocumentPage;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Navigate,\n} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Login from '../pages/Login';\nimport Content from './Content';\nimport Signup from '../pages/Signup';\nimport PasswordReset from '../pages/PasswordReset';\nimport ValidateProfile from '../pages/ValidateProfile';\nimport ViewHistory from '../pages/ViewHistory';\nimport Home from '../pages/Home';\nimport Statistics from '../pages/Statistics';\nimport Profile from '../pages/Profile';\nimport NewDocument from '../pages/NewDocument';\nimport ViewDocumentPage from '../pages/ViewDocumentPage';\nimport DocumentsPage from '../pages/DocumentsPage';\nimport SearchPage from '../pages/SearchPage';\nimport RequestsPage from '../pages/RequestsPage';\nimport Service from '../api/service';\nimport { requestsActions } from '../store/requests';\nimport { Snackbar, Alert } from '@mui/material';\nimport ApproveRequestModal from '../components/ApproveRequestModal';\nimport EditDocumentPage from '../pages/EditDocumentPage';\nimport { modalResponseActions } from '../store/modalResponse';\n\nfunction Dashboard() {\n    const [isAlertVisible, setIsAlertVisible] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const isUserLoggedIn = useSelector((state) => state.auth.isAuthenticated);\n    const currentUser = useSelector((state) => state.auth.currentUser);\n    const isSearchStarted = useSelector((state) => state.docs.isSearchStarted);\n    const isRequestModalVisible = useSelector(\n        (state) => state.requests.isRequestModalVisible\n    );\n    const selectedRequest = useSelector(\n        (state) => state.requests.selectedRequest\n    );\n\n    const isModalResAlertVisible = useSelector(\n        (state) => state.modalResponse.isModalResAlertVisible\n    );\n    const modalResMessage = useSelector(\n        (state) => state.modalResponse.modalResMessage\n    );\n    const modalAlertType = useSelector(\n        (state) => state.modalResponse.modalAlertType\n    );\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const fetchAllRequests = async () => {\n            await Service.getAllRequests()\n                .then((res) => {\n                    dispatch(\n                        requestsActions.setAllRequests(res.data.allRequests)\n                    );\n                })\n                .catch((err) => {\n                    setIsAlertVisible(true);\n                    setErrorMessage(\n                        err.response\n                            ? err.response.data.message\n                            : 'Konekcija sa serverom nije uspostavljena'\n                    );\n                });\n        };\n        if (\n            isUserLoggedIn &&\n            (currentUser.role === 'editor' || currentUser.role === 'admin')\n        ) {\n            fetchAllRequests();\n        }\n    }, [dispatch, isUserLoggedIn, currentUser]);\n\n    const closeNotificationModal = () => {\n        dispatch(requestsActions.resetInitialState());\n    };\n    return (\n        <Fragment>\n            {isAlertVisible && (\n                <Snackbar\n                    open={isAlertVisible}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    autoHideDuration={8000}\n                    onClose={() => setIsAlertVisible(false)}\n                >\n                    <Alert\n                        onClose={() => setIsAlertVisible(false)}\n                        severity='error'\n                        sx={{ width: '100%' }}\n                    >\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n            {isModalResAlertVisible && (\n                <Snackbar\n                    open={isModalResAlertVisible}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    autoHideDuration={3000}\n                    onClose={() =>\n                        dispatch(\n                            modalResponseActions.setIsModalResAlertHidden()\n                        )\n                    }\n                >\n                    <Alert\n                        onClose={() =>\n                            dispatch(\n                                modalResponseActions.setIsModalResAlertHidden()\n                            )\n                        }\n                        severity={modalAlertType}\n                        sx={{ width: '100%' }}\n                    >\n                        {modalResMessage}\n                    </Alert>\n                </Snackbar>\n            )}\n\n            <Router>\n                <Routes>\n                    <Route\n                        path='/'\n                        element={isUserLoggedIn ? <Content /> : <Login />}\n                    >\n                        <Route index element={<Home />} />\n                        <Route\n                            path='/historijapregleda'\n                            element={\n                                currentUser?.role === 'reader' ||\n                                currentUser?.role === 'editor' ? (\n                                    <ViewHistory />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                        <Route\n                            path='/statistika'\n                            element={\n                                currentUser.role === 'admin' ||\n                                currentUser.role === 'editor' ? (\n                                    <Statistics />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                        <Route\n                            path='/dokumenti'\n                            element={\n                                currentUser.role === 'admin' ? (\n                                    <DocumentsPage />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                        <Route path='/profil' element={<Profile />} />\n                        <Route\n                            path='/novidokument'\n                            element={\n                                currentUser.role === 'admin' ||\n                                currentUser.role === 'editor' ? (\n                                    <NewDocument />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                        <Route\n                            path='/izmjena/:id'\n                            element={\n                                currentUser.role === 'admin' ||\n                                currentUser.role === 'editor' ? (\n                                    <EditDocumentPage />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                        <Route\n                            path='/pregled/:id'\n                            element={<ViewDocumentPage />}\n                        />\n                        <Route\n                            path='/pretraga'\n                            element={\n                                isSearchStarted ? (\n                                    <SearchPage />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                        <Route\n                            path='/zahtjevi'\n                            element={\n                                currentUser.role === 'editor' ||\n                                currentUser.role === 'admin' ? (\n                                    <RequestsPage />\n                                ) : (\n                                    <Navigate to='/' />\n                                )\n                            }\n                        />\n                    </Route>\n                    {/* <Route\n                        path='/'\n                        element={\n                            !isUserLoggedIn ? <Login /> : <Navigate to='/' />\n                        }\n                    /> */}\n                    <Route\n                        path='/registracija'\n                        element={\n                            !isUserLoggedIn ? <Signup /> : <Navigate to='/' />\n                        }\n                    />\n                    <Route\n                        path='/resetPassword/:resetToken'\n                        element={\n                            !isUserLoggedIn ? (\n                                <PasswordReset />\n                            ) : (\n                                <Navigate to='/' />\n                            )\n                        }\n                    />\n                    <Route\n                        path='/validateProfile/:validationToken'\n                        element={\n                            !isUserLoggedIn ? (\n                                <ValidateProfile />\n                            ) : (\n                                <Navigate to='/' />\n                            )\n                        }\n                    />\n                    <Route path='*' element={<Navigate to='/' />} />\n                </Routes>\n            </Router>\n            {isRequestModalVisible && (\n                <ApproveRequestModal\n                    visible={isRequestModalVisible}\n                    onClose={closeNotificationModal}\n                    selected={selectedRequest}\n                />\n            )}\n        </Fragment>\n    );\n}\n\nexport default Dashboard;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport Dashboard from './layout/Dashboard';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport { authActions } from './store/auth';\nimport { Alert, Backdrop, Snackbar } from '@mui/material';\nimport Loader from './components/Loader';\nimport Service from './api/service';\nimport './appStyle.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#393E46',\n    },\n  },\n});\n\nfunction App() {\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n\n    const isUserAutheticated = async () => {\n      // let csrfToken = '';\n      // await Service.getCsrfToken().then((res) => {\n      //     axios.defaults.headers.common['X-CSRF-Token'] =\n      //         res.data.csrfToken;\n      //     csrfToken = res.data.csrfToken;\n      // });\n\n      if (isLoggedIn === 'true') {\n        await Service.userAuthenticated()\n          .then((res) => {\n            dispatch(authActions.login());\n            dispatch(authActions.setCurrentUser(res.data.user));\n            localStorage.setItem('token', res.data.token);\n          })\n          .catch((err) => {\n            setErrorMessage(\n              err.response\n                ? err.response.data.message\n                : 'Konekcija sa serverom nije uspostavljena'\n            );\n            setIsAlertVisible(true);\n          });\n      }\n\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    };\n\n    isUserAutheticated();\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      {isLoading ? (\n        <Backdrop\n          sx={{\n            color: '#fff',\n            zIndex: (theme) => theme.zIndex.drawer + 1,\n            backgroundColor: '#fff',\n          }}\n          open={isLoading}\n        >\n          <Loader loaderColor={`black`} />\n        </Backdrop>\n      ) : (\n        <Fragment>\n          <div style={{ maxWidth: 400, margin: 'auto' }}>\n            {isAlertVisible && (\n              <Snackbar\n                open={isAlertVisible}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                autoHideDuration={6000}\n                onClose={() => setIsAlertVisible(false)}\n              >\n                <Alert\n                  onClose={() => setIsAlertVisible(false)}\n                  severity='error'\n                  sx={{ width: '100%', font: '14px Roboto' }}\n                >\n                  {errorMessage}\n                </Alert>\n              </Snackbar>\n            )}\n          </div>\n          <Dashboard />\n        </Fragment>\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport authReducer from './auth';\nimport docsReducer from './docs';\nimport requestsReducer from './requests';\nimport modalResponseReducer from './modalResponse';\n\nconst store = configureStore({\n    reducer: {\n        auth: authReducer,\n        docs: docsReducer,\n        requests: requestsReducer,\n        modalResponse: modalResponseReducer,\n    },\n    middleware: () =>\n        getDefaultMiddleware({\n            serializableCheck: false,\n        }),\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}